openapi: 3.0.1
info:
  contact:
    email: kontakt@finapi.io
    name: finAPI GmbH
    url: https://www.finapi.io/impressumrechtlicher-hinweis
  description: |
    <strong>RESTful API for Account Information Services (AIS) and Payment Initiation Services (PIS)</strong>

    The following pages give you some general information on how to use our APIs.<br/>
    The actual API services documentation then follows further below. You can use the menu to jump between API sections.
    <br/>
    <br/>
    This page has a built-in HTTP(S) client, so you can test the services directly from within this page,
    by filling in the request parameters and/or body in the respective services, and then hitting the TRY button.
    Note that you need to be authorized to make a successful API call. To authorize, refer to the 'Authorization'
    section of the API, or just use the OAUTH button that can be found near the TRY button.
    <br/>

    <h2 id="general-information">General information</h2>

    <h3 id="general-error-responses"><strong>Error Responses</strong></h3>
    When an API call returns with an error, then in general it has the structure shown in the following example:

    <pre>
    {
      "errors": [
        {
          "message": "Interface 'FINTS_SERVER' is not supported for this operation.",
          "code": "BAD_REQUEST",
          "type": "TECHNICAL"
        }
      ],
      "date": "2020-11-19 16:54:06.854",
      "requestId": "selfgen-312042e7-df55-47e4-bffd-956a68ef37b5",
      "endpoint": "POST /api/v1/bankConnections/import",
      "authContext": "1/21",
      "bank": "DEMO0002 - finAPI Test Redirect Bank"
    }
    </pre>

    If an API call requires an additional authentication by the user, HTTP code 510 is returned and the error response
    contains the additional "multiStepAuthentication" object, see the following example:

    <pre>
    {
      "errors": [
        {
          "message": "Es ist eine zusätzliche Authentifizierung erforderlich. Bitte geben Sie folgenden Code an: 123456",
          "code": "ADDITIONAL_AUTHENTICATION_REQUIRED",
          "type": "BUSINESS",
          "multiStepAuthentication": {
            "hash": "678b13f4be9ed7d981a840af8131223a",
            "status": "CHALLENGE_RESPONSE_REQUIRED",
            "challengeMessage": "Es ist eine zusätzliche Authentifizierung erforderlich. Bitte geben Sie folgenden Code an: 123456",
            "answerFieldLabel": "TAN",
            "redirectUrl": null,
            "redirectContext": null,
            "redirectContextField": null,
            "twoStepProcedures": null,
            "photoTanMimeType": null,
            "photoTanData": null,
            "opticalData": null
          }
        }
      ],
      "date": "2019-11-29 09:51:55.931",
      "requestId": "selfgen-45059c99-1b14-4df7-9bd3-9d5f126df294",
      "endpoint": "POST /api/v1/bankConnections/import",
      "authContext": "1/18",
      "bank": "DEMO0001 - finAPI Test Bank"
    }
    </pre>

    An exception to this error format are API authentication errors, where the following structure is returned:

    <pre>
    {
      "error": "invalid_token",
      "error_description": "Invalid access token: cccbce46-xxxx-xxxx-xxxx-xxxxxxxxxx"
    }
    </pre>

    <h3 id="general-paging"><strong>Paging</strong></h3>
    API services that may potentially return a lot of data implement paging.
    They return a limited number of entries within a "page". Further entries must be fetched with
    subsequent calls.
    <br/><br/>
    Any API service that implements paging provides the following input parameters:<br/>
    &bull; "page": the number of the page to be retrieved (starting with 1).<br/>
    &bull; "perPage": the number of entries within a page. The default and maximum value is stated
    in the documentation of the respective services.

    A paged response contains an additional "paging" object with the following structure:

    <pre>
    {
      ...
      ,
      "paging": {
        "page": 1,
        "perPage": 20,
        "pageCount": 234,
        "totalCount": 4662
      }
    }
    </pre>

    <h3 id="general-internationalization"><strong>Internationalization</strong></h3>
    The finAPI services support internationalization which means you can define the language you prefer
    for API service responses.
    <br/><br/>
    The following languages are available: German, English, Czech, Slovak.
    <br/><br/>
    The preferred language can be defined by providing the official HTTP <strong>Accept-Language</strong>
    header.
    <br/><br/>
    finAPI reacts on the official iso language codes &quot;de&quot;, &quot;en&quot;, &quot;cs&quot;
    and &quot;sk&quot; for the named languages.
    Additional subtags supported by the Accept-Language header may be provided,
    e.g. &quot;en-US&quot;, but are ignored.
    <br/>
    If no Accept-Language header is given, German is used as the default language.
    <br/><br/>
    Exceptions:<br/>
    &bull; Bank login hints and login fields are only available in the language of the bank and not
    being translated.<br/>
    &bull; Direct messages from the bank systems typically returned as BUSINESS errors will not
    be translated.<br/>
    &bull; BUSINESS errors created by finAPI directly are available in German and English.<br/>
    &bull; TECHNICAL errors messages meant for developers are mostly in English, but also may be
    translated.

    <h3 id="general-request-ids"><strong>Request IDs</strong></h3>
    With any API call, you can pass a request ID via a header with name "X-Request-Id".
    The request ID can be an arbitrary string with up to 255 characters.
    Passing a longer string will result in an error.
    <br/><br/>
    If you don't pass a request ID for a call, finAPI will generate a random ID internally.
    <br/><br/>
    The request ID is always returned back in the response of a service, as a header with
    name "X-Request-Id".
    <br/><br/>
    We highly recommend to always pass a (preferably unique) request ID, and include it into your
    client application logs whenever you make a request or receive a response
    (especially in the case of an error response). finAPI is also logging request IDs on its end.
    Having a request ID can help the finAPI support team to work more efficiently and solve tickets faster.

    <h3 id="general-overriding-http-methods"><strong>Overriding HTTP methods</strong></h3>
    Some HTTP clients do not support the HTTP methods PATCH or DELETE.
    If you are using such a client in your application, you can use a POST request instead with a special
    HTTP header indicating the originally intended HTTP method.
    <br/><br/>
    The header's name is <strong>X-HTTP-Method-Override</strong>. Set its value to either
    <strong>PATCH</strong> or <strong>DELETE</strong>.
    POST Requests having this header set will be treated either as PATCH or DELETE by the finAPI servers.
    <br/><br/>
    Example:
    <br/><br/>
    <strong>X-HTTP-Method-Override: PATCH</strong><br/>
    POST /api/v1/label/51<br/>
    {"name": "changed label"}<br/><br/>
    will be interpreted by finAPI as:<br/><br/>
    PATCH /api/v1/label/51<br/>
    {"name": "changed label"}<br/>

    <h3 id="general-user-metadata"><strong>User metadata</strong></h3>
    With the migration to PSD2 APIs, a new term called "User metadata"
    (also known as "PSU metadata") has been introduced to the API.
    This user metadata aims to inform the banking API if there was a real end-user
    behind an HTTP request or if the request was triggered by a system
    (e.g. by an automatic batch update). In the latter case, the bank may apply some restrictions
    such as limiting the number of HTTP requests for a single consent.
    Also, some operations may be forbidden entirely by the banking API.
    For example, some banks do not allow issuing a new consent without the end-user being involved.
    Therefore, it is certainly necessary and obligatory for the customer to provide the PSU metadata for such operations.
    <br/><br/>
    As finAPI does not have direct interaction with the end-user,
    it is the client application's responsibility to provide all the necessary
    information about the end-user. This must be done by sending additional headers with every request
    triggered on behalf of the end-user.
    <br/><br/>
    At the moment, the following headers are supported by the API:<br/>
    &bull; "PSU-IP-Address" - the IP address of the user's device.<br/>
    &bull; "PSU-Device-OS" - the user's device and/or operating system identification.<br/>
    &bull; "PSU-User-Agent" - the user's web browser or other client device identification.

    <h3 id="general-faq"><strong>FAQ</strong></h3>
    <strong>Is there a finAPI SDK?</strong>
    <br/>
    Currently we do not offer a native SDK, but there is the option to generate an SDK
    for almost any target language via OpenAPI. Use the 'Download SDK' button on this page for SDK
    generation.
    <br/>
    <br/>
    <strong>How can I enable finAPI's automatic batch update?</strong>
    <br/>
    Currently there is no way to set up the batch update via the API.
    Please contact support@finapi.io for this.
    <br/>
    <br/>
    <strong>Why do I need to keep authorizing when calling services on this page?</strong>
    <br/>
    This page is a "one-page-app". Reloading the page resets the OAuth authorization context.
    There is generally no need to reload the page, so just don't do it and your authorization will persist.
  title: finAPI Access (with deprecation)
  version: 1.151.1
servers:
- description: finAPI sandbox environment
  url: https://sandbox.finapi.io
tags:
- name: Authorization
- name: Mandator Administration
- name: TPP Certificates
- name: TPP Credentials
- name: Client Configuration
- name: Users
- name: Banks
- name: Bank Connections
- name: Accounts
- name: Transactions
- name: Securities
- name: Payments
- name: Standing Orders
- name: Categories
- name: Labels
- name: Notification Rules
- name: Web Forms
- name: Mocks and Tests
paths:
  /oauth/token:
    post:
      description: |-
        finAPI implements the OAuth 2.0 Standard for authorizing applications and users within applications. OAuth uses the terminology of clients and users. A client represents an application that calls finAPI services. A service call might be in the context of a user of the client (e.g.: getting a user's bank connections), or outside any user context (e.g.: editing your client's configuration, or creating a new user for your client). In any case, every service call must be authorized by an access_token. This service can be used to get such an access_token, for either one of the client's users, or for the client itself. Also, this service can be used to refresh the access_token of a user that has previously requested an access_token.<br/><br/>To get a token, you must always pass a valid client identifier and client secret (=client credentials). You can get free client credentials for the sandbox <a href='http://www.finapi.io/jetzt-testen/' target='_blank'>here</a>. Alternatively, you can also contact us at <a href='mailto:support@finapi.io'>support@finapi.io</a>.<br/><br/>The authorization process is similar for both a user within a client, and for the client itself: <br/>&bull; To authorize a client (i.e. application), use <code>grant_type=client_credentials</code><br/>&bull; To authorize a user, use <code>grant_type=password</code><br/><br/>If the given parameters are valid, the service will respond with the authorization data. <br/>Here is an example of a response when authorizing a user: <br/><pre>{
           "access_token": "yvMbx_TgwdYE0hgOVb8N4ZOvxOukqfjzYOGRZcJiCjQuRGkVIBfjjV3YG4zKTGiY2aPn2cQTGaQOT8uo5uo7_QOXts1s5UBSVuRHc6a8X30RrGBTyqV9h26SUHcZPNbZ",
           "token_type": "bearer",
           "refresh_token": "0b9KjiBVlZLz7a4HshSAIcFuscStiXT1VzT5mgNYwCQ_dWctTDsaIjedAhD1LpsOFJ7x6K8Emf8M3VOQkwNFR9FHijALYSQw2UeRwAC2MvrOKwfF1dHmOq5VEVYEaGf6",
           "expires_in": 3600,
           "scope": "all"
        }</pre><br/><p>Use the returned access_token for other service calls by sending it in a 'Authorization' header, with the word 'Bearer' in front of the token. Like this:</p><pre>Authorization: Bearer yvMbx_TgwdYE0hgOVb8N4ZOvxOukqfjzYOGRZcJiCjQuRGkVIBfjjV3YG4zKTGiY2aPn2cQTGaQOT8uo5uo7_QOXts1s5UBSVuRHc6a8X30RrGBTyqV9h26SUHcZPNbZ</pre><p><b>WARNING</b>: Sending the access_token as a request parameter is deprecated and will probably be no longer supported in the next release of finAPI. Please always send the access_token in the request header, as shown above.</p><p>By default, the access tokens have an expiration time of one hour (however, you can change this via the service PATCH /clientConfiguration). If a token has expired, then using the token for a service call will result in a HTTP code 401. To restore access you can simply get a new token (as it is described above) or use <code>grant_type=refresh_token</code> (which works for user-related tokens only). In the latter case you just have to pass the previously received <code>refresh_token</code> for the user.</p><p>If explicit user verification is required (the 'isUserAutoVerificationEnabled' flag in the client configuration is set to false, see Client Configuration) and the user that you want to authorize is not yet verified by the client (see Verify a User), then the service will respond with HTTP code 403. If the user is locked (see 'maxUserLoginAttempts' in the Client Configuration), the service will respond with HTTP code 423.</p><p>If the current role has no privileges to call a certain service (e.g. if a user tries to create a new user, or if a client tries to access user data outside of any user context), then the request will fail with the HTTP code 403.</p><p><b>IMPORTANT NOTES:</b><br/>&bull; Even though finAPI is not logging query parameters, it is still recommended to pass the parameters in the POST body instead of in the URL. Also, please set the Content-Type of your request to 'application/x-www-form-urlencoded' when calling this service.<br/>&bull; You should use this service only when you actually need a new token. As long as a token exists and has not expired, the service will always return the same token for the same credentials. Calling this service repeatedly with the same credentials contradicts the idea behind the tokens in OAuth, and will have a negative impact on the performance of your application. So instead of retrieving the same tokens over and over with this service, you should cache the tokens and re-use them as long as they have not expired - or at least as long as you're using the same tokens repeatedly, e.g. for the time of an active user session in your application.</p>
      operationId: getToken
      parameters:
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GetTokenParams'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
          description: Requested token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad user credentials, or invalid refresh_token, or unsupported
            grant_type
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Bad client credentials
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "423":
          content:
            application/json:
              examples:
                http423ResponseExample:
                  $ref: '#/components/examples/http423ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: User is locked
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      summary: Get tokens
      tags:
      - Authorization
  /oauth/revoke:
    post:
      description: |-
        An additional endpoint for the OAuth 2.0 Standard, which allows clients to notify finAPI that a previously obtained refresh_token or access_token is no longer required. A successful request will invalidate the given token. The revocation of a particular token may also cause the revocation of related tokens and the underlying authorization grant. For token_type_hint=access_token finAPI will invalidate only the given access_token. For token_type_hint=refresh_token, finAPI will invalidate the refresh token and all access tokens based on the same authorization grant. If the token_type_hint is not defined, finAPI will revoke all access and refresh tokens (if applicable) that are based on the same authorization grant.<br/><br/>Note that the service responds with HTTP status code 200 both if the token has been revoked successfully, and if the client submitted an invalid token.<br/><br/>Note also that the client's access_token is required to authenticate the revocation.<br/><br/>Here is an example of how to revoke a user's refresh_token (and therefore also his access tokens):<pre>Authorization: Bearer {client_access_token}
        POST /oauth/revoke?token={refresh_token}&token_type_hint=refresh_token</pre>
      operationId: revokeToken
      parameters:
      - description: The token that the client wants to get revoked
        explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      - description: A hint about the type of the token submitted for revocation
        explode: true
        in: query
        name: token_type_hint
        required: false
        schema:
          enum:
          - access_token
          - refresh_token
          type: string
        style: form
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Token was invalidated successfully or token was invalid (empty
            response body)
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The service does not support the revocation of the presented
            token type.
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Revoke a token
      tags:
      - Authorization
  /api/v1/users:
    delete:
      description: 'Delete the authorized user. Must pass the user''s access_token.
        ATTENTION: This deletes the user including all of his bank connections, accounts,
        balance data and transactions! THIS PROCESS CANNOT BE UNDONE! Note that a
        user cannot get deleted while any of his bank connections are currently busy
        (in the process of import, update, or transaction categorization). <p>Note:
        finAPI will send a notification about the deletion of the user to each of
        your clients that has a user synchronization callback URL set in its configuration.
        This also includes the client that is performing this request.</p>'
      operationId: deleteAuthorizedUser
      parameters:
      - description: Some HTTP clients do not support the HTTP methods PATCH or DELETE.
          If you are using such a client in your application, you can use a POST request
          instead with this header indicating the originally intended HTTP method.
          POST Requests having this  header set will be treated either as PATCH or
          DELETE by the finAPI servers.
        explode: false
        in: header
        name: X-HTTP-Method-Override
        required: false
        schema:
          enum:
          - PATCH
          - DELETE
          type: string
        style: simple
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: User deleted (empty response body)
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "423":
          content:
            application/json:
              examples:
                http423ResponseExample:
                  $ref: '#/components/examples/http423ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: User cannot get deleted at the moment as at least one of his
            bank connections is currently being imported or updated (either by the
            user or by finAPI's automatic batch update), or because the categorization
            of transactions is performed.
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Delete the authorized user
      tags:
      - Users
    get:
      description: Get the authorized user's data. Must pass the user's access_token.
        Only the authorized user can get his data, i.e. his access_token must be used.
        This service returns the user's password as 'XXXXX'.
      operationId: getAuthorizedUser
      parameters:
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Authorized user's data
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Get the authorized user
      tags:
      - Users
    patch:
      description: Edit the authorized user's data and settings. Must pass the user's
        access_token. Pass an empty string (but not null) to unset either the email
        or phone number. At least one field must have a non-null value in the request
        body. This service returns the user's password as 'XXXXX'.
      operationId: editAuthorizedUser
      parameters:
      - description: Some HTTP clients do not support the HTTP methods PATCH or DELETE.
          If you are using such a client in your application, you can use a POST request
          instead with this header indicating the originally intended HTTP method.
          POST Requests having this  header set will be treated either as PATCH or
          DELETE by the finAPI servers.
        explode: false
        in: header
        name: X-HTTP-Method-Override
        required: false
        schema:
          enum:
          - PATCH
          - DELETE
          type: string
        style: simple
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateParams'
        description: User's details
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Edited user data
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "422":
          content:
            application/json:
              examples:
                http422ResponseExample:
                  $ref: '#/components/examples/http422ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The automatic update cannot be enabled
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Edit the authorized user
      tags:
      - Users
    post:
      description: <p>Create a new user. Must pass your global (i.e. client) access_token.
        </p><p>This service returns the user's password as plain text. </p><p>The
        automatic update of the user's bank connections is disabled by default for
        any new user. User identifiers are regarded case-insensitive by finAPI.</p><p>Please
        note that finAPI generally has a restricted set of allowed characters for
        input fields. You can find the allowed characters <a href = "https://documentation.finapi.io/access/Allowed-Characters.2764767279.html">here</a>.
        If a field does not explicitly specify a set of allowed characters, then these
        are the characters that are allowed for the field. Some fields may specify
        a different set of characters, in which case this will be documented for the
        field (like for the 'id' field in this service).</p>
      operationId: createUser
      parameters:
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateParams'
        description: User's details
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Created user's data
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request (for instance if the given password is too short/long)
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "422":
          content:
            application/json:
              examples:
                http422ResponseExample:
                  $ref: '#/components/examples/http422ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: ENTITY_EXISTS if the given userId already exists; ILLEGAL_ENTITY_STATE
            if you passed 'isAutoUpdateEnabled' = true, but the automatic update can't
            be enabled for this user (as it is disabled for the client).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Create a new user
      tags:
      - Users
  /api/v1/users/verify/{userId}:
    post:
      description: Verify a user. User verification is only required when your client
        does not have auto-verification enabled (see field 'isUserAutoVerificationEnabled'
        in Client Configuration Resource). Must pass your global (i.e. client) access_token.
        Note that finAPI regards user identifiers case-insensitive.
      operationId: verifyUser
      parameters:
      - description: User's identifier
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: User verified (empty response body)
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "404":
          content:
            application/json:
              examples:
                http404ResponseExample:
                  $ref: '#/components/examples/http404ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: User not found
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "422":
          content:
            application/json:
              examples:
                http422ResponseExample:
                  $ref: '#/components/examples/http422ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: User already verified
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Verify a user
      tags:
      - Users
  /api/v1/users/requestPasswordChange:
    post:
      description: Request password change for a user. Must pass your global (i.e.
        client) access_token. Note that finAPI regards user identifiers case-insensitive.
      operationId: requestPasswordChange
      parameters:
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPasswordChangeParams'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordChangingResource'
          description: Details of change password request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "404":
          content:
            application/json:
              examples:
                http404ResponseExample:
                  $ref: '#/components/examples/http404ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: User not found
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "422":
          content:
            application/json:
              examples:
                http422ResponseExample:
                  $ref: '#/components/examples/http422ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: User is not verified
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Request password change
      tags:
      - Users
  /api/v1/users/executePasswordChange:
    post:
      description: 'Change the password of a user. Must pass your global (i.e. client)
        access_token.<br/><br/>Note: When changing the password of a user, all tokens
        that have been handed out for that user (for whatever client) will be revoked!
        Also note that finAPI regards user identifiers case-insensitive.'
      operationId: executePasswordChange
      parameters:
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecutePasswordChangeParams'
        required: true
      responses:
        "200":
          description: Password changed (empty response body)
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "404":
          content:
            application/json:
              examples:
                http404ResponseExample:
                  $ref: '#/components/examples/http404ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: User not found
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Execute password change
      tags:
      - Users
  /api/v1/transactions/{id}/split:
    post:
      description: Split a transaction into several logical sub-transactions. If the
        given transaction is split already, all its current sub-transactions will
        get deleted before the new sub-transactions will get created.
      operationId: splitTransaction
      parameters:
      - description: Transaction identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SplitTransactionsParams'
        description: Split transactions parameters
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: Split transaction
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "404":
          content:
            application/json:
              examples:
                http404ResponseExample:
                  $ref: '#/components/examples/http404ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Transaction, category or labels not found
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "422":
          content:
            application/json:
              examples:
                http422ResponseExample:
                  $ref: '#/components/examples/http422ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: ILLEGAL_ENTITY_STATE if the transaction you are trying to split
            is a sub-transaction; ILLEGAL_FIELD_VALUE if there is less than two sub-transactions
            specified, or the specified sub-transactions' amounts do not add up to
            the original transaction's amount
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Split a transaction
      tags:
      - Transactions
  /api/v1/transactions/{id}/restore:
    post:
      description: Restore a previously split transaction. Removes all of its sub-transactions.
      operationId: restoreTransaction
      parameters:
      - description: Transaction identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: Restored transaction
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "404":
          content:
            application/json:
              examples:
                http404ResponseExample:
                  $ref: '#/components/examples/http404ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Transaction not found
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "422":
          content:
            application/json:
              examples:
                http422ResponseExample:
                  $ref: '#/components/examples/http422ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The request transaction is a sub-transaction and can not be
            restored.
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Restore a transaction
      tags:
      - Transactions
  /api/v1/transactions/triggerCategorization:
    post:
      description: Triggers finAPI's background categorization process for all uncategorized
        transactions of the given bank connection(s) (or of all of the user's bank
        connections, if no bank connection identifiers are passed). The service returns
        as soon as the categorizations are scheduled. At this point, the bank connections
        will have their 'categorizationStatus' set to 'PENDING'. Use the service "Get
        a bank connection" or "Get all bank connections" to check when the categorization
        has finished (this is the case when the categorizationStatus has switched
        to 'READY').<br/><br/>Note that if at least one of the target bank connections
        is currently locked at the time when you call this service (i.e. the bank
        connection is currently being updated, or another categorization is already
        scheduled for it), then no categorization will be triggered at all and the
        service will respond with HTTP code 422.<br/><br/>Please also note:<br/>&bull;
        finAPI's background categorization process is executed automatically whenever
        you import or update a bank connection (though in case of update, it will
        categorize only the new transactions, and not re-run categorization for previously
        imported transactions). This means that in general you do not have to call
        this service after an import or update. Use this service only when you wish
        to re-run the categorization of all existing uncategorized transactions.<br/>&bull;
        if you wish to just manually assign categories to transactions, please use
        the service "Edit a transaction" or "Edit multiple transactions" instead.
      operationId: triggerCategorization
      parameters:
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TriggerCategorizationParams'
        description: Trigger categorization parameters
        required: true
      responses:
        "200":
          description: Categorizations have been scheduled (empty response body)
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "404":
          content:
            application/json:
              examples:
                http404ResponseExample:
                  $ref: '#/components/examples/http404ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Given bank connection(s) not found
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "422":
          content:
            application/json:
              examples:
                http422ResponseExample:
                  $ref: '#/components/examples/http422ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: At least one of the target bank connections is currently locked,
            or there are no bank connections to trigger categorization for
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Trigger categorization
      tags:
      - Transactions
  /api/v1/tppCredentials:
    get:
      description: Get and search all TPP credentials. Must pass the <a href='https://documentation.finapi.io/access/Application-management.2763423767.html'
        target='_blank'>mandator admin client</a>'s access_token. You can set optional
        search criteria to get only those TPP credentials that you are interested
        in. If you do not specify any search criteria, then this service functions
        as a 'get all' service.
      operationId: getAllTppCredentials
      parameters:
      - description: 'Returns only the TPP credentials belonging to those banks whose
          ''name'', ''blz'', or ''bic'' contains the given search string (the matching
          works case-insensitive). Note: If the given search string consists of several
          terms (separated by whitespace), then ALL of these terms must apply to a
          bank for it to get included into the result.'
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: Result page that you want to retrieve
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          type: integer
        style: form
      - description: Maximum number of records per page. By default it's 20. Can be
          at most 500.
        explode: true
        in: query
        name: perPage
        required: false
        schema:
          default: 20
          maximum: 500
          minimum: 1
          type: integer
        style: form
      - description: 'Determines the order of the results. You can order the results
          by ''label''. The default order for this service is ''label,asc''. The general
          format is: ''property[,asc|desc]'', with ''asc'' being the default value.'
        explode: true
        in: query
        name: order
        required: false
        schema:
          items:
            default: label,asc
            type: string
          type: array
        style: form
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageableTppCredentialResources'
          description: Requested TPP credentials
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Get all TPP credentials
      tags:
      - TPP Credentials
    post:
      description: 'Upload TPP credentials for a TPP Authentication Group. Must pass
        the <a href=''https://documentation.finapi.io/access/Application-management.2763423767.html''
        target=''_blank''>mandator admin client</a>''s access_token. '
      operationId: createTppCredential
      parameters:
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TppCredentialsParams'
        description: Parameters of a new set of TPP credentials
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TppCredentials'
          description: Uploaded TPP credentials
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "422":
          content:
            application/json:
              examples:
                http422ResponseExample:
                  $ref: '#/components/examples/http422ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: UNKNOWN_ENTITY if the specified TPP authentication group does
            not exist;<br/>ILLEGAL_FIELD_VALUE if the given validity dates are invalid
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Upload TPP credentials
      tags:
      - TPP Credentials
  /api/v1/tppCertificates:
    get:
      description: 'Returns all TPP certificates that you have uploaded via ''Upload
        TPP certificate'' service. Must pass the <a href=''https://documentation.finapi.io/access/Application-management.2763423767.html''
        target=''_blank''>mandator admin client</a>''s access_token. '
      operationId: getAllCertificates
      parameters:
      - description: Result page that you want to retrieve
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          type: integer
        style: form
      - description: Maximum number of records per page. By default it's 20. Can be
          at most 500.
        explode: true
        in: query
        name: perPage
        required: false
        schema:
          default: 20
          maximum: 500
          minimum: 1
          type: integer
        style: form
      - description: 'Determines the order of the results. You can order the results
          by ''label''. The default order for this service is ''label,asc''. The general
          format is: ''property[,asc|desc]'', with ''asc'' being the default value.'
        explode: true
        in: query
        name: order
        required: false
        schema:
          items:
            default: label,asc
            type: string
          type: array
        style: form
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageableTppCertificateList'
          description: Requested TPP certificates
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Get all TPP certificates
      tags:
      - TPP Certificates
    post:
      description: Upload a new TPP certificate. Must pass the <a href='https://documentation.finapi.io/access/Application-management.2763423767.html'
        target='_blank'>mandator admin client</a>'s access_token. QWAC certificate
        is used to verify your identity by the bank during the TLS handshake.<br/>QsealC
        certificate is used to sign the requests to the bank.
      operationId: createNewCertificate
      parameters:
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TppCertificateParams'
        description: Create new TPP certificate parameters
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TppCertificate'
          description: Uploaded TPP certificate
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "422":
          content:
            application/json:
              examples:
                http422ResponseExample:
                  $ref: '#/components/examples/http422ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: TPP certificate is invalid or expired
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Upload TPP certificate
      tags:
      - TPP Certificates
  /api/v1/tests/mockBatchUpdate:
    post:
      description: This service can be used to mock an update of one or several bank
        connections by letting you simulate finAPI's communication with a bank server.
        More specifically, you can provide custom balances and transactions for existing
        accounts and finAPI will import that data into the accounts as if the data
        had been delivered by a real bank server during a real update. The idea of
        this service is to allow you to create accounts with specific data in them
        so that you can test your application in different scenarios.<br/><br/>You
        can also test your application's reception and processing of push notifications
        with this service, by enabling the 'triggerNotifications' flag in your request.
        When this flag is enabled, finAPI will send notifications to your application
        based on the notification rules that are set up for the user and on the data
        you provided in the request, the same way as it works with finAPI's real automatic
        batch update process.<br/><br/>Note that this service behaves mostly like
        calling the bank connection update service, meaning that it returns immediately
        after having asynchronously started the update process, and also meaning that
        you have to check the status of the updated bank connections and accounts
        to find out when the update has finished and what the result is. As you can
        update several bank connections at once, this service is closer to how finAPI's
        automatic batch updates work as it is to the manual update service though.
        Because of this, the result of the mocked bank connection updates will be
        stored in the 'lastAutoUpdate' field of the bank connection interface and
        not in the 'lastManualUpdate' field. Also, just like with the real batch update,
        any bank connection that you use with this service must have a PIN stored
        (even though it is not actually forwarded to any bank server).<br/><br/>Also
        note that this service may be called only when the user's automatic bank connection
        updates are disabled, to make sure that the mock updates cannot intervene
        with a real update (please see the User field 'isAutoUpdateEnabled'). Also,
        it is currently not possible to mock data for security accounts with this
        service, as you can only pass transactions, but not security positions.<br/><br/>Please
        be aware that you will 'mess up' the accounts when using this service, meaning
        that when you perform a real update of accounts that you have previously updated
        with this service, finAPI might detect inconsistencies in the data that exists
        in its database and the data that is reported by the bank server, and try
        to fix this with the insertion of an adjusting entry ('Zwischensaldo' transaction).
        Also, new real transactions might not get imported as finAPI could match them
        to mocked transactions. Also note that transactions older than 89 days from
        the current date will be skipped. <b>THIS SERVICE IS MEANT FOR TESTING PURPOSES
        DURING DEVELOPMENT OF YOUR APPLICATION ONLY!</b> This is why it will work
        only on the sandbox or alpha environments. Calling it on the live environment
        will result in <b>403 Forbidden</b>.
      operationId: mockBatchUpdate
      parameters:
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MockBatchUpdateParams'
        description: Data for mock bank connection updates
        required: true
      responses:
        "200":
          description: Mock batch update has been started (empty response body)
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "404":
          content:
            application/json:
              examples:
                http404ResponseExample:
                  $ref: '#/components/examples/http404ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bank connection or account not found; or account does not belong
            to the bank connection it is nested in.
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "422":
          content:
            application/json:
              examples:
                http422ResponseExample:
                  $ref: '#/components/examples/http422ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: At least one of the given account identifiers refers to a security
            account; or at least one of the given bank connections is currently locked
            due to another running update; or not all given bank connections have
            a PIN stored; or the number of transactions exceeds the limit of 1000.<br/>ILLEGAL_FIELD_VALUE
            if the given transaction type is invalid.
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Mock batch update
      tags:
      - Mocks and Tests
  /api/v1/tests/checkCategorization:
    post:
      description: 'This service can be used to check the categorization for a given
        set of transactions, without the need of having the transactions imported
        in finAPI. You must pass the user''s access_token.<br/><br/>Note that the
        result of the categorization is generally the same as if the transactions
        were actually imported (the service regards the user-specific categorization
        rules), but there is one exception: If you pass a ''mcCode'', this will also
        be regarded during categorization - which is not the case when transactions
        get categorized during import (because most banks do not deliver this field).'
      operationId: checkCategorization
      parameters:
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckCategorizationData'
        description: Transactions data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategorizationCheckResults'
          description: List of given transaction IDs, mapped to their found category
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "422":
          content:
            application/json:
              examples:
                http422ResponseExample:
                  $ref: '#/components/examples/http422ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The number of transactions exceeds the maximum limit
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Check categorization
      tags:
      - Mocks and Tests
  /api/v1/standingOrders:
    get:
      description: Get standing orders of the user that is authorized by the access_token.
        Must pass the user's access_token.<br/><br/><br/>Web Form 2.0 customers should
        also use this endpoint to learn about the status of the standing order initiation.
        (The Standing Order ID can be found in the payload of the API response from
        the relevant Web Form 2.0 API endpoint).
      operationId: getStandingOrders
      parameters:
      - description: A comma-separated list of standing order identifiers. If specified,
          then only standing orders whose identifier is matching any of the given
          identifiers will be regarded. The maximum number of identifiers is 1000.
        explode: true
        in: query
        name: ids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - description: A comma-separated list of account identifiers. If specified,
          then only standing orders that relate to the given account(s) will be regarded.
          The maximum number of identifiers is 1000.
        explode: true
        in: query
        name: accountIds
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - description: If specified, then only those standing orders are regarded whose
          (absolute) total amount is equal or greater than the given amount will be
          regarded. The value must be a positive (absolute) amount.
        explode: true
        in: query
        name: minAmount
        required: false
        schema:
          type: number
        style: form
      - description: If specified, then only those standing orders are regarded whose
          (absolute) total amount is equal or less than the given amount will be regarded.
          Value must be a positive (absolute) amount.
        explode: true
        in: query
        name: maxAmount
        required: false
        schema:
          type: number
        style: form
      - description: 'A comma-separated list of standing order statuses. If provided,
          then only standing orders whose status is matching any of the given statuses
          will be returned. Allowed values: ''OPEN'', ''PENDING'', ''SUCCESSFUL'',
          ''NOT_SUCCESSFUL'' or ''DISCARDED''. Example: ''OPEN,PENDING''.'
        explode: true
        in: query
        name: status
        required: false
        schema:
          items:
            enum:
            - OPEN
            - PENDING
            - SUCCESSFUL
            - NOT_SUCCESSFUL
            - DISCARDED
            type: string
          type: array
        style: form
      - description: Result page that you want to retrieve
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          type: integer
        style: form
      - description: Maximum number of records per page. By default it's 20. Can be
          at most 500.
        explode: true
        in: query
        name: perPage
        required: false
        schema:
          default: 20
          maximum: 500
          minimum: 1
          type: integer
        style: form
      - description: 'Determines the order of the results. You can use the following
          fields for ordering the response: ''id'', ''amount'', ''requestDate'', ''requestCompletionDate''.
          The default order for all services is ''id,asc''.'
        explode: true
        in: query
        name: order
        required: false
        schema:
          items:
            default: id,ASC
            type: string
          type: array
        style: form
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageableStandingOrderResources'
          description: List of requested standing orders
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Authentication required
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Get standing orders
      tags:
      - Standing Orders
    post:
      description: To use this service PIS must be enabled by our customer support
        for your client.<br/><br/>If you are unlicensed, or licensed but using finAPI’s
        Web Form, this endpoint is not relevant to you. Please use the endpoint <a
        href='?product=web_form_2.0#post-/api/webForms/standingOrder' target='_blank'>
        here</a> to initiate (create and also submit) standing orders!<br/><br/>Note
        that this service only creates a standing order resource in finAPI and there
        is no bank communication involved.<br/>To submit the standing order to the
        bank, call the 'Submit standing order' service
      operationId: createStandingOrder
      parameters:
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStandingOrderParams'
        description: Create standing order parameters
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandingOrder'
          description: Created standing order
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "404":
          content:
            application/json:
              examples:
                http404ResponseExample:
                  $ref: '#/components/examples/http404ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Given account not found
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "422":
          content:
            application/json:
              examples:
                http422ResponseExample:
                  $ref: '#/components/examples/http422ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: ILLEGAL_FIELD_VALUE:<br/> - if the amount is negative;<br/>
            - if the given start date is not in the future;<br/> - if the frequency
            has an incorrect value;<br/>ILLEGAL_ENTITY_STATE:<br/> - if the mandator
            is not configured correctly to use this service. Please contact our support;<br/>UNSUPPORTED_ORDER:<br/>
            - if the IBAN relates to the bank is unknown or not available;
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Create a standing order
      tags:
      - Standing Orders
  /api/v1/standingOrders/submit:
    post:
      description: To use this service PIS must be enabled by our customer support
        for your client.<br/><br/>If you are unlicensed, or licensed but using finAPI’s
        Web Form, this endpoint is not relevant to you. Please use the endpoint <a
        href='?product=web_form_2.0#post-/api/webForms/standingOrder' target='_blank'>
        here</a> to initiate (create and also submit) standing orders!<br/><br/>Submit
        a standing order to the bank which was previously created with the 'Create
        a standing order' service.<br/><br/>Before you submit the standing order,
        please check that the given bank interface supports the required PIS capabilities,
        otherwise the standing order could get rejected.<br/>In case the standing
        order is initiated from a given IBAN, please refer to the field BankInterface.paymentCapabilities
        to be sure the standing order you are creating is currently supported by the
        bank.<br/><br/>Usually banks require a multi-step authentication to authorize
        the standing order. In this case, and if the finAPI Web Form flow is not used,
        the service will respond with HTTP code 510 and an error object containing
        a multiStepAuthentication object which describes the necessary next authentication
        steps. You must then retry the service call, passing the same arguments plus
        an additional 'multiStepAuthentication' element.<br/>Please refer to the description
        of the HTTP 510 error code below and the documentation of the 'MultiStepAuthenticationCallback'
        response object for details.<br/><br/><b>ATTENTION:</b> For XS2A interface
        additional headers must be included in the request if the end user is involved.
        Please refer to the <a href='#general-user-metadata'>User metadata</a> section
        under 'General Information' of the API documentation.
      operationId: submitStandingOrder
      parameters:
      - description: The IP address of the user's device. This header will be forwarded
          to the bank if the 'XS2A' interface is used.
        explode: false
        in: header
        name: PSU-IP-Address
        required: false
        schema:
          format: ipv4
          type: string
        style: simple
      - description: The user's device and/or operating system identification. This
          header will be forwarded to the bank if the 'XS2A' interface is used.
        explode: false
        in: header
        name: PSU-Device-OS
        required: false
        schema:
          type: string
        style: simple
      - description: The user's web browser or other client device identification.
          This header will be forwarded to the bank if the 'XS2A' interface is used.
        explode: false
        in: header
        name: PSU-User-Agent
        required: false
        schema:
          type: string
        style: simple
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitStandingOrderParams'
        description: Parameters for standing order submission
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandingOrder'
          description: Submitted standing order with updated status
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "404":
          content:
            application/json:
              examples:
                http404ResponseExample:
                  $ref: '#/components/examples/http404ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Given standing order not found
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "422":
          content:
            application/json:
              examples:
                http422ResponseExample:
                  $ref: '#/components/examples/http422ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: ILLEGAL_ENTITY_STATE:<br/> - if finAPI supports only web scraping
            for the bank, but web scraping is disabled for the client;<br/> - if not
            all login fields required by the bank connection interface are provided;<br/>
            - if the given interface doesn't exist for the account or has deprecated
            status;<br/>ILLEGAL_FIELD_VALUE:<br/> - if 'redirectUrl' is not given,
            but the bank connection's interface has the REDIRECT_APPROACH property
            set;<br/> - if 'redirectUrl' is given, but the bank connection's interface
            doesn't have the REDIRECT_APPROACH property set or the Web Form flow is
            used;<br/>ILLEGAL_ENTITY_STATE:<br/> - if the mandator is not configured
            correctly to use this service. Please contact our support;<br/>UNSUPPORTED_ORDER:<br/>
            - if the given interface doesn't have the required capabilities to submit
            the standing order; or if the standing order relates to a bank that is
            unknown or not available to you.<br/>UNSUPPORTED_FEATURE:<br/> - if the
            bank rejects the standing orders because it requires a feature that the
            bank does not support;<br/>BANK_SERVER_REJECTION:<br/>- if the bank rejects
            the standing order for an unexpected/unknown reason
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "501":
          content:
            application/json:
              examples:
                http501ResponseExample:
                  $ref: '#/components/examples/http501ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The bank associated with the standing order is currently not
            supported by finAPI
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "510":
          content:
            application/json:
              examples:
                http510ResponseExample:
                  $ref: '#/components/examples/http510ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: In case the bank requires an additional authentication by the
            user. The error's 'multiStepAuthentication' field contains further instructions.
            The actual MSA flow depends on the bank and may contain following statuses:<br/><br/>TWO_STEP_PROCEDURE_REQUIRED
            means that the bank has requested an SCA method selection for the user.
            In this case, the service should be recalled with a chosen TSP-ID set
            to the 'twoStepProcedureId' field.<br/><br/>CHALLENGE_RESPONSE_REQUIRED
            means that the bank has requested a challenge code for the previously
            given TSP (SCA). This status can be completed by setting the 'challengeResponse'
            field.<br/><br/>REDIRECT_REQUIRED means that the user must be redirected
            to the bank's website, where the authentication can be finished.<br/><br/>DECOUPLED_AUTH_REQUIRED
            means that the bank has asked for the decoupled authentication. In this
            case, the 'decoupledCallback' field must be set to true to complete the
            authentication.<br/><br/>DECOUPLED_AUTH_IN_PROGRESS means that the bank
            is waiting for the completion of the decoupled authentication by the user.
            Until this is done, the service should be recalled at most every 5 seconds
            with the 'decoupledCallback' field set to 'true'. Once the decoupled authentication
            is completed by the user, the service returns a successful response.
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Submit standing order
      tags:
      - Standing Orders
  /api/v1/payments/submit:
    post:
      description: To use this service PIS must be enabled by our customer support
        for your client.<br/><br/>If you are unlicensed, or licensed but using finAPI’s
        Web Form, this endpoint is not relevant to you. The workflow has been simplified.
        Please use the endpoint <a href='?product=web_form_2.0#tag--Payment-Initiation-Services'
        target='_blank'>here</a> to initiate (create and also submit) payments (money
        transfers + direct debits)!<br/><br/>Submit a payment to the bank which was
        previously created with either the createMoneyTransfer or createDirectDebit
        service.<br/><br/>Before you submit the payment, please check that the given
        bank interface supports the required payment capabilities, otherwise the payment
        could get rejected.<br/>If the account has been imported via finAPI, then
        you could check the capabilities on the account level. Please refer to the
        field AccountInterface.capabilities.<br/>In case the payment is initiated
        from a given IBAN, please refer to the field BankInterface.paymentCapabilities
        to be sure the payment type you are creating is currently supported by the
        bank.<br/><br/>Usually banks require a multi-step authentication to authorize
        the payment. In this case, and if the finAPI Web Form flow is not used, the
        service will respond with HTTP code 510 and an error object containing a multiStepAuthentication
        object which describes the necessary next authentication steps. You must then
        retry the service call, passing the same arguments plus an additional 'multiStepAuthentication'
        element.<br/>Please refer to the description of the HTTP 510 error code below
        and the documentation of the 'MultiStepAuthenticationCallback' response object
        for details.<br/><br/>NOTE (THIS LOGIC IS DEPRECATED AND WILL BE REMOVED):<br/>Depending
        on your license, this service may respond with HTTP code 451, containing an
        error message with an identifier of Web Form in it. In addition to that the
        response will also have included a 'Location' header, which contains the URL
        to the Web Form. In this case, you must forward your user to finAPI's Web
        Form.<br/><br/><b>ATTENTION:</b> For XS2A interface additional headers must
        be included in the request if the end user is involved. Please refer to the
        <a href='#general-user-metadata'>User metadata</a> section under 'General
        Information' of the API documentation.
      operationId: submitPayment
      parameters:
      - description: The IP address of the user's device. This header will be forwarded
          to the bank if the 'XS2A' interface is used.
        explode: false
        in: header
        name: PSU-IP-Address
        required: false
        schema:
          format: ipv4
          type: string
        style: simple
      - description: The user's device and/or operating system identification. This
          header will be forwarded to the bank if the 'XS2A' interface is used.
        explode: false
        in: header
        name: PSU-Device-OS
        required: false
        schema:
          type: string
        style: simple
      - description: The user's web browser or other client device identification.
          This header will be forwarded to the bank if the 'XS2A' interface is used.
        explode: false
        in: header
        name: PSU-User-Agent
        required: false
        schema:
          type: string
        style: simple
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitPaymentParams'
        description: Parameters for payment submission
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: Submitted payment with updated status
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "404":
          content:
            application/json:
              examples:
                http404ResponseExample:
                  $ref: '#/components/examples/http404ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Given payment not found
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "422":
          content:
            application/json:
              examples:
                http422ResponseExample:
                  $ref: '#/components/examples/http422ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: ILLEGAL_ENTITY_STATE:<br/> - if finAPI supports only web scraping
            for the bank, but web scraping is disabled for the client;<br/> - if not
            all login fields required by the bank connection interface are provided;<br/>
            - if the given interface doesn't exist for the account or has deprecated
            status;<br/>ILLEGAL_FIELD_VALUE:<br/> - if 'redirectUrl' is not given,
            but the bank connection's interface has the REDIRECT_APPROACH property
            set;<br/> - if 'redirectUrl' is given, but the bank connection's interface
            doesn't have the REDIRECT_APPROACH property set or the Web Form flow is
            used;<br/>ILLEGAL_ENTITY_STATE:<br/> - if the mandator is not configured
            correctly to use this service. Please contact our support;<br/>UNSUPPORTED_ORDER:<br/>
            - if the given interface doesn't have the required capabilities to submit
            the payment; or if the payment relates to a bank that is unknown or not
            available to you.<br/>UNSUPPORTED_FEATURE:<br/> - if the bank rejects
            the payment because it requires a feature that the bank does not support
            (e.g. FUTURE_DATED_PAYMENT);<br/>BANK_SERVER_REJECTION:<br/>- if the bank
            rejects the payment for an unexpected/unknown reason
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "451":
          content:
            application/json:
              examples:
                http451ResponseExample:
                  $ref: '#/components/examples/http451ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: THIS HTTP RESPONSE CODE IS DEPRECATED AND WILL BE REMOVED.<br/>Instead
            please refer to our Web Form offering <a href="?product=web_form_2.0">here</a>.<br/><br/>In
            case the user must enter credentials within finAPI's Web Form.
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
            Location:
              $ref: '#/components/headers/Location'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "501":
          content:
            application/json:
              examples:
                http501ResponseExample:
                  $ref: '#/components/examples/http501ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The bank associated with the payment is currently not supported
            by finAPI
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "510":
          content:
            application/json:
              examples:
                http510ResponseExample:
                  $ref: '#/components/examples/http510ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: In case the bank requires an additional authentication by the
            user. The error's 'multiStepAuthentication' field contains further instructions.
            The actual MSA flow depends on the bank and may contain following statuses:<br/><br/>TWO_STEP_PROCEDURE_REQUIRED
            means that the bank has requested an SCA method selection for the user.
            In this case, the service should be recalled with a chosen TSP-ID set
            to the 'twoStepProcedureId' field.<br/><br/>CHALLENGE_RESPONSE_REQUIRED
            means that the bank has requested a challenge code for the previously
            given TSP (SCA). This status can be completed by setting the 'challengeResponse'
            field.<br/><br/>REDIRECT_REQUIRED means that the user must be redirected
            to the bank's website, where the authentication can be finished.<br/><br/>DECOUPLED_AUTH_REQUIRED
            means that the bank has asked for the decoupled authentication. In this
            case, the 'decoupledCallback' field must be set to true to complete the
            authentication.<br/><br/>DECOUPLED_AUTH_IN_PROGRESS means that the bank
            is waiting for the completion of the decoupled authentication by the user.
            Until this is done, the service should be recalled at most every 5 seconds
            with the 'decoupledCallback' field set to 'true'. Once the decoupled authentication
            is completed by the user, the service returns a successful response.
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Submit payment
      tags:
      - Payments
  /api/v1/payments/moneyTransfers:
    post:
      description: To use this service PIS must be enabled by our customer support
        for your client.<br/><br/>If you are unlicensed, or licensed but using finAPI’s
        Web Form, this endpoint is not relevant to you. The workflow has been simplified.
        Please use the endpoint <a href='?product=web_form_2.0#tag--Payment-Initiation-Services'
        target='_blank'>here</a> to initiate (create and also submit) money transfers!<br/><br/>Create
        a payment for a single or collective money transfer order.<br/>Note that this
        service only creates a payment resource in finAPI and there is no bank communication
        involved.<br/>To submit the money transfer to the bank, call the 'Submit payment'
        service.<br/><br/>A collective money transfer contains more than one order
        in the 'moneyTransfers' list. It is specially handled by the bank and can
        be booked by the bank either as one booking for each order, or as a single
        cumulative booking. The preferred booking type can be given with the 'singleBooking'
        flag, but it is not guaranteed that every bank will regard this flag.
      operationId: createMoneyTransfer
      parameters:
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMoneyTransferParams'
        description: Create money transfer parameters
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: Created payment
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "404":
          content:
            application/json:
              examples:
                http404ResponseExample:
                  $ref: '#/components/examples/http404ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Given account not found
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "422":
          content:
            application/json:
              examples:
                http422ResponseExample:
                  $ref: '#/components/examples/http422ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: ILLEGAL_FIELD_VALUE:<br/> - if the given execution date is
            invalid;<br/>ILLEGAL_ENTITY_STATE:<br/> - if the mandator is not configured
            correctly to use this service. Please contact our support;<br/>UNSUPPORTED_ORDER:<br/>-
            if the request doesn't fit to the capabilities of any of the interfaces
            connected to the given account; or if the given IBAN relates to a bank
            that is unknown or not available to you (you may want to use the 'Get
            and search all banks' service to check the IBAN prior to calling this
            service);
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Create money transfer
      tags:
      - Payments
  /api/v1/payments/directDebits:
    post:
      description: To use this service PIS must be enabled by our customer support
        for your client.<br/><br/>If you are unlicensed, or licensed but using finAPI’s
        Web Form, this endpoint is not relevant to you. The workflow has been simplified.
        Please use the endpoint <a href='?product=web_form_2.0#post-/api/webForms/directDebitWithAccountId'
        target='_blank'>here</a> to initiate (create and also submit) direct debits!<br/><br/>Create
        a payment for a single or collective direct debit order.<br/>Note that this
        service only creates a payment resource in finAPI and there is no bank communication
        involved.<br/>To submit the direct debit to the bank, please call the submitPayment
        service afterwards.<br/>Existing direct debits can be retrieved by the getPayments
        service.<br/><br/>A collective direct debit contains more than one order in
        the 'directDebits' list. It is specially handled by the bank and can be booked
        by the bank either as a single booking for each order or as a single cumulative
        booking. The preferred booking type can be given with the 'singleBooking'
        flag, but it is not guaranteed each bank will regard this flag.
      operationId: createDirectDebit
      parameters:
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDirectDebitParams'
        description: Create direct debit parameters
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: Created payment
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "404":
          content:
            application/json:
              examples:
                http404ResponseExample:
                  $ref: '#/components/examples/http404ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Given account not found
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "422":
          content:
            application/json:
              examples:
                http422ResponseExample:
                  $ref: '#/components/examples/http422ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: ILLEGAL_FIELD_VALUE:<br/> - if the given execution date is
            in the past;<br/>ILLEGAL_ENTITY_STATE:<br/> - if the mandator is not configured
            correctly to use this service. Please contact our support;<br/>UNSUPPORTED_ORDER:<br/>
            - if the request doesn't fit to the capabilities of any of the interfaces
            connected to the given account;
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Create direct debit
      tags:
      - Payments
  /api/v1/notificationRules:
    delete:
      description: 'Delete all notification rules of the user that is authorized by
        the access_token. Must pass the user''s access_token. '
      operationId: deleteAllNotificationRules
      parameters:
      - description: Some HTTP clients do not support the HTTP methods PATCH or DELETE.
          If you are using such a client in your application, you can use a POST request
          instead with this header indicating the originally intended HTTP method.
          POST Requests having this  header set will be treated either as PATCH or
          DELETE by the finAPI servers.
        explode: false
        in: header
        name: X-HTTP-Method-Override
        required: false
        schema:
          enum:
          - PATCH
          - DELETE
          type: string
        style: simple
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentifierList'
          description: List of identifiers of deleted notification rules
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "423":
          content:
            application/json:
              examples:
                http423ResponseExample:
                  $ref: '#/components/examples/http423ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Notification rules cannot get deleted at the moment as finAPI's
            automatic batch update is currently being executed
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Delete all notification rules
      tags:
      - Notification Rules
    get:
      description: Get notification rules of the user that is authorized by the access_token.
        Must pass the user's access_token. You can set optional search criteria to
        get only those notification rules that you are interested in. If you do not
        specify any search criteria, then this service functions as a 'get all' service.
      operationId: getAndSearchAllNotificationRules
      parameters:
      - description: A comma-separated list of notification rule identifiers. If specified,
          then only notification rules whose identifier match any of the given identifiers
          will be regarded. The maximum number of identifiers is 1000.
        explode: true
        in: query
        name: ids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - description: If specified, then only notification rules with given trigger
          event will be regarded.
        explode: true
        in: query
        name: triggerEvent
        required: false
        schema:
          enum:
          - NEW_ACCOUNT_BALANCE
          - NEW_TRANSACTIONS
          - BANK_LOGIN_ERROR
          - FOREIGN_MONEY_TRANSFER
          - LOW_ACCOUNT_BALANCE
          - HIGH_TRANSACTION_AMOUNT
          - CATEGORY_CASH_FLOW
          - NEW_TERMS_AND_CONDITIONS
          type: string
        style: form
      - description: If specified, then only notification rules that include or not
          include details will be regarded.
        explode: true
        in: query
        name: includeDetails
        required: false
        schema:
          type: boolean
        style: form
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationRuleList'
          description: List of requested notification rules
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Get and search all notification rules
      tags:
      - Notification Rules
    post:
      description: Create a new notification rule for a specific user. Must pass the
        user's access_token.<br/><br/>Setting up notification rules for a user allows
        your client application to get notified about changes in the user's data,
        e.g. when new transactions were downloaded, an account's balance has changed,
        or the user's banking credentials are no longer correct. Note that currently,
        this feature is implemented only for finAPI's automatic batch update, i.e.
        notification rules are only relevant when the user has activated the automatic
        updates (and when the automatic batch update is activated in general for your
        client).<br/><br/>There are different kinds of notification rules. The kind
        of a rule is depicted by the 'triggerEvent'. The trigger event specifies what
        data you have to pass when creating a rule (specifically, the contents of
        the 'params' field), on which events finAPI will send notifications to your
        client application, as well as what data is contained in those notifications.
        The specifics of the different trigger events are documented <a href='https://documentation.finapi.io/access/Push-Notifications-(Web-Hooks).2766405696.html'
        target='_blank'>here</a>.
      operationId: createNotificationRule
      parameters:
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationRuleParams'
        description: Notification rule parameters
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationRule'
          description: Created notification rule
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad Request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "422":
          content:
            application/json:
              examples:
                http422ResponseExample:
                  $ref: '#/components/examples/http422ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: ILLEGAL_FIELD_VALUE if the given 'triggerEvent' does not match
            any of the known constants, or if the 'params' field contains illegal
            parameters for the respective trigger event; ENTITY_EXISTS if such a notification
            rule already exists
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "423":
          content:
            application/json:
              examples:
                http423ResponseExample:
                  $ref: '#/components/examples/http423ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Notification rules cannot get created at the moment as finAPI's
            automatic batch update is currently being executed
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Create a new notification rule
      tags:
      - Notification Rules
  /api/v1/mandatorAdmin/keywordRules:
    get:
      description: Returns all keyword-based categorization rules that you have defined
        for your users via the 'Create keyword rules' service.
      operationId: getKeywordRuleList
      parameters:
      - description: Result page that you want to retrieve
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          type: integer
        style: form
      - description: Maximum number of records per page. By default it's 20. Can be
          at most 500.
        explode: true
        in: query
        name: perPage
        required: false
        schema:
          default: 20
          maximum: 500
          minimum: 1
          type: integer
        style: form
      - description: 'Determines the order of the results. You can order the results
          by ''id''. The default order for this service is ''id,asc''. The general
          format is: ''property[,asc|desc]'', with ''asc'' being the default value.'
        explode: true
        in: query
        name: order
        required: false
        schema:
          items:
            default: id,asc
            type: string
          type: array
        style: form
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageableKeywordRuleList'
          description: Requested keyword rules
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Get keyword rules
      tags:
      - Mandator Administration
    post:
      description: This service can be used to define keyword rules for finAPI's transaction
        categorization system. The transaction categorization is run automatically
        whenever new transactions are imported, as well as when you call the services
        'Check categorization' or 'Trigger categorization'. <br/><br/>A keyword rule
        maps a set of keywords to a certain category. finAPI's categorization system
        will pick the category as a candidate for any transaction that contains at
        least one of the defined keywords in its purpose or counterpart information.
        It is not guaranteed though that this candidate will actually be applied,
        as there could be other categorization rules that have higher priority or
        that are an even better match for the transaction. If there are multiple keyword
        rules that match a transaction, finAPI will pick the one with the highest
        count of matched keywords.<br/><br/>Note that the rules that you define here
        will be applied to all of your users. They have higher priority than finAPI's
        default categorization rules, but lower priority than user-specific rules
        (User-specific rules are created implicitly whenever a category is manually
        assigned to a transaction via the PATCH /transactions services). Keyword rules
        have a lower priority than IBAN rules (see the 'Create IBAN rules' service).
      operationId: createKeywordRules
      parameters:
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeywordRulesParams'
        description: Keyword rule definitions
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeywordRuleList'
          description: Created keyword rules
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "404":
          content:
            application/json:
              examples:
                http404ResponseExample:
                  $ref: '#/components/examples/http404ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Category not found
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "422":
          content:
            application/json:
              examples:
                http422ResponseExample:
                  $ref: '#/components/examples/http422ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: ENTITY_EXISTS if at least one of the given rules already exists;
            ILLEGAL_FIELD_VALUE if the request contains incorrect keywords.
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Create keyword rules
      tags:
      - Mandator Administration
  /api/v1/mandatorAdmin/keywordRules/delete:
    post:
      description: Delete one or multiple keyword rules that you have previously created
        via the 'Create keyword rules' service.
      operationId: deleteKeywordRules
      parameters:
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeywordRuleIdentifiersParams'
        description: List of keyword rule identifiers.The maximum number of identifiers
          is 100.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentifierList'
          description: List of identifiers of deleted keyword rules
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "404":
          content:
            application/json:
              examples:
                http404ResponseExample:
                  $ref: '#/components/examples/http404ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Keyword rule not found
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Delete keyword rules
      tags:
      - Mandator Administration
  /api/v1/mandatorAdmin/ibanRules:
    get:
      description: Returns all IBAN-based categorization rules that you have defined
        for your users via the 'Create IBAN rules' service.
      operationId: getIbanRuleList
      parameters:
      - description: Result page that you want to retrieve
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          type: integer
        style: form
      - description: Maximum number of records per page. By default it's 20. Can be
          at most 500.
        explode: true
        in: query
        name: perPage
        required: false
        schema:
          default: 20
          maximum: 500
          minimum: 1
          type: integer
        style: form
      - description: 'Determines the order of the results. You can order the results
          by ''id''. The default order for this service is ''id,asc''. The general
          format is: ''property[,asc|desc]'', with ''asc'' being the default value.'
        explode: true
        in: query
        name: order
        required: false
        schema:
          items:
            default: id,asc
            type: string
          type: array
        style: form
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageableIbanRuleList'
          description: Requested IBAN rules
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Get IBAN rules
      tags:
      - Mandator Administration
    post:
      description: This service can be used to define IBAN rules for finAPI's transaction
        categorization system. The transaction categorization is run automatically
        whenever new transactions are imported, as well as when you call the services
        'Check categorization' or 'Trigger categorization'. <br/><br/>An IBAN rule
        maps an IBAN to a certain category. finAPI's categorization system will pick
        the category as a candidate for any transaction whose counterpart's account
        matches the IBAN. It is not guaranteed though that this candidate will actually
        be applied, as there could be other categorization rules that have higher
        priority or that are an even better match for the transaction.<br/><br/>Note
        that the rules that you define here will be applied to all of your users.
        They have higher priority than finAPI's default categorization rules, but
        lower priority than user-specific rules (User-specific rules are created implicitly
        whenever a category is manually assigned to a transaction via the PATCH /transactions
        services). IBAN rules have a higher priority than keyword rules (see the 'Create
        keyword rules' service).
      operationId: createIbanRules
      parameters:
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IbanRulesParams'
        description: IBAN rule definitions
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IbanRuleList'
          description: Created IBAN rules
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "404":
          content:
            application/json:
              examples:
                http404ResponseExample:
                  $ref: '#/components/examples/http404ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Category not found
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "422":
          content:
            application/json:
              examples:
                http422ResponseExample:
                  $ref: '#/components/examples/http422ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: ENTITY_EXISTS if at least one of the given rules already exists
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Create IBAN rules
      tags:
      - Mandator Administration
  /api/v1/mandatorAdmin/ibanRules/delete:
    post:
      description: Delete one or multiple IBAN rules that you have previously created
        via the 'Create IBAN rules' service.
      operationId: deleteIbanRules
      parameters:
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IbanRuleIdentifiersParams'
        description: List of IBAN rules identifiers.The maximum number of identifiers
          is 100.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentifierList'
          description: List of identifiers of deleted IBAN rules
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "404":
          content:
            application/json:
              examples:
                http404ResponseExample:
                  $ref: '#/components/examples/http404ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: IBAN rule not found
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Delete IBAN rules
      tags:
      - Mandator Administration
  /api/v1/mandatorAdmin/deleteUsers:
    post:
      description: 'Delete one or several users, which are specified by a given list
        of identifiers. Must pass the <a href=''https://documentation.finapi.io/access/Application-management.2763423767.html''
        target=''_blank''>mandator admin client</a>''s access_token. <br/><br/><b>NOTE</b>:
        finAPI may fail to delete one (or several, or all) of the specified users.
        A user cannot get deleted when his data is currently locked by an internal
        process (for instance, update of a bank connection or transaction categorization).
        The response contains the identifiers of all users that could not get deleted,
        and all users that could get deleted, separated in two lists. The mandator
        admin client can retry the request at a later time for the users who could
        not get deleted.<br/> Note that non-existing user identifiers will be ignored
        entirely, meaning that those identifiers will not appear in the response at
        all.'
      operationId: deleteUsers
      parameters:
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserIdentifiersParams'
        description: List of user identifiers
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserIdentifiersList'
          description: List of identifiers of deleted and not deleted users
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Delete users
      tags:
      - Mandator Administration
  /api/v1/mandatorAdmin/changeClientCredentials:
    post:
      description: Change the client_secret for any of your clients, including the
        mandator admin client. Must pass the <a href='https://documentation.finapi.io/access/Application-management.2763423767.html'
        target='_blank'>mandator admin client</a>'s access_token. <br/><br/>NOTES:<br/>&bull;
        When you change a client's secret, then all of its existing access tokens
        will be revoked. User access tokens are not affected.<br/>&bull; finAPI is
        storing client secrets with a one-way encryption. A lost client secret can
        NOT be recovered.
      operationId: changeClientCredentials
      parameters:
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeClientCredentialsParams'
        description: Parameters for changing client credentials
        required: true
      responses:
        "200":
          description: Client secret successfully changed (empty response body)
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "422":
          content:
            application/json:
              examples:
                http422ResponseExample:
                  $ref: '#/components/examples/http422ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The given 'clientId' is unknown or the given 'oldClientSecret'
            is incorrect
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Change client credentials
      tags:
      - Mandator Administration
  /api/v1/labels:
    delete:
      description: Delete all labels of the user that is authorized by the access_token.
        Must pass the user's access_token.
      operationId: deleteAllLabels
      parameters:
      - description: Some HTTP clients do not support the HTTP methods PATCH or DELETE.
          If you are using such a client in your application, you can use a POST request
          instead with this header indicating the originally intended HTTP method.
          POST Requests having this  header set will be treated either as PATCH or
          DELETE by the finAPI servers.
        explode: false
        in: header
        name: X-HTTP-Method-Override
        required: false
        schema:
          enum:
          - PATCH
          - DELETE
          type: string
        style: simple
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentifierList'
          description: List of identifiers of deleted labels
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Delete all labels
      tags:
      - Labels
    get:
      description: Get labels of the user that is authorized by the access_token.
        Must pass the user's access_token. You can set optional search criteria to
        get only those labels that you are interested in. If you do not specify any
        search criteria, then this service functions as a 'get all' service.
      operationId: getAndSearchAllLabels
      parameters:
      - description: A comma-separated list of label identifiers. If specified, then
          only labels whose identifier match any of the given identifiers will be
          regarded. The maximum number of identifiers is 1000.
        explode: true
        in: query
        name: ids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - description: 'If specified, then only those labels will be contained in the
          result whose ''name'' contains the given search string (the matching works
          case-insensitive). If no labels contain the search string in their name,
          then the result will be an empty list. NOTE: If the given search string
          consists of several terms (separated by whitespace), then ALL of these terms
          must be contained in the name for a label to get included into the result.'
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: Result page that you want to retrieve
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          type: integer
        style: form
      - description: Maximum number of records per page. By default it's 20. Can be
          at most 500.
        explode: true
        in: query
        name: perPage
        required: false
        schema:
          default: 20
          maximum: 500
          minimum: 1
          type: integer
        style: form
      - description: 'Determines the order of the results. You can order the results
          by ''id'' or ''name''. The default order for all services is ''id,asc''.
          Since both fields (id and name) are unique, ordering by multiple fields
          is pointless. The general format is: ''property[,asc|desc]'', with ''asc''
          being the default value.'
        explode: true
        in: query
        name: order
        required: false
        schema:
          items:
            default: id,ASC
            type: string
          type: array
        style: form
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageableLabelList'
          description: List of requested labels
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Get and search all labels
      tags:
      - Labels
    post:
      description: Create a new label for a specific user. Must pass the new label's
        name and the user's access_token.<br/><br/>Users can create labels to flag
        transactions (see method PATCH /transactions), with the goal of collecting
        and getting an overview of all transactions of a certain 'type'. In this sense,
        labels are similar to transaction categories. However, labels are supposed
        to depict more of an implicit meaning of a transaction. For instance, a user
        might want to assign a flag to a transaction that reminds him that he can
        offset it against tax. At the same time, the category of the transactions
        might be something like 'insurance', which is a more 'fact-based', or 'objective'
        way of typing the transaction. Despite this semantic difference between categories
        and labels, there is also the difference that a transaction can be assigned
        multiple labels at the same time (while in contrast it can have just a single
        category).
      operationId: createLabel
      parameters:
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabelParams'
        description: Label's name
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
          description: Created label
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "422":
          content:
            application/json:
              examples:
                http422ResponseExample:
                  $ref: '#/components/examples/http422ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: ILLEGAL_FIELD_VALUE if  the given label name is too long; ENTITY_EXISTS
            if a label with the given name already exists
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Create a new label
      tags:
      - Labels
  /api/v1/categories:
    delete:
      description: Delete all custom categories of the user that is authorized by
        the access_token. Must pass the user's access_token. Note that this deletes
        both parent categories as well as any related sub-categories.
      operationId: deleteAllCategories
      parameters:
      - description: Some HTTP clients do not support the HTTP methods PATCH or DELETE.
          If you are using such a client in your application, you can use a POST request
          instead with this header indicating the originally intended HTTP method.
          POST Requests having this  header set will be treated either as PATCH or
          DELETE by the finAPI servers.
        explode: false
        in: header
        name: X-HTTP-Method-Override
        required: false
        schema:
          enum:
          - PATCH
          - DELETE
          type: string
        style: simple
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentifierList'
          description: List of identifiers of deleted categories
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Delete all categories
      tags:
      - Categories
    get:
      description: Get a list of all global finAPI categories as well as all custom
        categories of the authorized user. Must pass the user's access_token. You
        can set optional search criteria to get only those categories that you are
        interested in. If you do not specify any search criteria, then this service
        functions as a 'get all' service.
      operationId: getAndSearchAllCategories
      parameters:
      - description: A comma-separated list of category identifiers. If specified,
          then only categories whose identifier match any of the given identifiers
          will be regarded. The maximum number of identifiers is 1000.
        explode: true
        in: query
        name: ids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - description: 'If specified, then only those categories will be contained in
          the result whose ''name'' contains the given search string (the matching
          works case-insensitive). If no categories contain the search string in their
          name, then the result will be an empty list. NOTE: If the given search string
          consists of several terms (separated by whitespace), then ALL of these terms
          must be contained in the name for a category to get included into the result.'
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: If specified, then the result will contain only categories that
          are either finAPI global (in case of value 'false'), or only categories
          that have been created by the authorized user (in case of value 'true').
        explode: true
        in: query
        name: isCustom
        required: false
        schema:
          type: boolean
        style: form
      - description: Result page that you want to retrieve.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          type: integer
        style: form
      - description: Maximum number of records per page. By default it's 20. Can be
          at most 500.
        explode: true
        in: query
        name: perPage
        required: false
        schema:
          default: 20
          maximum: 500
          minimum: 1
          type: integer
        style: form
      - description: 'Determines the order of the results. You can order the results
          by ''id'', ''name'' and ''isCustom''. The default order is ''id,asc''. You
          can also order by multiple properties. In that case the order of the parameters
          passed is important. Example: ''/categories?order=isCustom,desc&order=name''
          will return all custom categories followed by all default categories. Both
          groups are ordered ascending by name. The general format is: ''property[,asc|desc]'',
          with ''asc'' being the default value.'
        explode: true
        in: query
        name: order
        required: false
        schema:
          items:
            default: id,ASC
            type: string
          type: array
        style: form
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageableCategoryList'
          description: List of requested categories
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Get and search all categories
      tags:
      - Categories
    post:
      description: Create a new custom transaction category for the authorized user,
        that can then be assigned to transactions via PATCH /transactions, and that
        will also be regarded in finAPI's automatic transaction categorization process.
        Must pass the user's access_token.
      operationId: createCategory
      parameters:
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryParams'
        description: Parameters of the new category
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: Created category
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The category name is too long. The maximum length for a category
            name is 128.
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "404":
          content:
            application/json:
              examples:
                http404ResponseExample:
                  $ref: '#/components/examples/http404ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: UNKNOWN_ENTITY if the parent category does not exist.
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "422":
          content:
            application/json:
              examples:
                http422ResponseExample:
                  $ref: '#/components/examples/http422ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: 'ILLEGAL_ENTITY_STATE if The given parentId references a sub-category
            instead of a main category (Multi-level sub-categories are not supported);
            <br/>ENTITY_EXISTS if a category with that name already exists.<br/>NOTE:
            A category already exists means that there is another category of the
            same name on the same hierarchy level.<br/>Examples:<br/>&bull; if you
            want to add a sub-category ''Sub'' to the main category ''Main'', and
            ''Main'' already contains ''Sub'', then the category already exists and
            cannot get created.<br/>&bull; if you want to add a sub-category ''Sub''
            to the main category ''Main'', and some other main category contains ''Sub''
            (or a main category itself is called ''Sub''), then the category can still
            get created, because there is no ''Sub'' in the ''Main'' category<br/>&bull;
            if you want to add a new main-category ''Main'' and there is already a
            main category with that name, then the category already exists and cannot
            get created'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Create a new category
      tags:
      - Categories
  /api/v1/categories/trainCategorization:
    post:
      description: This service allows you to create user-specific categorization
        rules (for the user that is authorized by the access_token). Pass a categorization
        sample (=set of transaction data and a target category), and finAPI will train
        the user's categorization rules so that similar transactions will be categorized
        accordingly in future. Basically, this service behaves the same as when assigning
        categories to existing transactions via the 'Edit a transaction' service,
        with the difference that you can directly pass transaction data to this service,
        without the need of having any transactions actually imported in finAPI. Must
        pass the user's access_token.
      operationId: trainCategorization
      parameters:
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrainCategorizationData'
        description: Categorization sample
        required: true
      responses:
        "200":
          description: Categorization rules updated (empty response body)
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "404":
          content:
            application/json:
              examples:
                http404ResponseExample:
                  $ref: '#/components/examples/http404ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Category not found
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "422":
          content:
            application/json:
              examples:
                http422ResponseExample:
                  $ref: '#/components/examples/http422ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The number of transactions exceeds the limit of 100.
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Train categorization
      tags:
      - Categories
  /api/v1/bankConnections/update:
    post:
      description: 'If you are unlicensed, or licensed but using finAPI’s Web Form,
        this endpoint is not relevant to you. Instead, please refer to the endpoint
        <a href=''?product=web_form_2.0#post-/api/tasks/backgroundUpdate'' target=''_blank''>here</a>.<br/><br/>Update
        an existing bank connection of the user that is authorized by the access_token.
        Downloads and imports the current account balances and new transactions. Note
        that if the bank connection has several interfaces and some of its accounts
        was previously imported or updated via an interface which have higher priority
        than the interface used in the current update, then balances and transactions
        will not be downloaded for such accounts (The XS2A interface has the highest
        priority, followed by FINTS_SERVER and finally WEB_SCRAPER). Must pass the
        connection''s identifier and the user''s access_token. For more information
        about the processes of authentication, data download and transaction categorization,
        see POST /bankConnections/import. Note that supported two-step-procedures
        are updated as well. It may unset the current default two-step-procedure of
        the given bank connection (but only if this procedure is not supported anymore
        by the bank). You can also update the "demo connection" (in this case, secret
        login credentials and the fields ''importNewAccounts'' and ''skipPositionsDownload''
        will be ignored).<br/><br/>Note that you cannot trigger an update of a bank
        connection as long as there is still a previously triggered update running.<br/><br/>For
        a more in-depth understanding of the update process, please also read this
        page on our Access Public Documentation: <a href=''https://documentation.finapi.io/access/Post-Processing-of-Bank-Account-Import%2FUpdate.2766405656.html''
        target=''_blank''>Post Processing of Bank Account Import/Update</a><br/><br/>NOTE
        (THIS LOGIC IS DEPRECATED AND WILL BE REMOVED):<br/>Depending on your license,
        this service may respond with HTTP code 451, containing an error message with
        an identifier of Web Form in it. In addition to that the response will also
        have included a ''Location'' header, which contains the URL to the Web Form.
        In this case, you must forward your user to finAPI''s Web Form.<br/><br/><b>ATTENTION:</b><ul><li>For
        XS2A interface additional headers must be included in the request if the end
        user is involved. Please refer to the <a href=''#general-user-metadata''>User
        metadata</a> section under ''General Information'' of the API documentation.</li><li>Due
        to bank-side changes we have been forced to limit the transactions download
        range to 89 days, to reduce the risk of strong customer authentication (SCA)
        requests.<br/>Now any update of a bank connection will fetch at most the last
        three months of transactions per account. If the last successful update was
        more than 3 months ago, an adjusting entry (''Zwischensaldo'' transaction)
        might be created.</li></ul>'
      operationId: updateBankConnection
      parameters:
      - description: The IP address of the user's device. This header will be forwarded
          to the bank if the 'XS2A' interface is used.
        explode: false
        in: header
        name: PSU-IP-Address
        required: false
        schema:
          format: ipv4
          type: string
        style: simple
      - description: The user's device and/or operating system identification. This
          header will be forwarded to the bank if the 'XS2A' interface is used.
        explode: false
        in: header
        name: PSU-Device-OS
        required: false
        schema:
          type: string
        style: simple
      - description: The user's web browser or other client device identification.
          This header will be forwarded to the bank if the 'XS2A' interface is used.
        explode: false
        in: header
        name: PSU-User-Agent
        required: false
        schema:
          type: string
        style: simple
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBankConnectionParams'
        description: Update bank connection parameters
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankConnection'
          description: Bank connection that the update was triggered for
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad Request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "404":
          content:
            application/json:
              examples:
                http404ResponseExample:
                  $ref: '#/components/examples/http404ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bank connection not found
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "422":
          content:
            application/json:
              examples:
                http422ResponseExample:
                  $ref: '#/components/examples/http422ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: MISSING_FIELD if the credentials (stored in finAPI and provided
            in the request) do not contain at least one non-secret and one secret
            field;<br/>ILLEGAL_FIELD_VALUE:<br/> - if any of the specified credentials
            contain illegal characters;<br/> - if you tried to update a bank connection
            with an invalid credential label;<br/> - if the given 'accountReferences'
            contain a wrong IBAN;<br/> - if 'redirectUrl' is not given, but the bank
            connection has the REDIRECT_APPROACH property set;<br/>ILLEGAL_ENTITY_STATE:<br/>
            - if finAPI supports only web scraping for the bank, but web scraping
            is disabled for the client;<br/> - if the mandator is not configured correctly
            to use this service. Please contact our support;<br/>BANK_SERVER_REJECTION
            if the bank server responded with an error message when finAPI tried to  retrieve
            the user's data. The response's error message typically contains useful
            information from the bank (like that the given login credentials were
            not correct or that the connection is not activated for online banking)
            and may be forwarded to the user;<br/>NO_EXISTING_CHALLENGE in case the
            'challengeResponse' field was set, but there is no pending challenge for
            this bank connection;<br/>INVALID_CONSENT if access data of the bank connection
            has already expired. Please retry the call to request a new consent.
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "423":
          content:
            application/json:
              examples:
                http423ResponseExample:
                  $ref: '#/components/examples/http423ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bank connection cannot get updated at the moment as it is currently
            being imported or updated (either by the user or by finAPI's automatic
            batch update).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "451":
          content:
            application/json:
              examples:
                http451ResponseExample:
                  $ref: '#/components/examples/http451ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: THIS HTTP RESPONSE CODE IS DEPRECATED AND WILL BE REMOVED.<br/>Instead
            please refer to our Web Form offering <a href="?product=web_form_2.0">here</a>.<br/><br/>In
            case the user must enter credentials within finAPI's Web Form.
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
            Location:
              $ref: '#/components/headers/Location'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "501":
          content:
            application/json:
              examples:
                http501ResponseExample:
                  $ref: '#/components/examples/http501ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: This bank is currently not supported by finAPI
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "510":
          content:
            application/json:
              examples:
                http510ResponseExample:
                  $ref: '#/components/examples/http510ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: In case the bank requires an additional authentication by the
            user. The error's 'multiStepAuthentication' field contains further instructions.
            The actual MSA flow depends on the bank and may contain following statuses:<br/><br/>TWO_STEP_PROCEDURE_REQUIRED
            means that the bank has requested an SCA method selection for the user.
            In this case, the service should be recalled with a chosen TSP-ID set
            to the 'twoStepProcedureId' field.<br/><br/>CHALLENGE_RESPONSE_REQUIRED
            means that the bank has requested a challenge code for the previously
            given TSP (SCA). This status can be completed by setting the 'challengeResponse'
            field.<br/><br/>REDIRECT_REQUIRED means that the user must be redirected
            to the bank's website, where the authentication can be finished.<br/><br/>DECOUPLED_AUTH_REQUIRED
            means that the bank has asked for the decoupled authentication. In this
            case, the 'decoupledCallback' field must be set to true to complete the
            authentication.<br/><br/>DECOUPLED_AUTH_IN_PROGRESS means that the bank
            is waiting for the completion of the decoupled authentication by the user.
            Until this is done, the service should be recalled at most every 5 seconds
            with the 'decoupledCallback' field set to 'true'. Once the decoupled authentication
            is completed by the user, the service returns a successful response.
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Update a bank connection
      tags:
      - Bank Connections
  /api/v1/bankConnections/removeInterface:
    post:
      description: 'Remove an interface from bank connection and from all associated
        accounts in the bank connection. Notes: <br/>- An interface cannot get deleted
        while it is in the process of import or update.'
      operationId: removeInterface
      parameters:
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveInterfaceParams'
        description: Remove interface parameters
        required: true
      responses:
        "200":
          description: Bank connection interface removed (empty response body)
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "404":
          content:
            application/json:
              examples:
                http404ResponseExample:
                  $ref: '#/components/examples/http404ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bank connection interface not found
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "423":
          content:
            application/json:
              examples:
                http423ResponseExample:
                  $ref: '#/components/examples/http423ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bank connection interface cannot be removed at the moment as
            it is currently being imported or updated (either by the user or by finAPI's
            automatic batch update).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Remove an interface
      tags:
      - Bank Connections
  /api/v1/bankConnections/import:
    post:
      description: 'If you are unlicensed, or licensed but using finAPI’s Web Form,
        this endpoint is not relevant to you. Instead, please refer to the endpoint
        <a href=''?product=web_form_2.0#post-/api/webForms/bankConnectionImport''
        target=''_blank''>here</a>.<br/><br/>Imports a new bank connection for a specific
        user. Must pass the connection credentials and the user''s access_token. All
        bank accounts will be downloaded and imported with their current balances,
        transactions and supported two-step-procedures (note that the amount of available
        transactions may vary between banks, e.g. some banks deliver all transactions
        from the past year, others only deliver the transactions from the past three
        months). The balance and transactions download process runs asynchronously,
        so this service may return before all balances and transactions have been
        imported. Also, all downloaded transactions will be categorized by a separate
        background process that runs asynchronously too. To check the status of the
        balance and transactions download process as well as the background categorization
        process, see the status flags that are returned by the GET /bankConnections/&lt;id&gt;
        service.<br/><br/>To test the API, you can import a "demo connection". To
        import the demo connection, you need to pass the identifier of the "finAPI
        Test Bank". For more details, please see the associated <a href=''https://documentation.finapi.io/access/finAPI-Test-Banks.2556264541.html''
        target=''_blank''>documentation</a>.<br/><br/>For a more in-depth understanding
        of the import process, please also read this page on our Access Public Documentation:
        <a href=''https://documentation.finapi.io/access/Post-Processing-of-Bank-Account-Import%2FUpdate.2766405656.html''
        target=''_blank''>Post Processing of Bank Account Import/Update</a><br/><br/><b>ATTENTION:</b><ul><li>For
        XS2A interface additional headers must be included in the request if the end
        user is involved. Please refer to the <a href=''#general-user-metadata''>User
        metadata</a> section under ''General Information'' of the API documentation.</li><li>Due
        to bank-side changes we have been forced to limit the transactions download
        range to 89 days, to reduce the risk of strong customer authentication (SCA)
        requests.<br/>If you have implemented the SCA flow, please contact us, so
        that we can remove this limitation from your client.</li></ul>'
      operationId: importBankConnection
      parameters:
      - description: The IP address of the user's device. This header will be forwarded
          to the bank if the 'XS2A' interface is used.
        explode: false
        in: header
        name: PSU-IP-Address
        required: false
        schema:
          format: ipv4
          type: string
        style: simple
      - description: The user's device and/or operating system identification. This
          header will be forwarded to the bank if the 'XS2A' interface is used.
        explode: false
        in: header
        name: PSU-Device-OS
        required: false
        schema:
          type: string
        style: simple
      - description: The user's web browser or other client device identification.
          This header will be forwarded to the bank if the 'XS2A' interface is used.
        explode: false
        in: header
        name: PSU-User-Agent
        required: false
        schema:
          type: string
        style: simple
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportBankConnectionParams'
        description: Import bank connection parameters
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankConnection'
          description: Imported bank connection
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad Request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "422":
          content:
            application/json:
              examples:
                http422ResponseExample:
                  $ref: '#/components/examples/http422ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: UNKNOWN_ENTITY if the specified bank identifier does not exist;<br/>ENTITY_EXISTS
            if such a bank connection already exists;<br/>ILLEGAL_FIELD_VALUE:<br/>
            - if the given credentials do not contain at least one non-secret and
            one secret field;<br/> - if 'accountReferences' are not given, but the
            bank connection has the DETAILED_CONSENT property set, or the given 'accountReferences'
            contain a wrong IBAN;<br/> - if 'redirectUrl' is not given, but the bank
            connection has the REDIRECT_APPROACH property set;<br/>ILLEGAL_ENTITY_STATE:<br/>
            - if finAPI supports only web scraping for the bank, but web scraping
            is disabled for the client;<br/> - if the mandator is not configured correctly
            to use this service. Please contact our support;<br/>BANK_SERVER_REJECTION
            if the bank server responded with an error message when finAPI tried to
            retrieve the user's data. The response's error message typically contains
            useful information from the bank (like that the given login credentials
            were not correct or that the connection is not activated for online banking)
            and may be forwarded to the user;<br/>NO_ACCOUNTS_FOR_TYPE_LIST if none
            of the accounts that the bank returned matched the given account types
            (or if the bank didn’t return any accounts at all);<br/>NO_EXISTING_CHALLENGE
            in case the 'challengeResponse' field was set, but there is no pending
            challenge for this bank connection;<br/>
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "451":
          content:
            application/json:
              examples:
                http451ResponseExample:
                  $ref: '#/components/examples/http451ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: THIS HTTP RESPONSE CODE IS DEPRECATED AND WILL BE REMOVED.<br/>Instead
            please refer to our Web Form offering <a href="?product=web_form_2.0">here</a>.<br/><br/>In
            case the user must enter credentials within finAPI's Web Form.
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
            Location:
              $ref: '#/components/headers/Location'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "501":
          content:
            application/json:
              examples:
                http501ResponseExample:
                  $ref: '#/components/examples/http501ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: This bank is currently not supported by finAPI
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "510":
          content:
            application/json:
              examples:
                http510ResponseExample:
                  $ref: '#/components/examples/http510ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: In case the bank requires an additional authentication by the
            user. The error's 'multiStepAuthentication' field contains further instructions.
            The actual MSA flow depends on the bank and may contain following statuses:<br/><br/>TWO_STEP_PROCEDURE_REQUIRED
            means that the bank has requested an SCA method selection for the user.
            In this case, the service should be recalled with a chosen TSP-ID set
            to the 'twoStepProcedureId' field.<br/><br/>CHALLENGE_RESPONSE_REQUIRED
            means that the bank has requested a challenge code for the previously
            given TSP (SCA). This status can be completed by setting the 'challengeResponse'
            field.<br/><br/>REDIRECT_REQUIRED means that the user must be redirected
            to the bank's website, where the authentication can be finished.<br/><br/>DECOUPLED_AUTH_REQUIRED
            means that the bank has asked for the decoupled authentication. In this
            case, the 'decoupledCallback' field must be set to true to complete the
            authentication.<br/><br/>DECOUPLED_AUTH_IN_PROGRESS means that the bank
            is waiting for the completion of the decoupled authentication by the user.
            Until this is done, the service should be recalled at most every 5 seconds
            with the 'decoupledCallback' field set to 'true'. Once the decoupled authentication
            is completed by the user, the service returns a successful response.
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Import a new bank connection
      tags:
      - Bank Connections
  /api/v1/bankConnections/connectInterface:
    post:
      description: If you are unlicensed, or licensed but using finAPI’s Web Form,
        this endpoint is not relevant to you. Instead, please refer to the endpoint
        <a href='?product=web_form_2.0#post-/api/tasks/backgroundUpdate' target='_blank'>here</a>.<br/><br/>Connects
        a new interface to an existing bank connection for a specific user. Must pass
        the connection credentials and the user's access_token. All bank accounts
        will be downloaded and imported with their current balances, transactions
        and supported two-step-procedures (note that the amount of available transactions
        may vary between banks, e.g. some banks deliver all transactions from the
        past year, others only deliver the transactions from the past three months).
        The balance and transactions download process runs asynchronously, so this
        service may return before all balances and transactions have been imported.
        Also, all downloaded transactions will be categorized by a separate background
        process that runs asynchronously too. To check the status of the balance and
        transactions download process as well as the background categorization process,
        see the status flags that are returned by the GET /bankConnections/&lt;id&gt;
        service.<br/><br/>NOTE (THIS LOGIC IS DEPRECATED AND WILL BE REMOVED):<br/>Depending
        on your license, this service may respond with HTTP code 451, containing an
        error message with an identifier of Web Form in it. In addition to that the
        response will also have included a 'Location' header, which contains the URL
        to the Web Form. In this case, you must forward your user to finAPI's Web
        Form.<br/><br/><b>ATTENTION:</b><ul><li>For XS2A interface additional headers
        must be included in the request if the end user is involved. Please refer
        to the <a href='#general-user-metadata'>User metadata</a> section under 'General
        Information' of the API documentation.</li><li>Due to bank-side changes we
        have been forced to limit the transactions download range to 89 days, to reduce
        the risk of strong customer authentication (SCA) requests.<br/>If you have
        implemented the SCA flow, please contact us, so that we can remove this limitation
        from your client.</li></ul>
      operationId: connectInterface
      parameters:
      - description: The IP address of the user's device. This header will be forwarded
          to the bank if the 'XS2A' interface is used.
        explode: false
        in: header
        name: PSU-IP-Address
        required: false
        schema:
          format: ipv4
          type: string
        style: simple
      - description: The user's device and/or operating system identification. This
          header will be forwarded to the bank if the 'XS2A' interface is used.
        explode: false
        in: header
        name: PSU-Device-OS
        required: false
        schema:
          type: string
        style: simple
      - description: The user's web browser or other client device identification.
          This header will be forwarded to the bank if the 'XS2A' interface is used.
        explode: false
        in: header
        name: PSU-User-Agent
        required: false
        schema:
          type: string
        style: simple
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectInterfaceParams'
        description: Connect interface parameters
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankConnection'
          description: Bank connection with the new interface
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad Request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "422":
          content:
            application/json:
              examples:
                http422ResponseExample:
                  $ref: '#/components/examples/http422ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: UNKNOWN_ENTITY:<br/> - if the specified bank connection identifier
            does not exist;<br/> - if the given source interface does not exist for
            the given bank connection;<br/>ILLEGAL_FIELD_VALUE:<br/> - if the given
            credentials do not contain at least one non-secret and one secret field;<br/>
            - if 'accountReferences' are not given, but the bank connection has the
            DETAILED_CONSENT property set, or the given 'accountReferences' contain
            a wrong IBAN;<br/> - if 'redirectUrl' is not given, but the bank connection
            has the REDIRECT_APPROACH property set;<br/>ENTITY_EXISTS if such a bank
            connection interface already exists;<br/>ILLEGAL_ENTITY_STATE:<br/> -
            if finAPI supports only web scraping for the bank, but web scraping is
            disabled for the client;<br/> - if the mandator is not configured correctly
            to use this service. Please contact our support;<br/>BANK_SERVER_REJECTION
            if the bank server responded with an error message when finAPI tried to
            retrieve the user's data. The response's error message typically contains
            useful information from the bank (like that the given login credentials
            were not correct or that the connection is not activated for online banking)
            and may be forwarded to the user;<br/>NO_ACCOUNTS_FOR_TYPE_LIST if none
            of the accounts that the bank returned matched the given account types
            (or if the bank didn't return any accounts at all);<br/>NO_EXISTING_CHALLENGE
            in case the 'challengeResponse' field was set, but there is no pending
            challenge for this bank connection;<br/>LOGIN_FIELDS_MISMATCH if the source
            interface is given, but its login fields differ to the main interface;<br/>MISSING_CREDENTIALS
            if not all login fields of the source interface have stored values;
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "423":
          content:
            application/json:
              examples:
                http423ResponseExample:
                  $ref: '#/components/examples/http423ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An interface cannot get connected at the moment as the related
            bank connection is currently being imported or updated (either by the
            user or by finAPI's automatic batch update).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "451":
          content:
            application/json:
              examples:
                http451ResponseExample:
                  $ref: '#/components/examples/http451ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: THIS HTTP RESPONSE CODE IS DEPRECATED AND WILL BE REMOVED.<br/>Instead
            please refer to our Web Form offering <a href="?product=web_form_2.0">here</a>.<br/><br/>In
            case the user must enter credentials within finAPI's Web Form.
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
            Location:
              $ref: '#/components/headers/Location'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "501":
          content:
            application/json:
              examples:
                http501ResponseExample:
                  $ref: '#/components/examples/http501ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: This bank is currently not supported by finAPI
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "510":
          content:
            application/json:
              examples:
                http510ResponseExample:
                  $ref: '#/components/examples/http510ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: In case the bank requires an additional authentication by the
            user. The error's 'multiStepAuthentication' field contains further instructions.
            The actual MSA flow depends on the bank and may contain following statuses:<br/><br/>TWO_STEP_PROCEDURE_REQUIRED
            means that the bank has requested an SCA method selection for the user.
            In this case, the service should be recalled with a chosen TSP-ID set
            to the 'twoStepProcedureId' field.<br/><br/>CHALLENGE_RESPONSE_REQUIRED
            means that the bank has requested a challenge code for the previously
            given TSP (SCA). This status can be completed by setting the 'challengeResponse'
            field.<br/><br/>REDIRECT_REQUIRED means that the user must be redirected
            to the bank's website, where the authentication can be finished.<br/><br/>DECOUPLED_AUTH_REQUIRED
            means that the bank has asked for the decoupled authentication. In this
            case, the 'decoupledCallback' field must be set to true to complete the
            authentication.<br/><br/>DECOUPLED_AUTH_IN_PROGRESS means that the bank
            is waiting for the completion of the decoupled authentication by the user.
            Until this is done, the service should be recalled at most every 5 seconds
            with the 'decoupledCallback' field set to 'true'. Once the decoupled authentication
            is completed by the user, the service returns a successful response.
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Connect a new interface
      tags:
      - Bank Connections
  /api/v1/accounts/requestSepaMoneyTransfer:
    post:
      deprecated: true
      description: THIS SERVICE IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
        to the 'Payments' section of the API instead.<br/><br/>To use this service
        PIS must be enabled by our customer support for your client.<br/><br/>Submit
        a SEPA money transfer order for either a single or a collective money transfer.
        Returns an instruction from the bank server that can be displayed to the user
        (e.g. "Enter TAN"), typically in the language of the bank's country. The order
        remains valid for execution for only a couple of minutes (the exact validity
        period depends on the bank). For executing the order, use the /executeSepaMoneyTransfer
        service after calling this service. Note that when the order is not executed
        within the validity period, the bank might take note of that and - if happening
        too often - ultimately lock the user's online banking access. If there already
        exists a previously submitted but not yet executed SEPA order for this account
        (either another money transfer order, or a direct debit order), then that
        order will be discarded and replaced with the new order that is being created
        with this service call.<br/><br/>Notes:<br/>&bull; Some banks may require
        a multi-step authentication, in which case the service will respond with HTTP
        code 510 and an error message containing a challenge for the user from the
        bank. You must display the challenge message to the user, and then retry the
        service call, passing the user's answer to the bank's challenge in the 'multiStepAuthentication.challengeResponse'
        field.<br/>&bull; When using a two-step-procedure with flag 'implicitExecute'
        = true, then this service will immediately execute the money transfer. The
        response will not contain any challenge message and you won't be required
        to make a subsequent call to /executeSepaMoneyTransfer.<br/><br/>NOTE (THIS
        LOGIC IS DEPRECATED AND WILL BE REMOVED):<br/>Depending on your license, this
        service may respond with HTTP code 451, containing an error message with an
        identifier of Web Form in it. In addition to that the response will also have
        included a 'Location' header, which contains the URL to the Web Form. In this
        case, you must forward your user to finAPI's Web Form.
      operationId: requestSepaMoneyTransfer
      parameters:
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestSepaMoneyTransferParams'
        description: Parameters for a SEPA money transfer request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MoneyTransferOrderingResponse'
          description: Response for the SEPA Money Transfer request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "404":
          content:
            application/json:
              examples:
                http404ResponseExample:
                  $ref: '#/components/examples/http404ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Account not found
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "422":
          content:
            application/json:
              examples:
                http422ResponseExample:
                  $ref: '#/components/examples/http422ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: ILLEGAL_ENTITY_STATE if no PIN has been specified and finAPI
            has no PIN stored for the account's bank connection or if the account
            used for the request is DEPRECATED/not found on bank side;<br/>UNSUPPORTED_ORDER
            if the account does not support the requested order. Check the account's
            'supportedOrders' field for available orders;<br/>IBAN_ONLY_MONEY_TRANSFER_NOT_SUPPORTED
            if the recipient account's BIC is required but was not set (see Bank Connection
            resource to find out whether the BIC is required or not);<br/>COLLECTIVE_MONEY_TRANSFER_NOT_SUPPORTED
            - DEPRECATED! This code will never be returned. If a collective money
            transfer request was submitted but the account does not support collective
            money transfers, then the service will return with the code UNSUPPORTED_ORDER;<br/>MISSING_TWO_STEP_PROCEDURE
            if no two-step-procedure was specified in the input parameters of the
            service call, and there is no default two-step-procedure set in the account's
            bank connection either;<br/>INVALID_TWO_STEP_PROCEDURE if the given two-step-procedure
            does not match any of the procedures that are listed in the account's
            bank connection;<br/>BANK_SERVER_REJECTION if the bank server responded
            with an error message when finAPI tried to submit the money transfer order.
            The response's error message typically contains useful information from
            the bank and may be forwarded to the user;<br/>ILLEGAL_FIELD_VALUE if
            recipient IBAN/Name or clearing account id is not specified or specified
            incorrectly; if SEPA purpose code is specified incorrectly
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "423":
          content:
            application/json:
              examples:
                http423ResponseExample:
                  $ref: '#/components/examples/http423ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: SEPA Money Transfer cannot get requested at the moment as the
            update is currently being executed (either by the user or by finAPI's
            automatic batch update).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "451":
          content:
            application/json:
              examples:
                http451ResponseExample:
                  $ref: '#/components/examples/http451ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: In case the user must enter credentials and/or select a two-step-procedure
            within finAPI's Web Form.
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
            Location:
              $ref: '#/components/headers/Location'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "501":
          content:
            application/json:
              examples:
                http501ResponseExample:
                  $ref: '#/components/examples/http501ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The given bank is currently not supported by finAPI
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "510":
          content:
            application/json:
              examples:
                http510ResponseExample:
                  $ref: '#/components/examples/http510ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: In case the bank requires an additional authentication by the
            user. The error's message will contain instructions for the user. Redo
            the service call and pass the user's answer to the challenge in the multiStepAuthentication.challengeResponse
            field.
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Request SEPA Money Transfer
      tags:
      - Accounts
  /api/v1/accounts/requestSepaDirectDebit:
    post:
      deprecated: true
      description: THIS SERVICE IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
        to the 'Payments' section of the API instead.<br/><br/>To use this service
        PIS must be enabled by our customer support for your client.<br/><br/>Submit
        a SEPA direct debit order for one or multiple direct debits. Returns an instruction
        from the bank server that can be displayed to the user (e.g. "Enter TAN"),
        typically in the language of the bank's country. The order remains valid for
        execution for only a couple of minutes (the exact validity period depends
        on the bank). For executing the order, use the /executeSepaDirectDebit service
        after calling this service. Note that when the order is not executed within
        the validity period, the bank might take note of that and - if happening too
        often - ultimately lock the user's online banking access. If there already
        exists a previously submitted but not yet executed SEPA order for this account
        (either another direct debit order, or a money transfer order), then that
        order will be discarded and replaced with the new order that is being created
        with this service call.<br/><br/>Notes:<br/>&bull; When using a two-step-procedure
        with flag 'implicitExecute' = true, then this service will immediately execute
        the direct debit. The response will not contain any challenge message and
        you won't be required to make a subsequent call to /executeSepaDirectDebit.<br/><br/>NOTE
        (THIS LOGIC IS DEPRECATED AND WILL BE REMOVED):<br/>Depending on your license,
        this service may respond with HTTP code 451, containing an error message with
        an identifier of Web Form in it. In addition to that the response will also
        have included a 'Location' header, which contains the URL to the Web Form.
        In this case, you must forward your user to finAPI's Web Form.
      operationId: requestSepaDirectDebit
      parameters:
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestSepaDirectDebitParams'
        description: Parameters for a SEPA direct debit request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectDebitOrderingResponse'
          description: Response for the SEPA Direct Debit request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "404":
          content:
            application/json:
              examples:
                http404ResponseExample:
                  $ref: '#/components/examples/http404ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Account not found
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "422":
          content:
            application/json:
              examples:
                http422ResponseExample:
                  $ref: '#/components/examples/http422ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: ILLEGAL_FIELD_VALUE if SEPA purpose code is specified incorrectly;<br/>ILLEGAL_ENTITY_STATE
            if no PIN has been specified and finAPI has no PIN stored for the account's
            bank connection or if the account used for the request is DEPRECATED/not
            found on bank side;<br/>UNSUPPORTED_ORDER if the account does not support
            the requested order. Check the account's 'supportedOrders' field for available
            orders;<br/>IBAN_ONLY_DIRECT_DEBIT_NOT_SUPPORTED if the debitor account's
            BIC is required but was not set (see Bank Connection resource to find
            out whether the BIC is required or not);<br/>MISSING_TWO_STEP_PROCEDURE
            if no two-step-procedure was specified in the input parameters of the
            service call, and there is no default two-step-procedure set in the account's
            bank connection neither;<br/>INVALID_TWO_STEP_PROCEDURE if the given two-step-procedure
            does not match any of the procedures that are listed in the account's
            bank connection;<br/>BANK_SERVER_REJECTION if the bank server responded
            with an error message when finAPI tried to submit the direct debit order.
            The response's error message typically contains useful information from
            the bank and may be forwarded to the user.
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "423":
          content:
            application/json:
              examples:
                http423ResponseExample:
                  $ref: '#/components/examples/http423ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: SEPA Direct Debit cannot get requested at the moment as the
            update is currently being executed (either by the user or by finAPI's
            automatic batch update).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "451":
          content:
            application/json:
              examples:
                http451ResponseExample:
                  $ref: '#/components/examples/http451ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: In case the user must enter credentials and/or select a two-step-procedure
            within finAPI's Web Form.
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
            Location:
              $ref: '#/components/headers/Location'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "501":
          content:
            application/json:
              examples:
                http501ResponseExample:
                  $ref: '#/components/examples/http501ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The given bank is currently not supported by finAPI
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Request SEPA Direct Debit
      tags:
      - Accounts
  /api/v1/accounts/executeSepaMoneyTransfer:
    post:
      deprecated: true
      description: 'THIS SERVICE IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
        to the ''Payments'' section of the API instead.<br/><br/>To use this service
        PIS must be enabled by our customer support for your client.<br/><br/>Execute
        a SEPA money transfer order that has been previously submitted by the use
        of the /requestSepaMoneyTransfer service.<br/><br/>Note: in case of using
        finAPI''s Web Form flow, the Web Form is dealing with triggering this service
        itself.'
      operationId: executeSepaMoneyTransfer
      parameters:
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecuteSepaMoneyTransferParams'
        description: Parameters for the execution of a SEPA money transfer order
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentExecutionResponse'
          description: Response for the SEPA Money Transfer execute
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "404":
          content:
            application/json:
              examples:
                http404ResponseExample:
                  $ref: '#/components/examples/http404ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Account not found
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "422":
          content:
            application/json:
              examples:
                http422ResponseExample:
                  $ref: '#/components/examples/http422ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: ILLEGAL_ENTITY_STATE if no pending SEPA money transfer order
            exists for the account; BANK_SERVER_REJECTION if the bank server responded
            with an error message when finAPI tried to execute the money transfer
            order. The response's error message typically contains useful information
            from the bank and may be forwarded to the user.
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "423":
          content:
            application/json:
              examples:
                http423ResponseExample:
                  $ref: '#/components/examples/http423ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: SEPA Money Transfer cannot get executed at the moment as the
            update is currently being executed (either by the user or by finAPI's
            automatic batch update).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Execute SEPA Money Transfer
      tags:
      - Accounts
  /api/v1/accounts/executeSepaDirectDebit:
    post:
      deprecated: true
      description: 'THIS SERVICE IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
        to the ''Payments'' section of the API instead.<br/><br/>To use this service
        PIS must be enabled by our customer support for your client.<br/><br/>Execute
        a SEPA direct debit order that has been previously submitted by the use of
        the /requestSepaDirectDebit service.<br/><br/>Note: in case of using finAPI''s
        Web Form flow, the Web Form is dealing with triggering this service itself.'
      operationId: executeSepaDirectDebit
      parameters:
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecuteSepaDirectDebitParams'
        description: Parameters for the execution of a SEPA direct debit order
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentExecutionResponse'
          description: Response for the SEPA Direct Debit execute
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "404":
          content:
            application/json:
              examples:
                http404ResponseExample:
                  $ref: '#/components/examples/http404ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Account not found
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "422":
          content:
            application/json:
              examples:
                http422ResponseExample:
                  $ref: '#/components/examples/http422ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: ILLEGAL_ENTITY_STATE if no pending SEPA direct debit order
            exists for the account; BANK_SERVER_REJECTION if the bank server responded
            with an error message when finAPI tried to execute the direct debit order.
            The response's error message typically contains useful information from
            the bank and may be forwarded to the user.
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "423":
          content:
            application/json:
              examples:
                http423ResponseExample:
                  $ref: '#/components/examples/http423ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: SEPA Direct Debit cannot get executed at the moment as the
            update is currently being executed (either by the user or by finAPI's
            automatic batch update).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Execute SEPA Direct Debit
      tags:
      - Accounts
  /api/v1/transactions:
    delete:
      description: Delete a set, or the entirety, of transactions of the currently
        authorized user.
      operationId: deleteAllTransactions
      parameters:
      - description: If specified, then only those transactions are being deleted
          whose 'finapiBookingDate' is equal to or earlier to the given date. The
          date may not be in future, and must be given in the format 'YYYY-MM-DD'.
          If not specified, then no date limitation will be in place for the deletion.
        explode: true
        in: query
        name: maxDeletionDate
        required: false
        schema:
          maxLength: 10
          minLength: 10
          type: string
        style: form
      - description: If specified, then only those transactions are being deleted
          whose 'importDate' is later than or equal to the given date. The date may
          not be in future, and must be given in the format 'YYYY-MM-DD'. This is
          useful e.g. if a bank returns incorrect transactions and then fixes that
          issue. Then you could put the date when the error was first observed as
          'minImportDate'. This would lead to deletion of all transactions after the
          issue was introduced and allow finAPI to refetch them from scratch. This
          only works if safeMode is set to false and 'rememberDeletion' is undefined
          or set to false. You also can not use this parameter alongside 'maxDeletionDate'.
        explode: true
        in: query
        name: minImportDate
        required: false
        schema:
          maxLength: 10
          minLength: 10
          type: string
        style: form
      - description: A comma-separated list of account identifiers. If specified,
          then only transactions whose account's identifier is included in this list
          will be get deleted. The maximum number of identifiers is 1000.
        explode: true
        in: query
        name: accountIds
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - description: 'When passing ''true'', then only those transactions are being
          deleted where at least one of the following holds true: <br/>1. The transaction
          belongs to an account of a test bank <br/>2. The transaction''s ''potentialDuplicate''
          flag is set to TRUE<br/>3. The transaction is an adjusting entry (''Zwischensaldo''
          transaction) that was added by finAPI<br/> When passing ''false'', then
          finAPI will delete transactions independent of these characteristics. The
          default value for this parameter is ''true''.'
        explode: true
        in: query
        name: safeMode
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: When passing 'true', then finAPI will make sure to not re-import
          deleted transactions on future account updates. When 'false', then deleted
          transactions might be re-imported. Default value for this parameter is 'false'.
        explode: true
        in: query
        name: rememberDeletion
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Some HTTP clients do not support the HTTP methods PATCH or DELETE.
          If you are using such a client in your application, you can use a POST request
          instead with this header indicating the originally intended HTTP method.
          POST Requests having this  header set will be treated either as PATCH or
          DELETE by the finAPI servers.
        explode: false
        in: header
        name: X-HTTP-Method-Override
        required: false
        schema:
          enum:
          - PATCH
          - DELETE
          type: string
        style: simple
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentifierList'
          description: List of identifiers of all deleted transactions
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Delete all transactions
      tags:
      - Transactions
    get:
      description: Get transactions of the user that is authorized by the access_token.
        Must pass the user's access_token. You can set optional search criteria to
        get only those transactions that you are interested in. If you do not specify
        any search criteria, then this service functions as a 'get all' service.
      operationId: getAndSearchAllTransactions
      parameters:
      - description: A comma-separated list of transaction identifiers. If specified,
          then only transactions whose identifier match any of the given identifiers
          will be regarded. The maximum number of identifiers is 1000.
        explode: true
        in: query
        name: ids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - description: 'This parameter defines finAPI''s logical view on the transactions
          when querying them: ''bankView'' regards only the original transactions
          as they were received from the bank, without considering how the transactions
          might have gotten split by the user (see POST /transactions/&lt;id&gt;/split).
          This means that if a transaction is split into logical sub-transactions,
          then the service will still regard only the original transaction, and NOT
          the logical sub-transactions in its processing (though for convenience,
          the transactions will have the data of their sub-transactions included in
          the response). ''userView'' by contrast regards the transactions as they
          exist for the user. For transactions that have not been split into logical
          sub-transactions, there is no difference to the "bankView". But for transaction
          that have been split into logical sub-transactions, the service will ONLY
          regard these sub-transactions, and not the originally received transaction
          (though for convenience, the sub-transactions will have the identifier of
          their original transaction included in the response).'
        example: userView
        explode: true
        in: query
        name: view
        required: true
        schema:
          enum:
          - bankView
          - userView
          type: string
        style: form
      - description: 'If specified, then only those transactions will be contained
          in the result whose ''purpose'', ''endToEndReference'', or one of the counterpart
          fields (''counterpart'', ''counterpartAccountNumber'', ''counterpartIban'',
          ''counterpartBlz'', ''counterpartBic'', ''mandateReference'', ''customerReference'',
          ''creditorId'', or ''debitorId'') contain the given search string (the matching
          works case-insensitive). If no transactions contain the search string in
          any of these fields, then the result will be an empty list. NOTE: If the
          given search string consists of several terms (separated by whitespace),
          then ALL of these terms must be contained in the searched fields for a transaction
          to get included into the result.'
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: 'If specified, then only those transactions will be contained
          in the result whose counterpart fields (''counterpart'', ''counterpartAccountNumber'',
          ''counterpartIban'', ''counterpartBlz'', ''counterpartBic'', ''mandateReference'',
          ''customerReference'', ''creditorId'', or ''debitorId'') contain the given
          search string (the matching works case-insensitive). If no transactions
          contain the search string in any of the counterpart fields, then the result
          will be an empty list. NOTE: If the given search string consists of several
          terms (separated by whitespace), then ALL of these terms must be contained
          in the searched fields for a transaction to get included into the result.'
        explode: true
        in: query
        name: counterpart
        required: false
        schema:
          type: string
        style: form
      - description: 'If specified, then only those transactions will be contained
          in the result whose purpose field contains the given search string (the
          matching works case-insensitive). If no transactions contain the search
          string in the purpose field, then the result will be an empty list. NOTE:
          If the given search string consists of several terms (separated by whitespace),
          then ALL of these terms must be contained in the purpose for a transaction
          to get included into the result.'
        explode: true
        in: query
        name: purpose
        required: false
        schema:
          type: string
        style: form
      - description: A comma-separated list of account identifiers. If specified,
          then only transactions that relate to the given accounts will be regarded.
          If not specified, then all accounts will be regarded.
        explode: true
        in: query
        name: accountIds
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - description: Lower bound for a transaction's booking date as returned by the
          bank (= original booking date), in the format 'YYYY-MM-DD' (e.g. '2016-01-01').
          If specified, then only transactions whose 'bankBookingDate' is equal to
          or later than the given date will be regarded.
        explode: true
        in: query
        name: minBankBookingDate
        required: false
        schema:
          type: string
        style: form
      - description: Upper bound for a transaction's booking date as returned by the
          bank (= original booking date), in the format 'YYYY-MM-DD' (e.g. '2016-01-01').
          If specified, then only transactions whose 'bankBookingDate' is equal to
          or earlier than the given date will be regarded.
        explode: true
        in: query
        name: maxBankBookingDate
        required: false
        schema:
          type: string
        style: form
      - description: Lower bound for a transaction's booking date as set by finAPI,
          in the format 'YYYY-MM-DD' (e.g. '2016-01-01'). For details about the meaning
          of the finAPI booking date, please see the field's documentation in the
          service's response.
        explode: true
        in: query
        name: minFinapiBookingDate
        required: false
        schema:
          type: string
        style: form
      - description: Upper bound for a transaction's booking date as set by finAPI,
          in the format 'YYYY-MM-DD' (e.g. '2016-01-01'). For details about the meaning
          of the finAPI booking date, please see the field's documentation in the
          service's response.
        explode: true
        in: query
        name: maxFinapiBookingDate
        required: false
        schema:
          type: string
        style: form
      - description: 'If specified, then only transactions whose amount is equal to
          or greater than the given amount will be regarded. Can contain a positive
          or negative number with at most two decimal places. Examples: -300.12, or
          90.95'
        explode: true
        in: query
        name: minAmount
        required: false
        schema:
          type: number
        style: form
      - description: 'If specified, then only transactions whose amount is equal to
          or less than the given amount will be regarded. Can contain a positive or
          negative number with at most two decimal places. Examples: -300.12, or 90.95'
        explode: true
        in: query
        name: maxAmount
        required: false
        schema:
          type: number
        style: form
      - description: If specified, then only transactions with the given direction(s)
          will be regarded. Use 'income' for regarding only received payments (amount
          >= 0), 'spending' for regarding only outgoing payments (amount < 0), or
          'all' to regard both directions. If not specified, the direction defaults
          to 'all'.
        explode: true
        in: query
        name: direction
        required: false
        schema:
          default: all
          enum:
          - all
          - income
          - spending
          type: string
        style: form
      - description: A comma-separated list of label identifiers. If specified, then
          only transactions that  have been marked with at least one of the given
          labels will be contained in the result.
        explode: true
        in: query
        name: labelIds
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - description: 'A comma-separated list of category identifiers. If specified,
          then the result will contain only transactions whose category is either
          one of the target categories, or - but only if the ''includeChildCategories''
          flag is set to ''true'' - whose category is a sub-category of one of the
          target categories. To include transactions without any category, pass the
          value ''0'' as the category ID.<br/><br/>NOTE: If your client is restricted
          to certain categories (see GET /clientConfiguration, field ''categoryRestrictions''),
          then you may only specify categories that match your restrictions. Alternatively,
          you can leave this field unset, in which case finAPI will automatically
          populate this field with all categories that are defined in your restrictions.'
        explode: true
        in: query
        name: categoryIds
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - description: This flag controls how the 'categoryIds' are handled. If set
          to 'true', then all transactions with the target categories, as well as
          all transactions with any of their sub-categories will be regarded. If set
          to 'false', then sub-categories of a category are excluded and only those
          transactions are regarded whose category matches exactly the target category.
          The default value for this flag is 'true'.<br/><br/>Note that this field
          has an effect independent of whether you pass the 'categoryIds' yourself,
          or whether the 'categoryIds' are populated automatically based on your client's
          category restrictions (see GET /clientConfiguration, field 'categoryRestrictions').
        explode: true
        in: query
        name: includeChildCategories
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: If specified, then only transactions that have their 'isNew'
          flag set to true/false will be regarded.
        explode: true
        in: query
        name: isNew
        required: false
        schema:
          type: boolean
        style: form
      - description: If specified, then only transactions that have their 'isPotentialDuplicate'
          flag set to true/false will be regarded.
        explode: true
        in: query
        name: isPotentialDuplicate
        required: false
        schema:
          type: boolean
        style: form
      - description: If specified, then only transactions that have their 'isAdjustingEntry'
          flag set to true/false will be regarded.
        explode: true
        in: query
        name: isAdjustingEntry
        required: false
        schema:
          type: boolean
        style: form
      - description: Lower bound for a transaction's import date, in the format 'YYYY-MM-DD'
          (e.g. '2016-01-01'). If specified, then only transactions whose 'importDate'
          is equal to or later than the given date will be regarded.
        explode: true
        in: query
        name: minImportDate
        required: false
        schema:
          type: string
        style: form
      - description: Upper bound for a transaction's import date, in the format 'YYYY-MM-DD'
          (e.g. '2016-01-01'). If specified, then only transactions whose 'importDate'
          is equal to or earlier than the given date will be regarded.
        explode: true
        in: query
        name: maxImportDate
        required: false
        schema:
          type: string
        style: form
      - description: Result page that you want to retrieve.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          type: integer
        style: form
      - description: Maximum number of records per page. By default it's 20. Can be
          at most 500.
        explode: true
        in: query
        name: perPage
        required: false
        schema:
          default: 20
          maximum: 500
          minimum: 1
          type: integer
        style: form
      - description: 'Determines the order of the results. You can use the following
          fields for ordering the response: ''id'', ''parentId'', ''accountId'', ''valueDate'',
          ''bankBookingDate'', ''finapiBookingDate'', ''amount'', ''purpose'', ''counterpartName'',
          ''counterpartAccountNumber'', ''counterpartIban'', ''counterpartBlz'', ''counterpartBic'',
          ''type'', ''primanota'', ''category.id'', ''category.name'', ''isPotentialDuplicate'',
          ''isNew'' and ''importDate''. The default order for all services is ''id,asc''.
          You can also order by multiple properties. In that case the order of the
          parameters passed is important. Example: ''/transactions?order=finapiBookingDate,desc&order=counterpartName''
          will return the latest transactions first. If there are more transactions
          on the same day, then these transactions are ordered by the counterpart
          name (ascending). The general format is: ''property[,asc|desc]'', with ''asc''
          being the default value.'
        explode: true
        in: query
        name: order
        required: false
        schema:
          items:
            default: id,ASC
            type: string
          type: array
        style: form
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageableTransactionList'
          description: List of requested transactions
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Get and search all transactions
      tags:
      - Transactions
    patch:
      description: 'Edit one or multiple transactions. You can edit the following
        fields: ''isNew=true|false'' and/or ''isPotentialDuplicate=false'' and/or
        ''categoryId=&lt;id&gt;'' and/or ''labelIds=[&lt;ids&gt;]''. To clear the
        category of the given transactions (so that they are no longer categorized),
        pass the value ''0'' as the categoryId. To clear the labels of the given transactions,
        pass an empty array of label identifiers: ''[]''. The parameters ''categoryId''
        and ''labelIds'' are forbidden if ''ids'' is NOT set (i.e. you cannot update
        the category or labels for ALL transactions). The result is a list of identifiers
        of only those transactions that have changed as a result of this service call.'
      operationId: editMultipleTransactions
      parameters:
      - description: Some HTTP clients do not support the HTTP methods PATCH or DELETE.
          If you are using such a client in your application, you can use a POST request
          instead with this header indicating the originally intended HTTP method.
          POST Requests having this  header set will be treated either as PATCH or
          DELETE by the finAPI servers.
        explode: false
        in: header
        name: X-HTTP-Method-Override
        required: false
        schema:
          enum:
          - PATCH
          - DELETE
          type: string
        style: simple
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMultipleTransactionsParams'
        description: Update transactions parameters
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentifierList'
          description: List of identifiers of all updated transactions
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "404":
          content:
            application/json:
              examples:
                http404ResponseExample:
                  $ref: '#/components/examples/http404ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Category or labels not found
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "422":
          content:
            application/json:
              examples:
                http422ResponseExample:
                  $ref: '#/components/examples/http422ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: If 'isPotentialDuplicate' is set to 'true' (only 'false' is
            allowed)
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Edit multiple transactions
      tags:
      - Transactions
  /api/v1/transactions/{ids}:
    get:
      deprecated: true
      description: THIS SERVICE IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
        to the 'Get and search all transactions' service instead if you want to get
        multiple transactions, and pass a comma-separated list of identifiers with
        the 'ids' parameter.<br/><br/>Get a list of multiple transactions of the user
        that is authorized by the access_token. Must pass the transactions' identifiers
        and the user's access_token. Transactions whose identifiers do not exist or
        do not relate to the authorized user will not be contained in the result (If
        this applies to all of the given identifiers, then the result will be an empty
        list).
      operationId: getMultipleTransactions
      parameters:
      - description: Comma-separated list of identifiers of requested transactions
        explode: false
        in: path
        name: ids
        required: true
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionList'
          description: List of requested transactions
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Get multiple transactions
      tags:
      - Transactions
    patch:
      deprecated: true
      description: 'THIS SERVICE IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
        to the ''Edit multiple transactions'' service instead if you want to edit
        multiple transactions, and pass a comma-separated list of identifiers with
        the ''ids'' parameter.<br/><br/>Change the fields of multiple transactions.
        You can change the following fields: ''isNew=true|false'' and/or ''isPotentialDuplicate=false''
        and/or ''categoryId=&lt;id&gt;'' and/or ''labelIds=[<ids>]''. The max number
        of input identifiers is limited to 100. To clear the category of the given
        transactions (so that they are no longer categorized), pass the value ''0''
        as the categoryId. To clear the labels of the given transactions, pass an
        empty array of label identifiers: ''[]''. The result is a list of identifiers
        of only those transactions that have changed as a result of this service call.'
      operationId: editMultipleTransactionsDeprecated
      parameters:
      - description: Comma-separated list of identifiers of updated transactions
        explode: false
        in: path
        name: ids
        required: true
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      - description: Some HTTP clients do not support the HTTP methods PATCH or DELETE.
          If you are using such a client in your application, you can use a POST request
          instead with this header indicating the originally intended HTTP method.
          POST Requests having this  header set will be treated either as PATCH or
          DELETE by the finAPI servers.
        explode: false
        in: header
        name: X-HTTP-Method-Override
        required: false
        schema:
          enum:
          - PATCH
          - DELETE
          type: string
        style: simple
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTransactionsParams'
        description: Update transactions parameters
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentifierList'
          description: List of identifiers of all edited transactions
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "404":
          content:
            application/json:
              examples:
                http404ResponseExample:
                  $ref: '#/components/examples/http404ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Category or labels not found
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "422":
          content:
            application/json:
              examples:
                http422ResponseExample:
                  $ref: '#/components/examples/http422ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: If 'isPotentialDuplicate' is set to 'true' (only 'false' is
            allowed)
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Edit multiple transactions (DEPRECATED)
      tags:
      - Transactions
  /api/v1/transactions/{id}:
    delete:
      description: Delete a single transaction of the user that is authorized by the
        access_token.<br/><br/> A transaction can only get deleted if at least one
        of the following holds true:<br/>1. The transaction belongs to an account
        of a test bank <br/>2. The transaction's 'potentialDuplicate' flag is set
        to TRUE<br/>3. The transaction is an adjusting entry ('Zwischensaldo' transaction)
        that was added by finAPI<br/><br/>Note that the 'Delete all transactions'
        service has additional functionality and allows you to delete transactions
        that you cannot delete with this service.
      operationId: deleteTransaction
      parameters:
      - description: Identifier of transaction
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Some HTTP clients do not support the HTTP methods PATCH or DELETE.
          If you are using such a client in your application, you can use a POST request
          instead with this header indicating the originally intended HTTP method.
          POST Requests having this  header set will be treated either as PATCH or
          DELETE by the finAPI servers.
        explode: false
        in: header
        name: X-HTTP-Method-Override
        required: false
        schema:
          enum:
          - PATCH
          - DELETE
          type: string
        style: simple
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Transaction deleted (empty response body)
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "404":
          content:
            application/json:
              examples:
                http404ResponseExample:
                  $ref: '#/components/examples/http404ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Transaction not found
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "422":
          content:
            application/json:
              examples:
                http422ResponseExample:
                  $ref: '#/components/examples/http422ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Transaction cannot get deleted
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Delete a transaction
      tags:
      - Transactions
    get:
      description: Get a single transaction of the user that is authorized by the
        access_token. Must pass the transaction's identifier and the user's access_token.
      operationId: getTransaction
      parameters:
      - description: Identifier of transaction
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: Requested transaction
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "404":
          content:
            application/json:
              examples:
                http404ResponseExample:
                  $ref: '#/components/examples/http404ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Transaction not found
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Get a transaction
      tags:
      - Transactions
    patch:
      description: 'Change a transaction''s fields. You can change the following fields:
        ''isNew=true|false'' and/or ''isPotentialDuplicate=false'' and/or ''categoryId=&lt;id&gt;''
        and/or ''labelIds=[&lt;ids&gt;]''. To clear a transaction''s category (so
        that it is no longer categorized), pass the value ''0'' as the categoryId.
        To clear the labels of the given transaction, pass an empty array of label
        identifiers: ''[]''.'
      operationId: editTransaction
      parameters:
      - description: Identifier of transaction
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Some HTTP clients do not support the HTTP methods PATCH or DELETE.
          If you are using such a client in your application, you can use a POST request
          instead with this header indicating the originally intended HTTP method.
          POST Requests having this  header set will be treated either as PATCH or
          DELETE by the finAPI servers.
        explode: false
        in: header
        name: X-HTTP-Method-Override
        required: false
        schema:
          enum:
          - PATCH
          - DELETE
          type: string
        style: simple
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTransactionsParams'
        description: Update transactions parameters
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: Edited transaction
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "404":
          content:
            application/json:
              examples:
                http404ResponseExample:
                  $ref: '#/components/examples/http404ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Transaction, category or labels not found
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "422":
          content:
            application/json:
              examples:
                http422ResponseExample:
                  $ref: '#/components/examples/http422ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: If 'isPotentialDuplicate' is set to 'true' (only 'false' is
            allowed)
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Edit a transaction
      tags:
      - Transactions
  /api/v1/tppCredentials/{id}:
    delete:
      description: 'Delete a single set of TPP credentials by its id. Must pass the
        <a href=''https://documentation.finapi.io/access/Application-management.2763423767.html''
        target=''_blank''>mandator admin client</a>''s access_token. '
      operationId: deleteTppCredential
      parameters:
      - description: Id of the TPP credentials to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Some HTTP clients do not support the HTTP methods PATCH or DELETE.
          If you are using such a client in your application, you can use a POST request
          instead with this header indicating the originally intended HTTP method.
          POST Requests having this  header set will be treated either as PATCH or
          DELETE by the finAPI servers.
        explode: false
        in: header
        name: X-HTTP-Method-Override
        required: false
        schema:
          enum:
          - PATCH
          - DELETE
          type: string
        style: simple
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: TPP credentials deleted (empty response body)
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "404":
          content:
            application/json:
              examples:
                http404ResponseExample:
                  $ref: '#/components/examples/http404ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: TPP credentials not found
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Delete a set of TPP credentials
      tags:
      - TPP Credentials
    get:
      description: 'Get a single set of TPP credentials by its id. Must pass the <a
        href=''https://documentation.finapi.io/access/Application-management.2763423767.html''
        target=''_blank''>mandator admin client</a>''s access_token. '
      operationId: getTppCredential
      parameters:
      - description: Id of the requested TPP credentials
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TppCredentials'
          description: Requested TPP credentials
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "404":
          content:
            application/json:
              examples:
                http404ResponseExample:
                  $ref: '#/components/examples/http404ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: TPP credentials not found
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Get a set of TPP credentials
      tags:
      - TPP Credentials
    patch:
      description: 'Edit TPP credentials data. Must pass the <a href=''https://documentation.finapi.io/access/Application-management.2763423767.html''
        target=''_blank''>mandator admin client</a>''s access_token. '
      operationId: editTppCredential
      parameters:
      - description: Id of the TPP credentials to edit
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Some HTTP clients do not support the HTTP methods PATCH or DELETE.
          If you are using such a client in your application, you can use a POST request
          instead with this header indicating the originally intended HTTP method.
          POST Requests having this  header set will be treated either as PATCH or
          DELETE by the finAPI servers.
        explode: false
        in: header
        name: X-HTTP-Method-Override
        required: false
        schema:
          enum:
          - PATCH
          - DELETE
          type: string
        style: simple
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditTppCredentialParams'
        description: New TPP credentials parameters
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TppCredentials'
          description: Edited TPP credentials
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "404":
          content:
            application/json:
              examples:
                http404ResponseExample:
                  $ref: '#/components/examples/http404ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: TPP credentials not found
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "422":
          content:
            application/json:
              examples:
                http422ResponseExample:
                  $ref: '#/components/examples/http422ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: UNKNOWN_ENTITY if the specified TPP authentication group does
            not exist;<br/>ILLEGAL_FIELD_VALUE if the given validity dates are invalid
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Edit a set of TPP credentials
      tags:
      - TPP Credentials
  /api/v1/labels/{id}:
    delete:
      description: Delete a single label of the user that is authorized by the access_token.
        Must pass the label's identifier and the user's access_token.
      operationId: deleteLabel
      parameters:
      - description: Identifier of the label to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Some HTTP clients do not support the HTTP methods PATCH or DELETE.
          If you are using such a client in your application, you can use a POST request
          instead with this header indicating the originally intended HTTP method.
          POST Requests having this  header set will be treated either as PATCH or
          DELETE by the finAPI servers.
        explode: false
        in: header
        name: X-HTTP-Method-Override
        required: false
        schema:
          enum:
          - PATCH
          - DELETE
          type: string
        style: simple
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Label deleted (empty response body)
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "404":
          content:
            application/json:
              examples:
                http404ResponseExample:
                  $ref: '#/components/examples/http404ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Label not found
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Delete a label
      tags:
      - Labels
    get:
      description: Get a single label of the user that is authorized by the access_token.
        Must pass the label's identifier and the user's access_token.
      operationId: getLabel
      parameters:
      - description: Identifier of requested label
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
          description: Requested label
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "404":
          content:
            application/json:
              examples:
                http404ResponseExample:
                  $ref: '#/components/examples/http404ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Label not found
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Get a label
      tags:
      - Labels
    patch:
      description: Change the name of a label of the user that is authorized by the
        access_token. Must pass the label's identifier, the label's new name and the
        user's access_token.
      operationId: editLabel
      parameters:
      - description: Label's identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Some HTTP clients do not support the HTTP methods PATCH or DELETE.
          If you are using such a client in your application, you can use a POST request
          instead with this header indicating the originally intended HTTP method.
          POST Requests having this  header set will be treated either as PATCH or
          DELETE by the finAPI servers.
        explode: false
        in: header
        name: X-HTTP-Method-Override
        required: false
        schema:
          enum:
          - PATCH
          - DELETE
          type: string
        style: simple
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabelParams'
        description: Label's new name
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
          description: Edited label
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "404":
          content:
            application/json:
              examples:
                http404ResponseExample:
                  $ref: '#/components/examples/http404ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Label not found
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "422":
          content:
            application/json:
              examples:
                http422ResponseExample:
                  $ref: '#/components/examples/http422ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: ILLEGAL_FIELD_VALUE if  the given label name is too long; ENTITY_EXISTS
            if a label with the given name already exists
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Edit a label
      tags:
      - Labels
  /api/v1/clientConfiguration:
    get:
      description: Get your client's configuration. Must pass your global (i.e. client)
        access_token.
      operationId: getClientConfiguration
      parameters:
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientConfiguration'
          description: Current client configuration
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Get client configuration
      tags:
      - Client Configuration
    patch:
      description: 'Edit your client''s configuration. Must pass your global (i.e.
        client) access_token.<br/><br/> <b>NOTE</b>: When token validity periods are
        changed, this only applies to newly requested tokens, and does not change
        the expiration time of already existing tokens.'
      operationId: editClientConfiguration
      parameters:
      - description: Some HTTP clients do not support the HTTP methods PATCH or DELETE.
          If you are using such a client in your application, you can use a POST request
          instead with this header indicating the originally intended HTTP method.
          POST Requests having this  header set will be treated either as PATCH or
          DELETE by the finAPI servers.
        explode: false
        in: header
        name: X-HTTP-Method-Override
        required: false
        schema:
          enum:
          - PATCH
          - DELETE
          type: string
        style: simple
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientConfigurationParams'
        description: Client configuration parameters
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientConfiguration'
          description: New client configuration
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request (e.g. invalid callback URL)
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Edit client configuration
      tags:
      - Client Configuration
  /api/v1/categories/{id}:
    delete:
      description: Delete a single category of the user that is authorized by the
        access_token. Must pass the user's access_token. Note that you can only delete
        user-custom categories (category's where the 'isCustom' flag is true). Also
        note that when deleting a parent category, all its sub-categories will be
        deleted as well.
      operationId: deleteCategory
      parameters:
      - description: Category identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Some HTTP clients do not support the HTTP methods PATCH or DELETE.
          If you are using such a client in your application, you can use a POST request
          instead with this header indicating the originally intended HTTP method.
          POST Requests having this  header set will be treated either as PATCH or
          DELETE by the finAPI servers.
        explode: false
        in: header
        name: X-HTTP-Method-Override
        required: false
        schema:
          enum:
          - PATCH
          - DELETE
          type: string
        style: simple
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Category was deleted successfully (empty response body)
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "404":
          content:
            application/json:
              examples:
                http404ResponseExample:
                  $ref: '#/components/examples/http404ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Category not found
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "422":
          content:
            application/json:
              examples:
                http422ResponseExample:
                  $ref: '#/components/examples/http422ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Category cannot be deleted
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Delete a category
      tags:
      - Categories
    get:
      description: Get a single category that is either a global finAPI category or
        a custom category of the authorized user. Must pass the category's identifier
        and the user's access_token.
      operationId: getCategory
      parameters:
      - description: Category identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: Requested category
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "404":
          content:
            application/json:
              examples:
                http404ResponseExample:
                  $ref: '#/components/examples/http404ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Category not found
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Get a category
      tags:
      - Categories
    patch:
      description: Change the name of a custom transaction category belonging to the
        authorized user. Must pass the user's access_token.
      operationId: editCategory
      parameters:
      - description: Identifier of the category to edit
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Some HTTP clients do not support the HTTP methods PATCH or DELETE.
          If you are using such a client in your application, you can use a POST request
          instead with this header indicating the originally intended HTTP method.
          POST Requests having this  header set will be treated either as PATCH or
          DELETE by the finAPI servers.
        explode: false
        in: header
        name: X-HTTP-Method-Override
        required: false
        schema:
          enum:
          - PATCH
          - DELETE
          type: string
        style: simple
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditCategoryParams'
        description: New category name
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: Edited transaction category
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "404":
          content:
            application/json:
              examples:
                http404ResponseExample:
                  $ref: '#/components/examples/http404ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Category not found
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "422":
          content:
            application/json:
              examples:
                http422ResponseExample:
                  $ref: '#/components/examples/http422ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Category cannot be edited
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Edit a category
      tags:
      - Categories
  /api/v1/bankConnections/{id}:
    delete:
      description: 'Delete a single bank connection of the user that is authorized
        by the access_token, including all of its accounts and their transactions
        and balance data. Must pass the connection''s identifier and the user''s access_token.<br/><br/>Notes:
        <br/>- All notification rules that are connected to the bank connection will
        get adjusted so that they no longer have this connection listed. Notification
        rules that are connected to just this bank connection (and no other connection)
        will get deleted altogether. <br/>- A bank connection cannot get deleted while
        it is in the process of import, update, or transaction categorization.'
      operationId: deleteBankConnection
      parameters:
      - description: Identifier of the bank connection to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Some HTTP clients do not support the HTTP methods PATCH or DELETE.
          If you are using such a client in your application, you can use a POST request
          instead with this header indicating the originally intended HTTP method.
          POST Requests having this  header set will be treated either as PATCH or
          DELETE by the finAPI servers.
        explode: false
        in: header
        name: X-HTTP-Method-Override
        required: false
        schema:
          enum:
          - PATCH
          - DELETE
          type: string
        style: simple
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Bank connection deleted (empty response body)
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "404":
          content:
            application/json:
              examples:
                http404ResponseExample:
                  $ref: '#/components/examples/http404ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bank connection not found
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "423":
          content:
            application/json:
              examples:
                http423ResponseExample:
                  $ref: '#/components/examples/http423ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bank connection cannot get deleted at the moment as it is currently
            being imported or updated (either by the user or by finAPI's automatic
            batch update), or because the categorization of transactions is currently
            performed.
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Delete a bank connection
      tags:
      - Bank Connections
    get:
      description: Get a single bank connection of the user that is authorized by
        the access_token. Must pass the connection's identifier and the user's access_token.<br/>Web
        Form 2.0 customers should also use this endpoint to learn about the status
        of the bank connection (The bank connection ID can be found in the payload
        of the API response from the relevant Web Form 2.0 API endpoint).
      operationId: getBankConnection
      parameters:
      - description: Identifier of requested bank connection
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankConnection'
          description: Requested bank connection
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "404":
          content:
            application/json:
              examples:
                http404ResponseExample:
                  $ref: '#/components/examples/http404ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bank connection not found
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Get a bank connection
      tags:
      - Bank Connections
    patch:
      description: If you are unlicensed, or licensed but using finAPI’s Web Form,
        this endpoint is relevant to you ONLY if you want to update the name of the
        bank connection. Please check <a href='?product=web_form_2.0#post-/api/tasks/backgroundUpdate'
        target='_blank'>this</a> endpoint for all other functionalities instead.<br/><br/>Edit
        bank connection data. Must pass the connection's identifier and the user's
        access_token.<br/><br/>Note that a bank connection's credentials cannot be
        changed while it is in the process of being imported, updated, or connecting
        a new interface.<br/><br/>NOTE (THIS LOGIC IS DEPRECATED AND WILL BE REMOVED):<br/>Depending
        on your license, this service may respond with HTTP code 451, containing an
        error message with an identifier of Web Form in it. In addition to that the
        response will also have included a 'Location' header, which contains the URL
        to the Web Form. In this case, you must forward your user to finAPI's Web
        Form.
      operationId: editBankConnection
      parameters:
      - description: Identifier of the bank connection to change the parameters for
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Some HTTP clients do not support the HTTP methods PATCH or DELETE.
          If you are using such a client in your application, you can use a POST request
          instead with this header indicating the originally intended HTTP method.
          POST Requests having this  header set will be treated either as PATCH or
          DELETE by the finAPI servers.
        explode: false
        in: header
        name: X-HTTP-Method-Override
        required: false
        schema:
          enum:
          - PATCH
          - DELETE
          type: string
        style: simple
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditBankConnectionParams'
        description: New bank connection parameters
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankConnection'
          description: Edited bank connection
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "404":
          content:
            application/json:
              examples:
                http404ResponseExample:
                  $ref: '#/components/examples/http404ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bank connection not found
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "422":
          content:
            application/json:
              examples:
                http422ResponseExample:
                  $ref: '#/components/examples/http422ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: INVALID_TWO_STEP_PROCEDURE:<br/>if submitted two-step-procedure
            does not exist for the user. Please use one of the procedures that are
            listed in the bank connection;<br/>ILLEGAL_FIELD_VALUE:<br/>- if the bank
            connection's credentials were tried to be changed, but the new credentials
            are equal to the credentials of another existing bank connection of the
            same bank.<br/> - in case an update attempt is made using an interface
            that is not connected to the bank;<br/>ILLEGAL_ENTITY_STATE:<br/> - if
            the mandator is not configured correctly to use this service. Please contact
            our support;
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "423":
          content:
            application/json:
              examples:
                http423ResponseExample:
                  $ref: '#/components/examples/http423ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bank connection cannot get edited at the moment as it is currently
            being imported, updated (either by the user or by finAPI's automatic batch
            update) or a new interface is being connected.
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "451":
          content:
            application/json:
              examples:
                http451ResponseExample:
                  $ref: '#/components/examples/http451ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: THIS HTTP RESPONSE CODE IS DEPRECATED AND WILL BE REMOVED.<br/>Instead
            please refer to our Web Form offering <a href="?product=web_form_2.0">here</a>.<br/><br/>In
            case the user must enter credentials within finAPI's Web Form.
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
            Location:
              $ref: '#/components/headers/Location'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Edit a bank connection
      tags:
      - Bank Connections
  /api/v1/accounts/{id}:
    delete:
      description: 'Delete a single bank account of the user that is authorized by
        the access_token, including its transactions and balance data. Must pass the
        account''s identifier and the user''s access_token.<br/><br/>Notes: <br/>-
        You cannot delete an account while the bank connection that it relates to
        is currently in the process of import, update, or transaction categorization.
        <br/>- When the last remaining account of a bank connection gets deleted,
        then the bank connection itself will get deleted as well! <br/>- All notification
        rules that are connected to the account will get adjusted so that they no
        longer have this account listed. Notification rules that are connected to
        just this account (and no other accounts) will get deleted altogether.'
      operationId: deleteAccount
      parameters:
      - description: Identifier of the account to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Some HTTP clients do not support the HTTP methods PATCH or DELETE.
          If you are using such a client in your application, you can use a POST request
          instead with this header indicating the originally intended HTTP method.
          POST Requests having this  header set will be treated either as PATCH or
          DELETE by the finAPI servers.
        explode: false
        in: header
        name: X-HTTP-Method-Override
        required: false
        schema:
          enum:
          - PATCH
          - DELETE
          type: string
        style: simple
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Account deleted (empty response body)
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "404":
          content:
            application/json:
              examples:
                http404ResponseExample:
                  $ref: '#/components/examples/http404ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Account not found
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "423":
          content:
            application/json:
              examples:
                http423ResponseExample:
                  $ref: '#/components/examples/http423ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Account cannot get deleted at the moment as it is currently
            being imported or updated (either by the user or by finAPI's automatic
            batch update), or because the categorization of transactions is performed.
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Delete an account
      tags:
      - Accounts
    get:
      description: Get a single bank account of the user that is authorized by the
        access_token. Must pass the account's identifier and the user's access_token.
      operationId: getAccount
      parameters:
      - description: Identifier of requested account
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: Requested account
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "404":
          content:
            application/json:
              examples:
                http404ResponseExample:
                  $ref: '#/components/examples/http404ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Account not found
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Get an account
      tags:
      - Accounts
    patch:
      description: Change the name and/or the type and/or the 'isNew' flag of a single
        bank account of the user that is authorized by the access_token. Must pass
        the account's identifier, the account's new name and/or type and/or 'isNew'
        flag, and the user's access_token.
      operationId: editAccount
      parameters:
      - description: Identifier of the account to edit
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Some HTTP clients do not support the HTTP methods PATCH or DELETE.
          If you are using such a client in your application, you can use a POST request
          instead with this header indicating the originally intended HTTP method.
          POST Requests having this  header set will be treated either as PATCH or
          DELETE by the finAPI servers.
        explode: false
        in: header
        name: X-HTTP-Method-Override
        required: false
        schema:
          enum:
          - PATCH
          - DELETE
          type: string
        style: simple
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountParams'
        description: New account name and/or type and/or 'isNew' flag
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: Edited account
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: BAD_REQUEST if request is incorrect; MISSING_FIELD if neither
            a name, nor a type, nor the 'isNew' flag were specified; UNKNOWN_ENTITY
            if the given account type id does not exist
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "404":
          content:
            application/json:
              examples:
                http404ResponseExample:
                  $ref: '#/components/examples/http404ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Account not found
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "423":
          content:
            application/json:
              examples:
                http423ResponseExample:
                  $ref: '#/components/examples/http423ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Account cannot get edited at the moment as it is currently
            being imported or updated (either by the user or by finAPI's automatic
            batch update).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Edit an account
      tags:
      - Accounts
  /api/v1/webForms/{id}:
    get:
      deprecated: true
      description: <strong>Caution</strong>! This endpoint is applicable only for
        customers using the old Web Form which is deprecated and will be removed.
        Web Form 2.0 customers must navigate <a href='?product=web_form_2.0#tag--Web-forms'
        target='_blank_'>here</a> for the same functionality.<br/><br/>Get a Web Form
        of the user that is authorized by the access_token. Must pass the Web Form's
        identifier and the user's access_token. <br/><br/>Note that every Web Form
        resource is automatically removed from the finAPI system after 7 days from
        its creation.
      operationId: getWebForm
      parameters:
      - description: Identifier of Web Form
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebForm'
          description: Requested Web Form
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "404":
          content:
            application/json:
              examples:
                http404ResponseExample:
                  $ref: '#/components/examples/http404ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Web Form not found
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Get a Web Form
      tags:
      - Web Forms
  /api/v1/users/verificationStatus:
    get:
      description: Get the verification status of the requested user. Must pass your
        global (i.e. client) access_token. Note that finAPI regards user identifiers
        case-insensitive.
      operationId: getVerificationStatus
      parameters:
      - description: User's identifier
        explode: true
        in: query
        name: userId
        required: true
        schema:
          type: string
        style: form
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationStatusResource'
          description: User's verification status
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "404":
          content:
            application/json:
              examples:
                http404ResponseExample:
                  $ref: '#/components/examples/http404ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: User not found
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Get a user's verification status
      tags:
      - Users
  /api/v1/tppCredentials/tppAuthenticationGroups:
    get:
      description: Get and search across all available TPP authentication groups.
        Must pass the <a href='https://documentation.finapi.io/access/Application-management.2763423767.html'
        target='_blank'>mandator admin client</a>'s access_token. You can set optional
        search criteria to get only those TPP authentication groups that you are interested
        in. If you do not specify any search criteria, then this service functions
        as a 'get all' service.
      operationId: getAndSearchTppAuthenticationGroups
      parameters:
      - description: A comma-separated list of TPP authentication group identifiers.
          If specified, then only TPP authentication groups whose identifier match
          any of the given identifiers will be regarded. The maximum number of identifiers
          is 1000.
        explode: true
        in: query
        name: ids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - description: Only the tpp authentication groups with name matching the given
          one should appear in the result list
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: 'Search by connected banks: only the banks with BLZ matching
          the given one should appear in the result list'
        explode: true
        in: query
        name: bankBlz
        required: false
        schema:
          type: string
        style: form
      - description: 'Search by connected banks: only the banks with name matching
          the given one should appear in the result list'
        explode: true
        in: query
        name: bankName
        required: false
        schema:
          type: string
        style: form
      - description: Result page that you want to retrieve
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          type: integer
        style: form
      - description: Maximum number of records per page. By default it's 20. Can be
          at most 500.
        explode: true
        in: query
        name: perPage
        required: false
        schema:
          default: 20
          maximum: 500
          minimum: 1
          type: integer
        style: form
      - description: 'Determines the order of the results. You can order the results
          by ''id'' and ''name''. The default order for this service is ''id,asc''.
          The general format is: ''property[,asc|desc]'', with ''asc'' being the default
          value.'
        explode: true
        in: query
        name: order
        required: false
        schema:
          items:
            default: id,asc
            type: string
          type: array
        style: form
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageableTppAuthenticationGroupResources'
          description: Requested TPP authentication groups
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Get all TPP Authentication Groups
      tags:
      - TPP Credentials
  /api/v1/tppCertificates/{id}:
    delete:
      description: 'Delete a single TPP certificate by its id. Must pass the <a href=''https://documentation.finapi.io/access/Application-management.2763423767.html''
        target=''_blank''>mandator admin client</a>''s access_token. '
      operationId: deleteCertificate
      parameters:
      - description: Id of the TPP certificate to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Some HTTP clients do not support the HTTP methods PATCH or DELETE.
          If you are using such a client in your application, you can use a POST request
          instead with this header indicating the originally intended HTTP method.
          POST Requests having this  header set will be treated either as PATCH or
          DELETE by the finAPI servers.
        explode: false
        in: header
        name: X-HTTP-Method-Override
        required: false
        schema:
          enum:
          - PATCH
          - DELETE
          type: string
        style: simple
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: TPP certificate deleted (empty response body)
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "404":
          content:
            application/json:
              examples:
                http404ResponseExample:
                  $ref: '#/components/examples/http404ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: TPP certificate not found
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Delete a TPP certificate
      tags:
      - TPP Certificates
    get:
      description: 'Get a single TPP certificate by its id. Must pass the <a href=''https://documentation.finapi.io/access/Application-management.2763423767.html''
        target=''_blank''>mandator admin client</a>''s access_token. '
      operationId: getCertificate
      parameters:
      - description: Id of requested TPP certificate
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TppCertificate'
          description: Requested TPP certificate
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "404":
          content:
            application/json:
              examples:
                http404ResponseExample:
                  $ref: '#/components/examples/http404ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: TPP certificate not found
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Get a TPP certificate
      tags:
      - TPP Certificates
  /api/v1/securities:
    get:
      description: 'Get securities of the user that is authorized by the access_token.
        Must pass the user''s access_token. You can set optional search criteria to
        get only those securities that you are interested in. If you do not specify
        any search criteria, then this service functions as a ''get all'' service.<p>Note:
        Whenever a security account is being updated, its security positions will
        be internally re-created, meaning that the identifier of a security position
        might change over time.</p>'
      operationId: getAndSearchAllSecurities
      parameters:
      - description: A comma-separated list of security identifiers. If specified,
          then only securities whose identifier match any of the given identifiers
          will be regarded. The maximum number of identifiers is 1000.
        explode: true
        in: query
        name: ids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - description: 'If specified, then only those securities will be contained in
          the result whose ''name'', ''isin'' or ''wkn'' contains the given search
          string (the matching works case-insensitive). If no securities contain the
          search string in any of these fields, then the result will be an empty list.
          NOTE: If the given search string consists of several terms (separated by
          whitespace), then ALL of these terms must be contained in the searched fields
          for a security to get included into the result.'
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: Comma-separated list of identifiers of accounts
        explode: true
        in: query
        name: accountIds
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - description: Result page that you want to retrieve.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          type: integer
        style: form
      - description: Maximum number of records per page. By default it's 20. Can be
          at most 500.
        explode: true
        in: query
        name: perPage
        required: false
        schema:
          default: 20
          maximum: 500
          minimum: 1
          type: integer
        style: form
      - description: 'Determines the order of the results. You can order the results
          by next fields: ''id'', ''name'', ''isin'', ''wkn'', ''quote'', ''quantityNominal'',
          ''marketValue'' and ''entryQuote''. The default order for all services is
          ''id,asc''. You can also order by multiple properties. In that case the
          order of the parameters passed is important. The general format is: ''property[,asc|desc]'',
          with ''asc'' being the default value.'
        explode: true
        in: query
        name: order
        required: false
        schema:
          items:
            default: id,ASC
            type: string
          type: array
        style: form
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageableSecurityList'
          description: List of requested securities
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Get and search all securities
      tags:
      - Securities
  /api/v1/securities/{ids}:
    get:
      deprecated: true
      description: 'THIS SERVICE IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
        to the ''Get and search all securities'' service instead if you want to get
        multiple securities, and pass a comma-separated list of identifiers with the
        ''ids'' parameter.<br/><br/>Get a list of multiple securities of the user
        that is authorized by the access_token. Must pass the securities'' identifiers
        and the user''s access_token. Securities whose identifiers do not exist or
        do not relate to the authorized user will not be contained in the result (If
        this applies to all of the given identifiers, then the result will be an empty
        list). <p>Note: Whenever a security account is being updated, its security
        positions will be internally re-created, meaning that the identifier of a
        security position might change over time.</p>'
      operationId: getMultipleSecurities
      parameters:
      - description: Comma-separated list of identifiers of requested securities
        explode: false
        in: path
        name: ids
        required: true
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityList'
          description: List of requested securities
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Get multiple securities
      tags:
      - Securities
  /api/v1/securities/{id}:
    get:
      description: 'Get a single security for a specific user. Must pass the security''s
        identifier and the user''s access_token. <p>Note: Whenever a security account
        is being updated, its security positions will be internally re-created, meaning
        that the identifier of a security position might change over time.</p>'
      operationId: getSecurity
      parameters:
      - description: Security identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Security'
          description: Requested security
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "404":
          content:
            application/json:
              examples:
                http404ResponseExample:
                  $ref: '#/components/examples/http404ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Security not found
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Get a security
      tags:
      - Securities
  /api/v1/payments:
    get:
      description: Get payments of the user that is authorized by the access_token.
        Must pass the user's access_token.<br/><br/>You can set optional search criteria
        to get only those payments returned you are interested in.<br/><br/>Web Form
        2.0 customers should also use this endpoint to learn about the status of the
        payment initiation. (The Payment ID can be found in the payload of the API
        response from the relevant Web Form 2.0 API endpoint).
      operationId: getPayments
      parameters:
      - description: A comma-separated list of payment identifiers. If specified,
          then only payments whose identifier is matching any of the given identifiers
          will be regarded. The maximum number of identifiers is 1000.
        explode: true
        in: query
        name: ids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - description: A comma-separated list of account identifiers. If specified,
          then only payments that relate to the given account(s) will be regarded.
          The maximum number of identifiers is 1000.
        explode: true
        in: query
        name: accountIds
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - description: If specified, then only those payments are regarded whose (absolute)
          total amount is equal or greater than the given amount will be regarded.
          The value must be a positive (absolute) amount.
        explode: true
        in: query
        name: minAmount
        required: false
        schema:
          type: number
        style: form
      - description: If specified, then only those payments are regarded whose (absolute)
          total amount is equal or less than the given amount will be regarded. Value
          must be a positive (absolute) amount.
        explode: true
        in: query
        name: maxAmount
        required: false
        schema:
          type: number
        style: form
      - description: 'A comma-separated list of payment statuses. If provided, then
          only payments whose status is matching any of the given statuses will be
          returned. Allowed values: ''OPEN'', ''PENDING'', ''SUCCESSFUL'', ''NOT_SUCCESSFUL''
          or ''DISCARDED''. Example: ''OPEN,PENDING''.'
        explode: true
        in: query
        name: status
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Result page that you want to retrieve
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          type: integer
        style: form
      - description: Maximum number of records per page. By default it's 20. Can be
          at most 500.
        explode: true
        in: query
        name: perPage
        required: false
        schema:
          default: 20
          maximum: 500
          minimum: 1
          type: integer
        style: form
      - description: 'Determines the order of the results. You can use the following
          fields for ordering the response: ''id'', ''amount'', ''requestDate'', ''executionDate''
          and ''instructedExecutionDate''. The default order for all services is ''id,asc''.'
        explode: true
        in: query
        name: order
        required: false
        schema:
          items:
            default: id,ASC
            type: string
          type: array
        style: form
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageablePaymentResources'
          description: List of requested payments
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Authentication required
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Get payments
      tags:
      - Payments
  /api/v1/notificationRules/{id}:
    delete:
      description: Delete a single notification rule of the user that is authorized
        by the access_token. Must pass the notification rule's identifier and the
        user's access_token.
      operationId: deleteNotificationRule
      parameters:
      - description: Identifier of the notification rule to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Some HTTP clients do not support the HTTP methods PATCH or DELETE.
          If you are using such a client in your application, you can use a POST request
          instead with this header indicating the originally intended HTTP method.
          POST Requests having this  header set will be treated either as PATCH or
          DELETE by the finAPI servers.
        explode: false
        in: header
        name: X-HTTP-Method-Override
        required: false
        schema:
          enum:
          - PATCH
          - DELETE
          type: string
        style: simple
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Notification rule deleted (empty response body)
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "404":
          content:
            application/json:
              examples:
                http404ResponseExample:
                  $ref: '#/components/examples/http404ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Notification rule not found
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "423":
          content:
            application/json:
              examples:
                http423ResponseExample:
                  $ref: '#/components/examples/http423ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Notification rules cannot get deleted at the moment as finAPI's
            automatic batch update is currently being executed
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Delete a notification rule
      tags:
      - Notification Rules
    get:
      description: Get a single notification rule of the user that is authorized by
        the access_token. Must pass the notification rule's identifier and the user's
        access_token.
      operationId: getNotificationRule
      parameters:
      - description: Identifier of requested notification rule
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationRule'
          description: Requested notification rule
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "404":
          content:
            application/json:
              examples:
                http404ResponseExample:
                  $ref: '#/components/examples/http404ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Notification rule not found
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Get a notification rule
      tags:
      - Notification Rules
  /api/v1/mandatorAdmin/getUserList:
    get:
      description: <p>Get a list of the users of the mandator that is authorized by
        the access_token. Must pass the <a href='https://documentation.finapi.io/access/Application-management.2763423767.html'
        target='_blank'>mandator admin client</a>'s access_token. You can set optional
        search criteria to get only those users that you are interested in. If you
        do not specify any search criteria, then this service functions as a 'get
        all' service.</p><p>Note that the original user id is no longer available
        in finAPI once a user has been deleted. Because of this, the userId of deleted
        users will be a distorted version of the original userId. For example, if
        the deleted user's id was originally 'user', then this service will return
        'uXXr' as the userId.</p>
      operationId: getUserList
      parameters:
      - description: Lower bound for a user's registration date, in the format 'YYYY-MM-DD'
          (e.g. '2016-01-01'). If specified, then only users whose 'registrationDate'
          is equal to or later than the given date will be regarded.
        explode: true
        in: query
        name: minRegistrationDate
        required: false
        schema:
          type: string
        style: form
      - description: Upper bound for a user's registration date, in the format 'YYYY-MM-DD'
          (e.g. '2016-01-01'). If specified, then only users whose 'registrationDate'
          is equal to or earlier than the given date will be regarded.
        explode: true
        in: query
        name: maxRegistrationDate
        required: false
        schema:
          type: string
        style: form
      - description: Lower bound for a user's deletion date, in the format 'YYYY-MM-DD'
          (e.g. '2016-01-01'). If specified, then only users whose 'deletionDate'
          is not null, and is equal to or later than the given date will be regarded.
        explode: true
        in: query
        name: minDeletionDate
        required: false
        schema:
          type: string
        style: form
      - description: Upper bound for a user's deletion date, in the format 'YYYY-MM-DD'
          (e.g. '2016-01-01'). If specified, then only users whose 'deletionDate'
          is null, or is equal to or earlier than the given date will be regarded.
        explode: true
        in: query
        name: maxDeletionDate
        required: false
        schema:
          type: string
        style: form
      - description: Lower bound for a user's last active date, in the format 'YYYY-MM-DD'
          (e.g. '2016-01-01'). If specified, then only users whose 'lastActiveDate'
          is not null, and is equal to or later than the given date will be regarded.
        explode: true
        in: query
        name: minLastActiveDate
        required: false
        schema:
          type: string
        style: form
      - description: Upper bound for a user's last active date, in the format 'YYYY-MM-DD'
          (e.g. '2016-01-01'). If specified, then only users whose 'lastActiveDate'
          is null, or is equal to or earlier than the given date will be regarded.
        explode: true
        in: query
        name: maxLastActiveDate
        required: false
        schema:
          type: string
        style: form
      - description: Whether to include the 'monthlyStats' for the returned users.
          If not specified, then the field defaults to 'false'.
        explode: true
        in: query
        name: includeMonthlyStats
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Minimum bound for the monthly stats (=oldest month that should
          be included). Must be passed in the format 'YYYY-MM'. If not specified,
          then the monthly stats will go back up to the first month in which the user
          existed (date of the user's registration). Note that this field is only
          regarded if 'includeMonthlyStats' = true.
        explode: true
        in: query
        name: monthlyStatsStartDate
        required: false
        schema:
          type: string
        style: form
      - description: Maximum bound for the monthly stats (=latest month that should
          be included). Must be passed in the format 'YYYY-MM'. If not specified,
          then the monthly stats will go up to either the current month (for active
          users), or up to the month of deletion (for deleted users). Note that this
          field is only regarded if  'includeMonthlyStats' = true.
        explode: true
        in: query
        name: monthlyStatsEndDate
        required: false
        schema:
          type: string
        style: form
      - description: A value of X means that the service will return only those users
          which had at least X bank connections imported at any time within the returned
          monthly stats set. This field is only regarded when 'includeMonthlyStats'
          is set to 'true'. The default value for this field is 0.
        explode: true
        in: query
        name: minBankConnectionCountInMonthlyStats
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - description: The identifier of a user to search for. If specified, then only
          the user with the given id will be regarded. If no user can be found for
          the passed userId (because the user was deleted or his username was misspelled),
          then the result list will be empty.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          type: string
        style: form
      - description: If NOT specified, then the service will regard both active and
          deleted users in the search. If set to 'true', then ONLY deleted users will
          be regarded. If set to 'false', then ONLY active users will be regarded.
        explode: true
        in: query
        name: isDeleted
        required: false
        schema:
          type: boolean
        style: form
      - description: If NOT specified, then the service will regard both locked and
          not locked users in the search. If set to 'true', then ONLY locked users
          will be regarded. If set to 'false', then ONLY not locked users will be
          regarded.
        explode: true
        in: query
        name: isLocked
        required: false
        schema:
          type: boolean
        style: form
      - description: Result page that you want to retrieve
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          type: integer
        style: form
      - description: Maximum number of records per page. By default it's 20. Can be
          at most 500.
        explode: true
        in: query
        name: perPage
        required: false
        schema:
          default: 20
          maximum: 500
          minimum: 1
          type: integer
        style: form
      - description: 'Determines the order of the results. You can order the results
          by ''userId''. The default order for this service is ''userId,asc''. The
          general format is: ''property[,asc|desc]'', with ''asc'' being the default
          value.'
        explode: true
        in: query
        name: order
        required: false
        schema:
          items:
            default: userId,ASC
            type: string
          type: array
        style: form
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageableUserInfoList'
          description: Requested users list
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Get user list
      tags:
      - Mandator Administration
  /api/v1/labels/{ids}:
    get:
      deprecated: true
      description: THIS SERVICE IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
        to the 'Get and search all labels' service instead if you want to get multiple
        labels, and pass a comma-separated list of identifiers with the 'ids' parameter.<br/><br/>Get
        a list of multiple labels of the user that is authorized by the access_token.Must
        pass the labels' identifiers and the user's access_token. Identifiers that
        do not exist or do not relate to the authorized user will not be contained
        in the result (If this applies to all of the given identifiers, then the result
        will be an empty list).
      operationId: getMultipleLabels
      parameters:
      - description: Comma-separated list of identifiers of requested labels
        explode: false
        in: path
        name: ids
        required: true
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelList'
          description: List of requested labels
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Get multiple labels
      tags:
      - Labels
  /api/v1/categories/{ids}:
    get:
      deprecated: true
      description: THIS SERVICE IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
        to the 'Get and search all categories' service instead if you want to get
        multiple categories, and pass a comma-separated list of identifiers with the
        'ids' parameter.<br/><br/>Get a list of multiple categories that are either
        a global finAPI category or a custom category of the authorized user. Must
        pass the categories' identifiers and the user's access_token. Categories whose
        identifiers do not exist or that relate to a different user not be contained
        in the result (If this applies to all of the given identifiers, then the result
        will be an empty list).
      operationId: getMultipleCategories
      parameters:
      - description: Comma-separated list of identifiers of requested categories
        explode: false
        in: path
        name: ids
        required: true
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryList'
          description: List of requested categories
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Get multiple categories
      tags:
      - Categories
  /api/v1/categories/cashFlows:
    get:
      description: 'Get the cash flow(s) (= total income, spending, and balance) for
        one or several categories. You can specify various criteria such as the time
        period to calculate the cash flows for, or what categories to do the calculations
        for. The cash flow for a category may include the cash flows for all of its
        sub-categories, or not include it, depending on the ''includeSubCashFlows''
        setting. Must pass the user''s access_token.<br/><br/>NOTE: This service is
        not calculating exchange rates for transactions, so if the regarded transactions
        do not all have the same currency, then this service is unable to provide
        accurate data.'
      operationId: getCashFlows
      parameters:
      - description: If specified, then only transactions that contain the search
          term in their purpose or counterpart fields will be contained in the result.
          Note that the search is case insensitive.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: The counterpart is the person or institution that received your
          payment, or that you made the payment to. If this parameter is specified,
          then only transactions that contain the given term in one (or more) of their
          counterpart fields ('counterpartName', 'counterpartAccountNumber', 'counterpartIban',
          'counterpartBic' or 'counterpartBlz') will be contained in the result. Note
          that the search is case insensitive.
        explode: true
        in: query
        name: counterpart
        required: false
        schema:
          type: string
        style: form
      - description: 'If specified, then only those transactions will be contained
          in the result whose purpose field contains the given search string. Note
          that the search is case insensitive.NOTE: If the given search string consists
          of several terms (separated by whitespace), then ALL of these terms must
          be contained in the purpose for a transaction to get included into the result.'
        explode: true
        in: query
        name: purpose
        required: false
        schema:
          type: string
        style: form
      - description: A comma-separated list of account identifiers. If specified,
          then only transactions that relate to the given accounts will be regarded.
          If not specified, then all accounts will be regarded.
        explode: true
        in: query
        name: accountIds
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - description: Lower bound for a transaction's booking date as returned by the
          bank (= original booking date), in the format 'YYYY-MM-DD' (e.g. '2016-01-01').
          If specified, then only transactions whose 'bankBookingDate' is equal to
          or later than the given date will be regarded.
        explode: true
        in: query
        name: minBankBookingDate
        required: false
        schema:
          type: string
        style: form
      - description: Upper bound for a transaction's booking date as returned by the
          bank (= original booking date), in the format 'YYYY-MM-DD' (e.g. '2016-01-01').
          If specified, then only transactions whose 'bankBookingDate' is equal to
          or earlier than the given date will be regarded.
        explode: true
        in: query
        name: maxBankBookingDate
        required: false
        schema:
          type: string
        style: form
      - description: Lower bound for a transaction's booking date as set by finAPI,
          in the format 'YYYY-MM-DD' (e.g. '2016-01-01'). For details about the meaning
          of the finAPI booking date, please see the field's documentation in the
          service's response.
        explode: true
        in: query
        name: minFinapiBookingDate
        required: false
        schema:
          type: string
        style: form
      - description: Upper bound for a transaction's booking date as set by finAPI,
          in the format 'YYYY-MM-DD' (e.g. '2016-01-01'). For details about the meaning
          of the finAPI booking date, please see the field's documentation in the
          service's response.
        explode: true
        in: query
        name: maxFinapiBookingDate
        required: false
        schema:
          type: string
        style: form
      - description: 'If specified, then only transactions whose amount is equal to
          or greater than the given amount will be regarded. Can contain a positive
          or negative number with at most two decimal places. Examples: -300.12, or
          90.95'
        explode: true
        in: query
        name: minAmount
        required: false
        schema:
          type: number
        style: form
      - description: 'If specified, then only transactions whose amount is equal to
          or less than the given amount will be regarded. Can contain a positive or
          negative number with at most two decimal places. Examples: -300.12, or 90.95'
        explode: true
        in: query
        name: maxAmount
        required: false
        schema:
          type: number
        style: form
      - description: If specified, then only transactions with the given direction(s)
          will be regarded. Use 'income' for regarding only received payments (amount
          >= 0), 'spending' for regarding only outgoing payments (amount < 0), or
          'all' to regard both directions. If not specified, the direction defaults
          to 'all'.
        explode: true
        in: query
        name: direction
        required: false
        schema:
          default: all
          enum:
          - all
          - income
          - spending
          type: string
        style: form
      - description: A comma-separated list of label identifiers. If specified, then
          only transactions that have been marked with at least one of the given labels
          will be contained in the result.
        explode: true
        in: query
        name: labelIds
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - description: 'If specified, then the result will contain only those cash flows
          that relate to the given categories. Note that the cash flow for a category
          may include/exclude the cash flows of its sub-categories, depending on the
          ''includeSubCashFlows'' setting. To include the cash flow of not categorized
          transactions, pass the value ''0'' as categoryId. Note: When this parameter
          is NOT set, then the result will contain a cash flow for all categories
          that have transactions associated to them (this includes the ''null''-category
          for the cash flow of not categorized transactions), more precisely: transactions
          that fulfill the filter criteria. Categories that have no associated transactions
          according to the filter criteria will not appear in the result. However,
          when you specify this parameter, then all specified categories will have
          a cash flow entry in the result, even if there are no associated transactions
          for the category (the cash flow will have income, spending and balance all
          set to zero).'
        explode: true
        in: query
        name: categoryIds
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - description: If specified, then only transactions that have their 'isNew'
          flag set to true/false will be regarded for the cash flow calculations.
        explode: true
        in: query
        name: isNew
        required: false
        schema:
          type: boolean
        style: form
      - description: Lower bound for a transaction's import date, in the format 'YYYY-MM-DD'
          (e.g. '2016-01-01'). If specified, then only transactions whose 'importDate'
          is equal to or later than the given date will be regarded.
        explode: true
        in: query
        name: minImportDate
        required: false
        schema:
          type: string
        style: form
      - description: Upper bound for a transaction's import date, in the format 'YYYY-MM-DD'
          (e.g. '2016-01-01'). If specified, then only transactions whose 'importDate'
          is equal to or earlier than the given date will be regarded.
        explode: true
        in: query
        name: maxImportDate
        required: false
        schema:
          type: string
        style: form
      - description: If it is true, then the income, spending, balance and count of
          transactions of a main category results from all transactions that have
          either this (main) category or any of its subcategories assigned (of course
          all transactions depends from the other filtering settings); If it is false,
          then the income, spending, balance and count of transactions of a main category
          only results from the transactions that have exactly this (main) category
          assigned. Default value for this parameter is 'true'.
        explode: true
        in: query
        name: includeSubCashFlows
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: 'Determines the order of the results. You can order the results
          by ''income'', ''spending'', ''balance'', ''category.id'' or ''category.name''.
          The default order for this service is ''category.id,asc''. You can also
          order by multiple properties. In that case the order of the parameters passed
          is important. Example: ''/cashFlows?order=income,desc&order=spending,asc&balance,desc''
          will return as first result the category with the highest income. If two
          categories have the same income, it returns the category with the highest
          spending first (because spending is a negative value) and so on. The general
          format is: ''property[,asc|desc]'', with ''asc'' being the default value.'
        explode: true
        in: query
        name: order
        required: false
        schema:
          items:
            default: category.id,ASC
            type: string
          type: array
        style: form
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CashFlowList'
          description: List of requested cash flows
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "404":
          content:
            application/json:
              examples:
                http404ResponseExample:
                  $ref: '#/components/examples/http404ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Category not found
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Get cash flows
      tags:
      - Categories
  /api/v1/banks:
    get:
      description: Get and search banks from finAPI's database of banks. Must pass
        the authorized user's access_token, or your client's access_token. You can
        set optional search criteria to get only those banks that you are interested
        in. If you do not specify any search criteria, then this service functions
        as a 'get all' service.
      operationId: getAndSearchAllBanks
      parameters:
      - description: A comma-separated list of bank identifiers. If specified, then
          only banks whose identifier match any of the given identifiers will be regarded.
          The maximum number of identifiers is 1000.
        explode: true
        in: query
        name: ids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - description: 'If specified, then only those banks will be contained in the
          result whose ''name'', ''blz'', ''bic'' or ''city'' contains the given search
          string (the matching works case-insensitive). If no banks contain the search
          string in any of the regarded fields, then the result will be an empty list.
          Note that you may also pass an IBAN in this field, in which case finAPI
          will try to detect the related bank and regard only this bank for the search
          (The IBAN may not contain spaces). Also note: If the given search string
          consists of several terms (separated by whitespace), then ALL of these terms
          must apply to a bank for it to get included into the result.'
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: THIS FIELD IS DEPRECATED AND WILL BE REMOVED. Please refer to
          the 'supportedInterfaces' field instead. If specified, then only supported
          (in case of 'true' value) or unsupported (in case of 'false' value) banks
          will be regarded.
        explode: true
        in: query
        name: isSupported
        required: false
        schema:
          type: boolean
        style: form
      - deprecated: true
        description: THIS FIELD IS DEPRECATED AND WILL BE REMOVED. If specified, then
          only those banks will be regarded that have the given value (true or false)
          for their 'pinsAreVolatile' field.
        explode: true
        in: query
        name: pinsAreVolatile
        required: false
        schema:
          type: boolean
        style: form
      - deprecated: true
        description: 'THIS FIELD IS DEPRECATED AND WILL BE REMOVED. Please refer to
          the ''supportedInterfaces'' field instead. Comma-separated list of data
          sources. Possible values: WEB_SCRAPER,FINTS_SERVER. If this parameter is
          specified, then only those banks will be regarded in the search that support
          ALL of the given data sources. Note that this does NOT imply that those
          data sources must be the only data sources that are supported by a bank.'
        explode: true
        in: query
        name: supportedDataSources
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: 'Comma-separated list of bank interfaces. Possible values: FINTS_SERVER,WEB_SCRAPER,XS2A.
          If this parameter is specified, then all the banks that support at least
          one of the given interfaces will be returned. Note that this does NOT imply
          that those interfaces must be the only ones that are supported by a bank.'
        explode: true
        in: query
        name: supportedInterfaces
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: 'Comma-separated list of two-letter country codes (ISO 3166 ALPHA-2),
          for example: DE, AT. If set, then only those banks will be regarded in the
          search that are located in the specified countries. Notes: Banks which do
          not have a location set (i.e. international institutes) will ALWAYS be regarded
          in the search, independent of what you specify for this field. When you
          pass a country code that doesn''t exist in the ISO 3166 ALPHA-2 standard,
          then the service will respond with 400 BAD_REQUEST.'
        explode: true
        in: query
        name: location
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A comma-separated list of TPP authentication group identifiers.
          If specified, then only banks who have at least one interface belonging
          to one of the given groups will be regarded. The maximum number of identifiers
          is 1000.
        explode: true
        in: query
        name: tppAuthenticationGroupIds
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - description: If specified, then only those banks will be regarded that have
          the given value (true or false) for their 'isTestBank' field.
        explode: true
        in: query
        name: isTestBank
        required: false
        schema:
          type: boolean
        style: form
      - description: Result page that you want to retrieve.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          type: integer
        style: form
      - description: Maximum number of records per page. By default it's 20. Can be
          at most 500.
        explode: true
        in: query
        name: perPage
        required: false
        schema:
          default: 20
          maximum: 500
          minimum: 1
          type: integer
        style: form
      - description: 'Determines the order of the results. You can order the results
          by ''id'', ''name'', ''blz'', ''bic'' or ''popularity''. The default order
          for all services is ''id,asc''. You can also order by multiple properties.
          In that case the order of the parameters passed is important. Example: ''/banks?order=name,desc&order=id,asc''
          will return banks ordered by ''name'' (descending), where banks with the
          same ''name'' are ordered by ''id'' (ascending). The general format is:
          ''property[,asc|desc]'', with ''asc'' being the default value.'
        explode: true
        in: query
        name: order
        required: false
        schema:
          items:
            default: id,ASC
            type: string
          type: array
        style: form
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageableBankList'
          description: List of requested banks
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Get and search all banks
      tags:
      - Banks
  /api/v1/banks/{ids}:
    get:
      deprecated: true
      description: THIS SERVICE IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
        to the 'Get and search all banks' service instead if you want to get multiple
        banks, and pass a comma-separated list of identifiers with the 'ids' parameter.<br/><br/>Get
        a list of multiple banks from finAPI's database of banks. You have to pass
        a list of bank identifiers, and either the authorized user's access_token,
        or your client's access token. Note that banks whose identifiers do not exist
        will not be contained in the result (If this applies to all of the given identifiers,
        then the result will be an empty list).
      operationId: getMultipleBanks
      parameters:
      - description: Comma-separated list of identifiers of requested banks
        explode: false
        in: path
        name: ids
        required: true
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankList'
          description: List of requested banks
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Get multiple banks
      tags:
      - Banks
  /api/v1/banks/{id}:
    get:
      description: Get a single bank from finAPI's database of banks. You have to
        pass the bank's identifier, and either the authorized user's access_token,
        or your client's access token.
      operationId: getBank
      parameters:
      - description: Identifier of requested bank
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bank'
          description: Requested Bank
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "404":
          content:
            application/json:
              examples:
                http404ResponseExample:
                  $ref: '#/components/examples/http404ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bank not found
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Get a bank
      tags:
      - Banks
  /api/v1/bankConnections:
    delete:
      description: 'Delete all bank connections of the user that is authorized by
        the access_token. Must pass the user''s access_token.<br/><br/>Notes: <br/>-
        All notification rules that are connected to any specific bank connection
        will get deleted as well. <br/>- If at least one bank connection is busy (currently
        in the process of import, update, or transaction categorization), then this
        service will perform no action at all.'
      operationId: deleteAllBankConnections
      parameters:
      - description: Some HTTP clients do not support the HTTP methods PATCH or DELETE.
          If you are using such a client in your application, you can use a POST request
          instead with this header indicating the originally intended HTTP method.
          POST Requests having this  header set will be treated either as PATCH or
          DELETE by the finAPI servers.
        explode: false
        in: header
        name: X-HTTP-Method-Override
        required: false
        schema:
          enum:
          - PATCH
          - DELETE
          type: string
        style: simple
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentifierList'
          description: List of identifiers of deleted bank connections
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "423":
          content:
            application/json:
              examples:
                http423ResponseExample:
                  $ref: '#/components/examples/http423ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: No action was performed at the moment as at least one bank
            connection is being imported, updated (either by the user or by finAPI's
            automatic batch update), or because the categorization of transactions
            is currently performed.
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Delete all bank connections
      tags:
      - Bank Connections
    get:
      description: Get bank connections of the user that is authorized by the access_token.
        Must pass the user's access_token. You can set optional search criteria to
        get only those bank connections that you are interested in. If you do not
        specify any search criteria, then this service functions as a 'get all' service.<br/>Web
        Form 2.0 customers should also use this endpoint to learn about the status
        of the bank connection (The bank connection ID can be found in the payload
        of the API response from the relevant Web Form 2.0 API endpoint).
      operationId: getAllBankConnections
      parameters:
      - description: A comma-separated list of bank connection identifiers. If specified,
          then only bank connections whose identifier match any of the given identifiers
          will be regarded. The maximum number of identifiers is 1000.
        explode: true
        in: query
        name: ids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankConnectionList'
          description: List of requested bank connections
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Get all bank connections
      tags:
      - Bank Connections
  /api/v1/bankConnections/{ids}:
    get:
      deprecated: true
      description: THIS SERVICE IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
        to the 'Get all bank connections' service instead if you want to get multiple
        bank connections, and pass a comma-separated list of identifiers with the
        'ids' parameter.<br/><br/>Get a list of multiple bank connections of the user
        that is authorized by the access_token. Must pass the connections' identifiers
        and the user's access_token. Connections whose identifiers do not exist or
        do not relate to the authorized user will not be contained in the result (If
        this applies to all of the given identifiers, then the result will be an empty
        list).
      operationId: getMultipleBankConnections
      parameters:
      - description: Comma-separated list of identifiers of requested bank connections
        explode: false
        in: path
        name: ids
        required: true
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankConnectionList'
          description: List of requested bank connections
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Get multiple bank connections
      tags:
      - Bank Connections
  /api/v1/accounts:
    delete:
      description: 'Delete all accounts of the user that is authorized by the access_token,
        including all transactions and balance data. Must pass the user''s access_token.<br/><br/>Notes:
        <br/>- Deleting all of the user''s accounts also deletes all of his bank connections.
        <br/>- All notification rules that are connected to any specific accounts
        will get deleted as well. <br/>- If at least one of the user''s bank connections
        in currently in the process of import, update, or transaction categorization,
        then this service will perform no action at all.'
      operationId: deleteAllAccounts
      parameters:
      - description: Some HTTP clients do not support the HTTP methods PATCH or DELETE.
          If you are using such a client in your application, you can use a POST request
          instead with this header indicating the originally intended HTTP method.
          POST Requests having this  header set will be treated either as PATCH or
          DELETE by the finAPI servers.
        explode: false
        in: header
        name: X-HTTP-Method-Override
        required: false
        schema:
          enum:
          - PATCH
          - DELETE
          type: string
        style: simple
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentifierList'
          description: List of identifiers of deleted accounts
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "423":
          content:
            application/json:
              examples:
                http423ResponseExample:
                  $ref: '#/components/examples/http423ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: No action was performed as at least one account is currently
            being imported, updated (either by the user or by finAPI's automatic batch
            update), or because the categorization of transactions is performed.
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Delete all accounts
      tags:
      - Accounts
    get:
      description: Get bank accounts of the user that is authorized by the access_token.
        Must pass the user's access_token. You can set optional search criteria to
        get only those bank accounts that you are interested in. If you do not specify
        any search criteria, then this service functions as a 'get all' service.
      operationId: getAndSearchAllAccounts
      parameters:
      - description: A comma-separated list of account identifiers. If specified,
          then only accounts whose identifier match any of the given identifiers will
          be regarded. The maximum number of identifiers is 1000.
        explode: true
        in: query
        name: ids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - description: 'If specified, then only those accounts will be contained in
          the result whose ''accountName'', ''iban'', ''accountNumber'' or ''subAccountNumber''
          contains the given search string (the matching works case-insensitive).
          If no accounts contain the search string in any of these fields, then the
          result will be an empty list. NOTE: If the given search string consists
          of several terms (separated by whitespace), then ALL of these terms must
          be contained in the searched fields for an account to get included into
          the result.'
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: THIS FIELD IS DEPRECATED AND WILL BE REMOVED. Please refer to
          the 'accountTypes' field instead. A comma-separated list of account type
          ids. If specified, then only accounts that relate to the given types will
          be regarded. If not specified, then all accounts will be regarded.
        explode: true
        in: query
        name: accountTypeIds
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - description: A comma-separated list of account types. If specified, then only
          accounts that relate to the given types will be regarded. If not specified,
          then all accounts will be regarded.
        explode: true
        in: query
        name: accountTypes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A comma-separated list of bank connection identifiers. If specified,
          then only accounts that relate to the given bank connections will be regarded.
          If not specified, then all accounts will be regarded.
        explode: true
        in: query
        name: bankConnectionIds
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - description: Lower bound for a account's last successful update date, in the
          format 'YYYY-MM-DD' (e.g. '2016-01-01'). If specified, then only accounts
          whose 'lastSuccessfulUpdate' is equal to or later than the given date will
          be regarded.
        explode: true
        in: query
        name: minLastSuccessfulUpdate
        required: false
        schema:
          type: string
        style: form
      - description: Upper bound for a account's last successful update date, in the
          format 'YYYY-MM-DD' (e.g. '2016-01-01'). If specified, then only accounts
          whose 'lastSuccessfulUpdate' is equal to or earlier than the given date
          will be regarded.
        explode: true
        in: query
        name: maxLastSuccessfulUpdate
        required: false
        schema:
          type: string
        style: form
      - description: 'If specified, then only accounts whose balance is equal to or
          greater than the given balance will be regarded. Can contain a positive
          or negative number with at most two decimal places. Examples: -300.12, or
          90.95'
        explode: true
        in: query
        name: minBalance
        required: false
        schema:
          type: number
        style: form
      - description: 'If specified, then only accounts whose balance is equal to or
          less than the given balance will be regarded. Can contain a positive or
          negative number with at most two decimal places. Examples: -300.12, or 90.95'
        explode: true
        in: query
        name: maxBalance
        required: false
        schema:
          type: number
        style: form
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountList'
          description: List of requested accounts
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Get and search all accounts
      tags:
      - Accounts
  /api/v1/accounts/{ids}:
    get:
      deprecated: true
      description: 'THIS SERVICE IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
        to the ''Get and search all accounts'' service instead if you want to get
        multiple accounts, and pass a comma-separated list of identifiers with the
        ''ids'' parameter.<br/><br/>Get a list of multiple bank accounts of the user
        that is authorized by the access_token. Must pass the accounts'' identifiers
        and the user''s access_token. Accounts whose identifiers do not exist or do
        not relate to the authorized user will not be contained in the result (If
        this applies to all of the given identifiers, then the result will be an empty
        list). '
      operationId: getMultipleAccounts
      parameters:
      - description: Comma-separated list of identifiers of requested accounts
        explode: false
        in: path
        name: ids
        required: true
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountList'
          description: List of requested accounts
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Get multiple accounts
      tags:
      - Accounts
  /api/v1/accounts/dailyBalances:
    get:
      description: 'Returns the user''s daily balances for a given period and a set
        of specified accounts (or all accounts, if none are specified). The daily
        balances are calculated by finAPI and are based on the current balances of
        the regarded accounts.<br/><br/>NOTE: This service is not calculating exchange
        rates for transactions, so if an account contains any transactions with a
        currency different to the account''s currency, then the service is unable
        to provide accurate data.'
      operationId: getDailyBalances
      parameters:
      - description: A comma-separated list of (non-security) account identifiers.
          If no accounts are specified, all (non-security) accounts of the user are
          regarded.
        explode: true
        in: query
        name: accountIds
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - description: A string in the format 'YYYY-MM-DD'. Note that the requested
          date range [startDate..endDate] may not exceed 1 year (366 days - considering
          Leap Years too).If startDate is not specified, it defaults to the endDate
          minus one month.
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          type: string
        style: form
      - description: A string in the format 'YYYY-MM-DD'. Note that the requested
          date range [startDate..endDate] may not exceed 1 year (366 days - considering
          Leap Years too). If endDate is not specified, it defaults to today's date.
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          type: string
        style: form
      - description: Whether finAPI should project the first and last actually existing
          balance of an account into the past and future. When passing 'true', then
          the result will always contain a daily balance for every day of the entire
          requested date range, even for days before the first actually existing balance,
          resp. after the last actually existing balance. Those days will have the
          same balance as the day of the first actual balance, resp. last actual balance,
          i.e. the first/last balance will be infinitely projected into the past/the
          future. When passing 'false', then the result will contain daily balances
          only from the day on where the first actual balance exists for any of the
          regarded accounts, and only up to the day where the last actual balance
          exists for any of the regarded accounts. Note that when in this case there
          are no actual balances within the requested date range, then an empty array
          will be returned. Default value for this parameter is 'true'.
        explode: true
        in: query
        name: withProjection
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: Result page that you want to retrieve.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          type: integer
        style: form
      - description: Maximum number of records per page. By default it's 20. Can be
          at most 500.
        explode: true
        in: query
        name: perPage
        required: false
        schema:
          default: 20
          maximum: 500
          minimum: 1
          type: integer
        style: form
      - description: 'Determines the order of the results. You can order the results
          by ''date'', ''balance'', ''income'' or ''spending''. The default order
          for this service is ''date,asc''. You can also order by multiple properties.
          In that case the order of the parameters passed is important. Example: ''/accounts/dailyBalances?order=date,desc&order=balance,asc''
          will return daily balances ordered by ''date'' (descending), where items
          with the same ''date'' are ordered by ''balance'' (ascending). The general
          format is: ''property[,asc|desc]'', with ''asc'' being the default value.'
        explode: true
        in: query
        name: order
        required: false
        schema:
          items:
            default: date,ASC
            type: string
          type: array
        style: form
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DailyBalanceList'
          description: List of requested daily balances
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "404":
          content:
            application/json:
              examples:
                http404ResponseExample:
                  $ref: '#/components/examples/http404ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Account(s) not found
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "422":
          content:
            application/json:
              examples:
                http422ResponseExample:
                  $ref: '#/components/examples/http422ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Invalid date range (e.g. endDate < startDate)
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Get daily balances
      tags:
      - Accounts
  /api/v1/users/{userId}:
    delete:
      description: Delete an unverified user. Must pass your global (i.e. client)
        access_token.<br/><br/>Notes:<br/>&bull; Unverified users can only exist if
        the field 'isUserAutoVerificationEnabled' (see Client Configuration Resource)
        is set to 'false' (or had been false at some point in the past).<br/>&bull;
        finAPI will send a notification about the deletion of the user to each of
        your clients that has a user synchronization callback URL set in its configuration.
        This also includes the client that is performing this request.<br/>&bull;
        finAPI regards user identifiers case-insensitive.
      operationId: deleteUnverifiedUser
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: Some HTTP clients do not support the HTTP methods PATCH or DELETE.
          If you are using such a client in your application, you can use a POST request
          instead with this header indicating the originally intended HTTP method.
          POST Requests having this  header set will be treated either as PATCH or
          DELETE by the finAPI servers.
        explode: false
        in: header
        name: X-HTTP-Method-Override
        required: false
        schema:
          enum:
          - PATCH
          - DELETE
          type: string
        style: simple
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: User deleted (empty response body)
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Identifier is not given
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "404":
          content:
            application/json:
              examples:
                http404ResponseExample:
                  $ref: '#/components/examples/http404ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: User not found
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "422":
          content:
            application/json:
              examples:
                http422ResponseExample:
                  $ref: '#/components/examples/http422ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The user with the given identifier is already verified
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Delete an unverified user
      tags:
      - Users
  /api/v1/bankConnections/{id}/aisConsent:
    delete:
      description: Deletes a consent for an interface of a bank connection, on finAPI
        and on the bank's side.<br/><br/><b>ATTENTION:</b> For XS2A interface additional
        headers must be included in the request if the end user is involved. Please
        refer to the <a href='#general-user-metadata'>User metadata</a> section under
        'General Information' of the API documentation.
      operationId: deleteAccessData
      parameters:
      - description: Identifier of a bank connection
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Target banking interface
        explode: true
        in: query
        name: interface
        required: true
        schema:
          enum:
          - WEB_SCRAPER
          - FINTS_SERVER
          - XS2A
          type: string
        style: form
      - description: Whether the consent should get deleted from the finAPI database
          in any case, even if it couldn't get deleted on the bank’s side. Default
          value is 'false'
        explode: true
        in: query
        name: forceDeletion
        required: false
        schema:
          type: boolean
        style: form
      - description: The IP address of the user's device. This header will be forwarded
          to the bank if the 'XS2A' interface is used.
        explode: false
        in: header
        name: PSU-IP-Address
        required: false
        schema:
          format: ipv4
          type: string
        style: simple
      - description: The user's device and/or operating system identification. This
          header will be forwarded to the bank if the 'XS2A' interface is used.
        explode: false
        in: header
        name: PSU-Device-OS
        required: false
        schema:
          type: string
        style: simple
      - description: The user's web browser or other client device identification.
          This header will be forwarded to the bank if the 'XS2A' interface is used.
        explode: false
        in: header
        name: PSU-User-Agent
        required: false
        schema:
          type: string
        style: simple
      - description: Some HTTP clients do not support the HTTP methods PATCH or DELETE.
          If you are using such a client in your application, you can use a POST request
          instead with this header indicating the originally intended HTTP method.
          POST Requests having this  header set will be treated either as PATCH or
          DELETE by the finAPI servers.
        explode: false
        in: header
        name: X-HTTP-Method-Override
        required: false
        schema:
          enum:
          - PATCH
          - DELETE
          type: string
        style: simple
      - description: With any API call, you can pass a request ID. The request ID
          can be an arbitrary string with up to 255 characters. Passing a longer string
          will result in an error. If you don't pass a request ID for a call, finAPI
          will generate a random ID internally. The request ID is always returned
          back in the response of a service, as a header with name 'X-Request-Id'.
          We highly recommend to always pass a (preferably unique) request ID, and
          include it into your client application logs whenever you make a request
          or receive a response (especially in the case of an error response). finAPI
          is also logging request IDs on its end. Having a request ID can help the
          finAPI support team to work more efficiently and solve tickets faster.
        explode: false
        in: header
        name: X-Request-Id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteConsent'
          description: Consent deletion result
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "400":
          content:
            application/json:
              examples:
                http400ResponseExample:
                  $ref: '#/components/examples/http400ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Bad Request
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "401":
          content:
            application/json:
              examples:
                http401ResponseExample:
                  $ref: '#/components/examples/http401ResponseExample'
              schema:
                $ref: '#/components/schemas/BadCredentialsError'
          description: Not authenticated or invalid access_token
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "403":
          content:
            application/json:
              examples:
                http403ResponseExample:
                  $ref: '#/components/examples/http403ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Incorrect authorization role or you are not allowed to call
            this service for other reasons (see error message).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "422":
          content:
            application/json:
              examples:
                http422ResponseExample:
                  $ref: '#/components/examples/http422ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: UNKNOWN_ENTITY:<br/> - if the given bank connection identifier
            does not exist;<br/> - if the given interface does not exist for the bank
            connection;<br/>INVALID_CONSENT:<br/> - if the bank server responded with
            an error when finAPI tried to delete the consent.<br/>
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "423":
          content:
            application/json:
              examples:
                http423ResponseExample:
                  $ref: '#/components/examples/http423ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: The consent cannot be removed at the moment as the bank connection
            interface is currently being imported or updated (either by the user or
            by finAPI's automatic batch update).
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
        "500":
          content:
            application/json:
              examples:
                http500ResponseExample:
                  $ref: '#/components/examples/http500ResponseExample'
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: An unexpected error occurred
          headers:
            X-Request-Id:
              $ref: '#/components/headers/X-Request-Id'
      security:
      - finapi_auth:
        - all
      summary: Delete a consent
      tags:
      - Bank Connections
components:
  examples:
    http400ResponseExample:
      value:
        errors:
        - message: Bad request
          code: BAD_REQUEST
          type: TECHNICAL
        date: 2018-01-01 00:00:00.000
        requestId: selfgen-ddf0b8c9-fab5-4bc8-a8f8-51cc7e118ab3
        endpoint: https://finapi.io
        authContext: 1/2
        bank: "00000000"
    http401ResponseExample:
      value:
        error: invalid_token
        errorDescription: Not authenticated or invalid access_token
    http403ResponseExample:
      value:
        errors:
        - message: Access is denied
          code: UNAUTHORIZED_ACCESS
          type: TECHNICAL
        date: 2018-01-01 00:00:00.000
        requestId: selfgen-ddf0b8c9-fab5-4bc8-a8f8-51cc7e118ab3
        endpoint: https://finapi.io
        authContext: 1/2
        bank: "00000000"
    http404ResponseExample:
      value:
        errors:
        - message: Resource not found
          code: UNKNOWN_ENTITY
          type: TECHNICAL
        date: 2018-01-01 00:00:00.000
        requestId: selfgen-ddf0b8c9-fab5-4bc8-a8f8-51cc7e118ab3
        endpoint: https://finapi.io
        authContext: 1/2
        bank: "00000000"
    http422ResponseExample:
      value:
        errors:
        - message: Illegal field value given
          code: ILLEGAL_FIELD_VALUE
          type: TECHNICAL
        date: 2018-01-01 00:00:00.000
        requestId: selfgen-ddf0b8c9-fab5-4bc8-a8f8-51cc7e118ab3
        endpoint: https://finapi.io
        authContext: 1/2
        bank: "00000000"
    http423ResponseExample:
      value:
        errors:
        - message: The requested resource is locked
          code: LOCKED
          type: TECHNICAL
        date: 2018-01-01 00:00:00.000
        requestId: selfgen-ddf0b8c9-fab5-4bc8-a8f8-51cc7e118ab3
        endpoint: https://finapi.io
        authContext: 1/2
        bank: "00000000"
    http451ResponseExample:
      value:
        errors:
        - message: "285736"
          code: WEB_FORM_REQUIRED
          type: BUSINESS
        date: 2018-01-01 00:00:00.000
        requestId: selfgen-ddf0b8c9-fab5-4bc8-a8f8-51cc7e118ab3
        endpoint: https://finapi.io
        authContext: 1/2
        bank: "00000000"
    http500ResponseExample:
      value:
        errors:
        - message: An unexpected error occurred
          code: UNEXPECTED_ERROR
          type: TECHNICAL
        date: 2018-01-01 00:00:00.000
        requestId: selfgen-ddf0b8c9-fab5-4bc8-a8f8-51cc7e118ab3
        endpoint: https://finapi.io
        authContext: 1/2
        bank: "00000000"
    http501ResponseExample:
      value:
        errors:
        - message: The bank is currently not supported by finAPI.
          code: UNSUPPORTED_BANK
          type: TECHNICAL
        date: 2018-01-01 00:00:00.000
        requestId: selfgen-ddf0b8c9-fab5-4bc8-a8f8-51cc7e118ab3
        endpoint: https://finapi.io
        authContext: 1/2
        bank: "00000000"
    http510ResponseExample:
      value:
        errors:
        - message: Es muss eine Zwei-Faktor-Authentifizierungsmethode ausgewählt werden
          code: ADDITIONAL_AUTHENTICATION_REQUIRED
          type: BUSINESS
          multiStepAuthentication:
            hash: 678b13f4be9ed7d981a840af8131223a
            status: TWO_STEP_PROCEDURE_REQUIRED
            challengeMessage: Bitte die TAN verwenden, die Sie per SMS erhalten haben.
            answerFieldLabel: TAN
            redirectUrl: https://user-login.bank.de/
            redirectContext: "12345"
            redirectContextField: state
            twoStepProcedures:
            - procedureId: "955"
              procedureName: mobileTAN
              procedureChallengeType: TEXT
              implicitExecute: false
            photoTanMimeType: image/svg+xml
            photoTanData: PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iaXNvLTg4NTktMSI/Pgo8IURPQ1RZUEUgc3ZnIFBVQkxJQyAiLS8vVzNDLy9EVEQgU1ZHIDEuMS8vRU4iICJodHRwOi8vd3d3LnczLm9yZy9HcmFwaGljcy9TVkcvMS4xL0RURC9zdmcxMS5kdGQiPgo8c3ZnIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHZlcnNpb249IjEuMSIgdmlld0JveD0iMCAwIDIxMi43NTUgMjEyLjc1NSIgZW5hYmxlLWJhY2tncm91bmQ9Im5ldyAwIDAgMjEyLjc1NSAyMTIuNzU1IiB3aWR0aD0iMTZweCIgaGVpZ2h0PSIxNnB4Ij4KICA8Zz4KICAgIDxwYXRoIGQ9Ik0xMDYuMzc3LDBDNDcuNzIxLDAsMCw0Ny43MjEsMCwxMDYuMzc3czQ3LjcyMSwxMDYuMzc3LDEwNi4zNzcsMTA2LjM3N3MxMDYuMzc3LTQ3LjcyMSwxMDYuMzc3LTEwNi4zNzcgICBTMTY1LjAzNCwwLDEwNi4zNzcsMHogTTEwNi4zNzcsMTk4Ljc1NUM1NS40NCwxOTguNzU1LDE0LDE1Ny4zMTQsMTQsMTA2LjM3N1M1NS40NCwxNCwxMDYuMzc3LDE0czkyLjM3Nyw0MS40NCw5Mi4zNzcsOTIuMzc3ICAgUzE1Ny4zMTQsMTk4Ljc1NSwxMDYuMzc3LDE5OC43NTV6IiBmaWxsPSIjMDAwMDAwIi8+CiAgICA8cGF0aCBkPSJtMTEzLjM3NywxMDAuMDk2di0zOS43NDRjMy45NjEsMS40NzEgNy40MTcsNC4xNyA5LjgyLDcuODIgMi4xMjcsMy4yMjkgNi40NjgsNC4xMjMgOS42OTYsMS45OTcgMy4yMjktMi4xMjYgNC4xMjMtNi40NjcgMS45OTYtOS42OTYtNS4wMjktNy42MzYtMTIuNzc4LTEyLjgyLTIxLjUxMi0xNC42NDd2LTExLjEyYzAtMy44NjYtMy4xMzQtNy03LTdzLTcsMy4xMzQtNyw3djExLjA5OWMtMTUuNDkzLDMuMjMtMjcuMTY4LDE2Ljk4OS0yNy4xNjgsMzMuNDI2IDAsMTYuNDM3IDExLjY3NiwzMC4xOTggMjcuMTY4LDMzLjQyOHYzOS43NDRjLTMuOTYxLTEuNDcxLTcuNDE3LTQuMTctOS44Mi03LjgyLTIuMTI3LTMuMjI5LTYuNDY4LTQuMTI0LTkuNjk2LTEuOTk3LTMuMjI5LDIuMTI2LTQuMTIzLDYuNDY3LTEuOTk2LDkuNjk2IDUuMDI5LDcuNjM2IDEyLjc3OCwxMi44MiAyMS41MTIsMTQuNjQ3djExLjExOWMwLDMuODY2IDMuMTM0LDcgNyw3czctMy4xMzQgNy03di0xMS4wOThjMTUuNDkzLTMuMjMgMjcuMTY4LTE2Ljk4OSAyNy4xNjgtMzMuNDI2LTIuODQyMTdlLTE0LTE2LjQzNy0xMS42NzUtMzAuMTk4LTI3LjE2OC0zMy40Mjh6bS0yNy4xNjgtMjAuODY1YzAtOC42NTMgNS40OTQtMTYuMDI3IDEzLjE2OC0xOC44NzR2MzcuNzQ4Yy03LjY3NC0yLjg0Ny0xMy4xNjgtMTAuMjIxLTEzLjE2OC0xOC44NzR6bTI3LjE2OCw3My4xNjZ2LTM3Ljc0OGM3LjY3NCwyLjg0NyAxMy4xNjgsMTAuMjIxIDEzLjE2OCwxOC44NzRzLTUuNDkzLDE2LjAyNy0xMy4xNjgsMTguODc0eiIgZmlsbD0iIzAwMDAwMCIvPgogIDwvZz4KPC9zdmc+Cg==
            opticalData: 11048813833205002812775114302C30315D
        date: 2018-01-01 00:00:00.000
        requestId: selfgen-ddf0b8c9-fab5-4bc8-a8f8-51cc7e118ab3
        endpoint: https://finapi.io
        authContext: 1/2
        bank: "00000000"
  headers:
    X-Request-Id:
      description: The request ID that you passed to the request, or a finAPI-generated
        ID in case you didn't pass a request ID.
      explode: false
      schema:
        type: string
      style: simple
    Location:
      description: THIS HEADER IS DEPRECATED AND WILL BE REMOVED.<br/><br/>Contains
        the URL to the Web Form. You must forward the user to this url to open finAPI's
        Web Form.
      explode: false
      schema:
        format: url
        type: string
      style: simple
  parameters:
    PSU-IP-Address:
      description: The IP address of the user's device. This header will be forwarded
        to the bank if the 'XS2A' interface is used.
      explode: false
      in: header
      name: PSU-IP-Address
      required: false
      schema:
        format: ipv4
        type: string
      style: simple
    PSU-Device-OS:
      description: The user's device and/or operating system identification. This
        header will be forwarded to the bank if the 'XS2A' interface is used.
      explode: false
      in: header
      name: PSU-Device-OS
      required: false
      schema:
        type: string
      style: simple
    PSU-User-Agent:
      description: The user's web browser or other client device identification. This
        header will be forwarded to the bank if the 'XS2A' interface is used.
      explode: false
      in: header
      name: PSU-User-Agent
      required: false
      schema:
        type: string
      style: simple
    X-Request-Id:
      description: With any API call, you can pass a request ID. The request ID can
        be an arbitrary string with up to 255 characters. Passing a longer string
        will result in an error. If you don't pass a request ID for a call, finAPI
        will generate a random ID internally. The request ID is always returned back
        in the response of a service, as a header with name 'X-Request-Id'. We highly
        recommend to always pass a (preferably unique) request ID, and include it
        into your client application logs whenever you make a request or receive a
        response (especially in the case of an error response). finAPI is also logging
        request IDs on its end. Having a request ID can help the finAPI support team
        to work more efficiently and solve tickets faster.
      explode: false
      in: header
      name: X-Request-Id
      required: false
      schema:
        type: string
      style: simple
    X-HTTP-Method-Override:
      description: Some HTTP clients do not support the HTTP methods PATCH or DELETE.
        If you are using such a client in your application, you can use a POST request
        instead with this header indicating the originally intended HTTP method. POST
        Requests having this  header set will be treated either as PATCH or DELETE
        by the finAPI servers.
      explode: false
      in: header
      name: X-HTTP-Method-Override
      required: false
      schema:
        enum:
        - PATCH
        - DELETE
        type: string
      style: simple
  schemas:
    AccessToken:
      description: User access token info
      example:
        access_token: yvMbx_TgwdYE0hgOVb8N4ZOvxOukqfjzYOGRZcJiCjQuRGkVIBfjjV3YG4zKTGiY2aPn2cQTGaQOT8uo5uo7_QOXts1s5UBSVuRHc6a8X30RrGBTyqV9h26SUHcZPNbZ
        refresh_token: 0b9KjiBVlZLz7a4HshSAIcFuscStiXT1VzT5mgNYwCQ_dWctTDsaIjedAhD1LpsOFJ7x6K8Emf8M3VOQkwNFR9FHijALYSQw2UeRwAC2MvrOKwfF1dHmOq5VEVYEaGf6
        scope: all
        token_type: bearer
        expires_in: 3600
      properties:
        token_type:
          description: Token type (it's always 'bearer')
          example: bearer
          type: string
        access_token:
          description: Access token. Token has a length of up to 128 characters.
          example: yvMbx_TgwdYE0hgOVb8N4ZOvxOukqfjzYOGRZcJiCjQuRGkVIBfjjV3YG4zKTGiY2aPn2cQTGaQOT8uo5uo7_QOXts1s5UBSVuRHc6a8X30RrGBTyqV9h26SUHcZPNbZ
          type: string
        refresh_token:
          description: Refresh token. Only set in case of grant_type='password'. Token
            has a length of up to 128 characters.
          example: 0b9KjiBVlZLz7a4HshSAIcFuscStiXT1VzT5mgNYwCQ_dWctTDsaIjedAhD1LpsOFJ7x6K8Emf8M3VOQkwNFR9FHijALYSQw2UeRwAC2MvrOKwfF1dHmOq5VEVYEaGf6
          type: string
        expires_in:
          description: Expiration time in seconds. A value of 0 means that the token
            never expires (unless it is explicitly invalidated, e.g. by revocation,
            or when a user gets locked).
          example: 3600
          format: int32
          type: integer
        scope:
          description: Requested scopes (it's always 'all')
          example: all
          type: string
      required:
      - access_token
      - expires_in
      - scope
      - token_type
      type: object
    Account:
      description: Container for a bank account's data
      example:
        accountHolderId: XXXXX
        interfaces:
        - capabilities:
          - DATA_DOWNLOAD
          - IBAN_ONLY_SEPA_MONEY_TRANSFER
          - IBAN_ONLY_SEPA_DIRECT_DEBIT
          - SEPA_MONEY_TRANSFER
          - SEPA_COLLECTIVE_MONEY_TRANSFER
          - SEPA_BASIC_DIRECT_DEBIT
          - SEPA_BASIC_COLLECTIVE_DIRECT_DEBIT
          - SEPA_B2B_DIRECT_DEBIT
          - SEPA_B2B_COLLECTIVE_DIRECT_DEBIT
          lastSuccessfulUpdate: 2018-01-01 00:00:00.000
          lastUpdateAttempt: 2018-01-01 00:00:00.000
          interface: FINTS_SERVER
          status: UPDATED
          paymentCapabilities: '{}'
        - capabilities:
          - DATA_DOWNLOAD
          - IBAN_ONLY_SEPA_MONEY_TRANSFER
          - IBAN_ONLY_SEPA_DIRECT_DEBIT
          - SEPA_MONEY_TRANSFER
          - SEPA_COLLECTIVE_MONEY_TRANSFER
          - SEPA_BASIC_DIRECT_DEBIT
          - SEPA_BASIC_COLLECTIVE_DIRECT_DEBIT
          - SEPA_B2B_DIRECT_DEBIT
          - SEPA_B2B_COLLECTIVE_DIRECT_DEBIT
          lastSuccessfulUpdate: 2018-01-01 00:00:00.000
          lastUpdateAttempt: 2018-01-01 00:00:00.000
          interface: FINTS_SERVER
          status: UPDATED
          paymentCapabilities: '{}'
        bankConnectionId: 1
        lastSuccessfulUpdate: 2018-01-01 00:00:00.000
        accountName: Testaccount
        overdraft: 99.99
        accountType: Checking
        isSeized: false
        accountCurrency: EUR
        overdraftLimit: 99.99
        accountTypeName: Checking
        isNew: true
        accountNumber: "12345678"
        clearingAccounts:
        - clearingAccountName: BA-TUYEF7D24CGK6
          clearingAccountId: BA-TUYEF7D24CGK6
        - clearingAccountName: BA-TUYEF7D24CGK6
          clearingAccountId: BA-TUYEF7D24CGK6
        accountHolderName: Herr Max Mustermann
        supportedOrders:
        - SEPA_MONEY_TRANSFER
        - SEPA_COLLECTIVE_MONEY_TRANSFER
        - SEPA_BASIC_DIRECT_DEBIT
        - SEPA_BASIC_COLLECTIVE_DIRECT_DEBIT
        - SEPA_B2B_DIRECT_DEBIT
        - SEPA_B2B_COLLECTIVE_DIRECT_DEBIT
        availableFunds: 99.99
        accountTypeId: 1
        balance: 99.99
        iban: DE89370400440532013000
        subAccountNumber: "1234"
        lastUpdateAttempt: 2018-01-01 00:00:00.000
        id: 1
        status: UPDATED
      properties:
        id:
          description: Account identifier
          example: 1
          format: int64
          type: integer
        bankConnectionId:
          description: Identifier of the bank connection that this account belongs
            to
          example: 1
          format: int64
          type: integer
        accountName:
          description: Account name
          example: Testaccount
          nullable: true
          type: string
        iban:
          description: Account's IBAN. Note that this field can change from 'null'
            to a value - or vice versa - any time when the account is being updated.
            This is subject to changes within the bank's internal account management.
          example: DE89370400440532013000
          nullable: true
          type: string
        accountNumber:
          description: (National) account number. Note that this value might change
            whenever the account is updated (for example, leading zeros might be added
            or removed).
          example: "12345678"
          type: string
        subAccountNumber:
          description: Account's sub-account-number. Note that this field can change
            from 'null' to a value - or vice versa - any time when the account is
            being updated. This is subject to changes within the bank's internal account
            management.
          example: "1234"
          nullable: true
          type: string
        accountHolderName:
          description: Name of the account holder
          example: Herr Max Mustermann
          nullable: true
          type: string
        accountHolderId:
          description: Bank's internal identification of the account holder. Note
            that if your client has no license for processing this field, it will
            always be 'XXXXX'
          example: XXXXX
          nullable: true
          type: string
        accountCurrency:
          description: Account's currency
          example: EUR
          nullable: true
          type: string
        accountTypeId:
          description: THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
            to the 'accountType' field instead.<br/><br/>Identifier of the account's
            type. Note that, in general, the type of an account can change any time
            when the account is being updated. This is subject to changes within the
            bank's internal account management. However, if the account's type has
            previously been changed explicitly (via the PATCH method), then the explicitly
            set type will NOT be automatically changed anymore, even if the type has
            changed on the bank side. <br/>1 = Checking,<br/>2 = Savings,<br/>3 =
            CreditCard,<br/>4 = Security,<br/>5 = Loan,<br/>6 = Pocket (DEPRECATED;
            will not be returned for any account unless this type has explicitly been
            set via PATCH),<br/>7 = Membership,<br/>8 = Bausparen<br/>
          example: 1
          format: int64
          type: integer
        accountTypeName:
          description: THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
            to the 'accountType' field instead.<br/><br/>Name of the account's type.
          example: Checking
          type: string
        accountType:
          allOf:
          - $ref: '#/components/schemas/AccountType'
          description: |-
            <strong>Type:</strong> AccountType<br/>
            An account type.<br/><br/>Checking,<br/>Savings,<br/>CreditCard,<br/>Security,<br/>Loan,<br/>Pocket (DEPRECATED; will not be returned for any account unless this type has explicitly been set via PATCH),<br/>Membership,<br/>Bausparen<br/><br/>
          example: Checking
        balance:
          description: Current account balance
          example: 99.99
          nullable: true
          type: number
        overdraft:
          description: Current overdraft
          example: 99.99
          nullable: true
          type: number
        overdraftLimit:
          description: Overdraft limit
          example: 99.99
          nullable: true
          type: number
        availableFunds:
          description: Current available funds. Note that this field is only set if
            finAPI can make a definite statement about the current available funds.
            This might not always be the case, for example if there is not enough
            information available about the overdraft limit and current overdraft.
          example: 99.99
          nullable: true
          type: number
        lastSuccessfulUpdate:
          description: 'THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
            to the corresponding field in ''interfaces'' instead.<br/><br/>Timestamp
            of when the account was last successfully updated (or initially imported);
            more precisely: time when the account data (balance and positions) has
            been stored into the finAPI databases. The value is returned in the format
            ''YYYY-MM-DD HH:MM:SS.SSS'' (german time).'
          example: 2018-01-01 00:00:00.000
          nullable: true
          type: string
        lastUpdateAttempt:
          description: 'THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
            to the corresponding field in ''interfaces'' instead.<br/><br/>Timestamp
            of when the account was last tried to be updated (or initially imported);
            more precisely: time when the update (or initial import) was triggered.
            The value is returned in the format ''YYYY-MM-DD HH:MM:SS.SSS'' (german
            time).'
          example: 2018-01-01 00:00:00.000
          nullable: true
          type: string
        isNew:
          description: Indicating whether this account is 'new' or not. Any newly
            imported account will have this flag initially set to true, and remain
            so until you set it to false (see PATCH /accounts/<id>). How you use this
            field is up to your interpretation, however it is recommended to set the
            flag to false for all accounts right after the initial import of the bank
            connection. This way, you will be able recognize accounts that get newly
            imported during a later update of the bank connection, by checking for
            any accounts with the flag set to true right after an update.
          example: true
          type: boolean
        status:
          allOf:
          - $ref: '#/components/schemas/AccountStatus'
          description: |-
            <strong>Type:</strong> AccountStatus<br/>
            THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer to the 'status' field in 'interfaces' instead.<br/><br/>The current status of the account. Possible values are:<br/>&bull; <code>UPDATED</code> means that the account is up to date from finAPI's point of view. This means that no current import/update is running, and the previous import/update could successfully update the account's data (e.g. transactions and securities), and the bank given balance matched the transaction's calculated sum, meaning that no adjusting entry ('Zwischensaldo' transaction) was inserted.<br/>&bull; <code>UPDATED_FIXED</code> means that the account is up to date from finAPI's point of view (no current import/update is running, and the previous import/update could successfully update the account's data), BUT there was a deviation in the bank given balance which was fixed by adding an adjusting entry ('Zwischensaldo' transaction).<br/>&bull; <code>DOWNLOAD_IN_PROGRESS</code> means that the account's data is currently being imported/updated.<br/>&bull; <code>DOWNLOAD_FAILED</code> means that the account data could not get successfully imported or updated. Possible reasons: finAPI could not get the account's balance, or it could not parse all transactions/securities, or some internal error has occurred. Also, it could mean that finAPI could not even get to the point of receiving the account data from the bank server, for example because of incorrect login credentials or a network problem. Note however that when we get a balance and just an empty list of transactions or securities, then this is regarded as valid and successful download. The reason for this is that for some accounts that have little activity, we may actually get no recent transactions but only a balance.<br/>&bull; <code>DEPRECATED</code> means that the account could no longer get matched with any account from the bank server. This can mean either that the account was terminated by the user and is no longer sent by the bank server, or that finAPI could no longer match it because the account's data (name, type, iban, account number, etc.) has been changed by the bank.
          example: UPDATED
        supportedOrders:
          example:
          - SEPA_MONEY_TRANSFER
          - SEPA_COLLECTIVE_MONEY_TRANSFER
          - SEPA_BASIC_DIRECT_DEBIT
          - SEPA_BASIC_COLLECTIVE_DIRECT_DEBIT
          - SEPA_B2B_DIRECT_DEBIT
          - SEPA_B2B_COLLECTIVE_DIRECT_DEBIT
          items:
            allOf:
            - $ref: '#/components/schemas/SupportedOrder'
            description: |-
              <strong>Type:</strong> SupportedOrder<br/>
              THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer to the 'capabilities' field in 'interfaces' instead.<br/><br/>List of orders that this account supports. Possible values are:<br/><br/>&bull; <code>SEPA_MONEY_TRANSFER</code> - single money transfer<br/>&bull; <code>SEPA_COLLECTIVE_MONEY_TRANSFER</code> - collective money transfer<br/>&bull; <code>SEPA_BASIC_DIRECT_DEBIT</code> - single basic direct debit<br/>&bull; <code>SEPA_BASIC_COLLECTIVE_DIRECT_DEBIT</code> - collective basic direct debit<br/>&bull; <code>SEPA_B2B_DIRECT_DEBIT</code> - single Business-To-Business direct debit<br/>&bull; <code>SEPA_B2B_COLLECTIVE_DIRECT_DEBIT</code> - collective Business-To-Business direct debit<br/><br/>Note that this list may be empty if the account is not supporting any of the above orders. Also note that the list is refreshed each time the account is being updated, so available orders may get added or removed in the course of an account update.
          type: array
          uniqueItems: true
        interfaces:
          description: |-
            <strong>Type:</strong> AccountInterface<br/>
            Set of interfaces to which this account is connected
          items:
            $ref: '#/components/schemas/AccountInterface'
          type: array
        clearingAccounts:
          description: |-
            <strong>Type:</strong> ClearingAccountData<br/>
            THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/><br/>List of clearing accounts that relate to this account. Clearing accounts can be used for money transfers (see field 'clearingAccountId' of the 'Request SEPA Money Transfer' service).
          items:
            $ref: '#/components/schemas/ClearingAccountData'
          type: array
        isSeized:
          description: Whether this account is seized. Note that this information
            is not received from the bank, but determined by finAPI based on the available
            account information.
          example: false
          type: boolean
      required:
      - accountCurrency
      - accountHolderId
      - accountHolderName
      - accountName
      - accountNumber
      - accountType
      - accountTypeId
      - accountTypeName
      - availableFunds
      - balance
      - bankConnectionId
      - clearingAccounts
      - iban
      - id
      - interfaces
      - isNew
      - isSeized
      - lastSuccessfulUpdate
      - lastUpdateAttempt
      - overdraft
      - overdraftLimit
      - status
      - subAccountNumber
      - supportedOrders
      type: object
    AccountCapability:
      enum:
      - DATA_DOWNLOAD
      - IBAN_ONLY_SEPA_MONEY_TRANSFER
      - IBAN_ONLY_SEPA_DIRECT_DEBIT
      - SEPA_MONEY_TRANSFER
      - SEPA_COLLECTIVE_MONEY_TRANSFER
      - SEPA_BASIC_DIRECT_DEBIT
      - SEPA_BASIC_COLLECTIVE_DIRECT_DEBIT
      - SEPA_B2B_DIRECT_DEBIT
      - SEPA_B2B_COLLECTIVE_DIRECT_DEBIT
      type: string
    AccountInterface:
      description: Account interface details
      example:
        capabilities:
        - DATA_DOWNLOAD
        - IBAN_ONLY_SEPA_MONEY_TRANSFER
        - IBAN_ONLY_SEPA_DIRECT_DEBIT
        - SEPA_MONEY_TRANSFER
        - SEPA_COLLECTIVE_MONEY_TRANSFER
        - SEPA_BASIC_DIRECT_DEBIT
        - SEPA_BASIC_COLLECTIVE_DIRECT_DEBIT
        - SEPA_B2B_DIRECT_DEBIT
        - SEPA_B2B_COLLECTIVE_DIRECT_DEBIT
        lastSuccessfulUpdate: 2018-01-01 00:00:00.000
        lastUpdateAttempt: 2018-01-01 00:00:00.000
        interface: FINTS_SERVER
        status: UPDATED
        paymentCapabilities: '{}'
      properties:
        interface:
          allOf:
          - $ref: '#/components/schemas/BankingInterface'
          description: |-
            <strong>Type:</strong> BankingInterface<br/>
            Bank interface. Possible values:<br><br>&bull; <code>WEB_SCRAPER</code> - finAPI will parse account data from the bank's online banking website.<br>&bull; <code>FINTS_SERVER</code> - finAPI will download account data via the bank's FinTS interface.<br>&bull; <code>XS2A</code> - finAPI will download account data via the bank's XS2A interface.<br>
          example: FINTS_SERVER
        status:
          allOf:
          - $ref: '#/components/schemas/AccountStatus'
          description: |-
            <strong>Type:</strong> AccountStatus<br/>
            The current status of the account from the perspective of this interface. Possible values are:<br/>&bull; <code>UPDATED</code> means that the account is up to date from finAPI's point of view. This means that no current import/update is running, and the previous import/update had successfully updated the account's data (e.g. transactions and securities), and the bank given balance matched the transaction's calculated sum, meaning that no adjusting entry ('Zwischensaldo' transaction) was inserted.<br/>&bull; <code>UPDATED_FIXED</code> means that the account is up to date from finAPI's point of view (no current import/update is running, and the previous import/update had successfully updated the account's data), BUT there was a deviation in the bank given balance which was fixed by adding an adjusting entry ('Zwischensaldo' transaction).<br/>&bull; <code>DOWNLOAD_IN_PROGRESS</code> means that the account's data is currently being imported/updated.<br/>&bull; <code>DOWNLOAD_FAILED</code> means that the account data was not successfully imported or updated. Possible reasons: finAPI could not get the account's balance, or it could not parse all transactions/securities, or some internal error has occurred. Also, it could mean that finAPI could not even get to the point of receiving the account data from the bank server, for example because of incorrect login credentials or a network problem. Note however that when we get a balance and just an empty list of transactions or securities, then this is regarded as valid and successful download. The reason for this is that for some accounts that have little activity, we may actually get no recent transactions but only a balance.<br/>&bull; <code>DEPRECATED</code> means that the account could no longer be matched with any account from the bank server. This can mean either that the account was terminated by the user and is no longer sent by the bank server, or that finAPI could no longer match it because the account's data (name, type, iban, account number, etc.) has been changed by the bank.
          example: UPDATED
        capabilities:
          example:
          - DATA_DOWNLOAD
          - IBAN_ONLY_SEPA_MONEY_TRANSFER
          - IBAN_ONLY_SEPA_DIRECT_DEBIT
          - SEPA_MONEY_TRANSFER
          - SEPA_COLLECTIVE_MONEY_TRANSFER
          - SEPA_BASIC_DIRECT_DEBIT
          - SEPA_BASIC_COLLECTIVE_DIRECT_DEBIT
          - SEPA_B2B_DIRECT_DEBIT
          - SEPA_B2B_COLLECTIVE_DIRECT_DEBIT
          items:
            allOf:
            - $ref: '#/components/schemas/AccountCapability'
            description: |-
              <strong>Type:</strong> AccountCapability<br/>
              List of account capabilities that this interface supports. Possible values are:<br/>&bull; <code>DATA_DOWNLOAD</code> - download of balance and transactions/securities<br/>&bull; <code>IBAN_ONLY_SEPA_MONEY_TRANSFER</code> - money transfer where the recipient's account is defined just by the IBAN<br/>&bull; <code>IBAN_ONLY_SEPA_DIRECT_DEBIT</code> - direct debit where the debitor's account is defined just by the IBAN<br/>&bull; <code>SEPA_MONEY_TRANSFER</code> - single money transfer<br/>&bull; <code>SEPA_COLLECTIVE_MONEY_TRANSFER</code> - collective money transfer<br/>&bull; <code>SEPA_BASIC_DIRECT_DEBIT</code> - single basic direct debit<br/>&bull; <code>SEPA_BASIC_COLLECTIVE_DIRECT_DEBIT</code> - collective basic direct debit<br/>&bull; <code>SEPA_B2B_DIRECT_DEBIT</code> - single Business-To-Business direct debit<br/>&bull; <code>SEPA_B2B_COLLECTIVE_DIRECT_DEBIT</code> - collective Business-To-Business direct debit<br/><br/>Note that this list may be empty if the interface is not supporting any of the above capabilities. Also note that the list may be refreshed each time the account is being updated through this interface, so available capabilities may get added or removed in the course of an account update.
          type: array
          uniqueItems: true
        paymentCapabilities:
          allOf:
          - $ref: '#/components/schemas/AccountInterfacePaymentCapabilities'
          description: |-
            <strong>Type:</strong> AccountInterfacePaymentCapabilities<br/>
            The payment capabilities of this account.
          type: object
        lastSuccessfulUpdate:
          description: 'Timestamp of when the account was last successfully updated
            using this interface (or initially imported); more precisely: time when
            the account data (balance and positions) has been stored into the finAPI
            databases. The value is returned in the format ''YYYY-MM-DD HH:MM:SS.SSS''
            (german time).'
          example: 2018-01-01 00:00:00.000
          nullable: true
          type: string
        lastUpdateAttempt:
          description: 'Timestamp of when the account was last tried to be updated
            using this interface (or initially imported); more precisely: time when
            the update (or initial import) was triggered. The value is returned in
            the format ''YYYY-MM-DD HH:MM:SS.SSS'' (german time).'
          example: 2018-01-01 00:00:00.000
          nullable: true
          type: string
      required:
      - capabilities
      - interface
      - lastSuccessfulUpdate
      - lastUpdateAttempt
      - paymentCapabilities
      - status
      type: object
    AccountInterfacePaymentCapabilities:
      description: Payment capabilities of a bank account
      properties:
        sepaInstantMoneyTransfer:
          description: Capability to do a (single) SEPA instant money transfer.
          example: true
          type: boolean
      required:
      - sepaInstantMoneyTransfer
      type: object
    AccountList:
      description: Container for data of multiple bank accounts
      example:
        accounts:
        - accountHolderId: XXXXX
          interfaces:
          - capabilities:
            - DATA_DOWNLOAD
            - IBAN_ONLY_SEPA_MONEY_TRANSFER
            - IBAN_ONLY_SEPA_DIRECT_DEBIT
            - SEPA_MONEY_TRANSFER
            - SEPA_COLLECTIVE_MONEY_TRANSFER
            - SEPA_BASIC_DIRECT_DEBIT
            - SEPA_BASIC_COLLECTIVE_DIRECT_DEBIT
            - SEPA_B2B_DIRECT_DEBIT
            - SEPA_B2B_COLLECTIVE_DIRECT_DEBIT
            lastSuccessfulUpdate: 2018-01-01 00:00:00.000
            lastUpdateAttempt: 2018-01-01 00:00:00.000
            interface: FINTS_SERVER
            status: UPDATED
            paymentCapabilities: '{}'
          - capabilities:
            - DATA_DOWNLOAD
            - IBAN_ONLY_SEPA_MONEY_TRANSFER
            - IBAN_ONLY_SEPA_DIRECT_DEBIT
            - SEPA_MONEY_TRANSFER
            - SEPA_COLLECTIVE_MONEY_TRANSFER
            - SEPA_BASIC_DIRECT_DEBIT
            - SEPA_BASIC_COLLECTIVE_DIRECT_DEBIT
            - SEPA_B2B_DIRECT_DEBIT
            - SEPA_B2B_COLLECTIVE_DIRECT_DEBIT
            lastSuccessfulUpdate: 2018-01-01 00:00:00.000
            lastUpdateAttempt: 2018-01-01 00:00:00.000
            interface: FINTS_SERVER
            status: UPDATED
            paymentCapabilities: '{}'
          bankConnectionId: 1
          lastSuccessfulUpdate: 2018-01-01 00:00:00.000
          accountName: Testaccount
          overdraft: 99.99
          accountType: Checking
          isSeized: false
          accountCurrency: EUR
          overdraftLimit: 99.99
          accountTypeName: Checking
          isNew: true
          accountNumber: "12345678"
          clearingAccounts:
          - clearingAccountName: BA-TUYEF7D24CGK6
            clearingAccountId: BA-TUYEF7D24CGK6
          - clearingAccountName: BA-TUYEF7D24CGK6
            clearingAccountId: BA-TUYEF7D24CGK6
          accountHolderName: Herr Max Mustermann
          supportedOrders:
          - SEPA_MONEY_TRANSFER
          - SEPA_COLLECTIVE_MONEY_TRANSFER
          - SEPA_BASIC_DIRECT_DEBIT
          - SEPA_BASIC_COLLECTIVE_DIRECT_DEBIT
          - SEPA_B2B_DIRECT_DEBIT
          - SEPA_B2B_COLLECTIVE_DIRECT_DEBIT
          availableFunds: 99.99
          accountTypeId: 1
          balance: 99.99
          iban: DE89370400440532013000
          subAccountNumber: "1234"
          lastUpdateAttempt: 2018-01-01 00:00:00.000
          id: 1
          status: UPDATED
        - accountHolderId: XXXXX
          interfaces:
          - capabilities:
            - DATA_DOWNLOAD
            - IBAN_ONLY_SEPA_MONEY_TRANSFER
            - IBAN_ONLY_SEPA_DIRECT_DEBIT
            - SEPA_MONEY_TRANSFER
            - SEPA_COLLECTIVE_MONEY_TRANSFER
            - SEPA_BASIC_DIRECT_DEBIT
            - SEPA_BASIC_COLLECTIVE_DIRECT_DEBIT
            - SEPA_B2B_DIRECT_DEBIT
            - SEPA_B2B_COLLECTIVE_DIRECT_DEBIT
            lastSuccessfulUpdate: 2018-01-01 00:00:00.000
            lastUpdateAttempt: 2018-01-01 00:00:00.000
            interface: FINTS_SERVER
            status: UPDATED
            paymentCapabilities: '{}'
          - capabilities:
            - DATA_DOWNLOAD
            - IBAN_ONLY_SEPA_MONEY_TRANSFER
            - IBAN_ONLY_SEPA_DIRECT_DEBIT
            - SEPA_MONEY_TRANSFER
            - SEPA_COLLECTIVE_MONEY_TRANSFER
            - SEPA_BASIC_DIRECT_DEBIT
            - SEPA_BASIC_COLLECTIVE_DIRECT_DEBIT
            - SEPA_B2B_DIRECT_DEBIT
            - SEPA_B2B_COLLECTIVE_DIRECT_DEBIT
            lastSuccessfulUpdate: 2018-01-01 00:00:00.000
            lastUpdateAttempt: 2018-01-01 00:00:00.000
            interface: FINTS_SERVER
            status: UPDATED
            paymentCapabilities: '{}'
          bankConnectionId: 1
          lastSuccessfulUpdate: 2018-01-01 00:00:00.000
          accountName: Testaccount
          overdraft: 99.99
          accountType: Checking
          isSeized: false
          accountCurrency: EUR
          overdraftLimit: 99.99
          accountTypeName: Checking
          isNew: true
          accountNumber: "12345678"
          clearingAccounts:
          - clearingAccountName: BA-TUYEF7D24CGK6
            clearingAccountId: BA-TUYEF7D24CGK6
          - clearingAccountName: BA-TUYEF7D24CGK6
            clearingAccountId: BA-TUYEF7D24CGK6
          accountHolderName: Herr Max Mustermann
          supportedOrders:
          - SEPA_MONEY_TRANSFER
          - SEPA_COLLECTIVE_MONEY_TRANSFER
          - SEPA_BASIC_DIRECT_DEBIT
          - SEPA_BASIC_COLLECTIVE_DIRECT_DEBIT
          - SEPA_B2B_DIRECT_DEBIT
          - SEPA_B2B_COLLECTIVE_DIRECT_DEBIT
          availableFunds: 99.99
          accountTypeId: 1
          balance: 99.99
          iban: DE89370400440532013000
          subAccountNumber: "1234"
          lastUpdateAttempt: 2018-01-01 00:00:00.000
          id: 1
          status: UPDATED
      properties:
        accounts:
          description: |-
            <strong>Type:</strong> Account<br/>
            List of bank accounts
          items:
            $ref: '#/components/schemas/Account'
          type: array
      required:
      - accounts
      type: object
    AccountParams:
      description: Container for an account's name, type and 'isNew' flag'.
      example:
        accountTypeId: 1
        accountName: Testaccount
        accountType: Checking
        isNew: true
      properties:
        accountName:
          description: Account name. Maximum length is 512.
          example: Testaccount
          pattern: '[A-Za-z0-9¡-ʯ &\(\)\{\}\[\]\.:,;\?!\+\-_\$@#~`\^€]*'
          type: string
        accountTypeId:
          description: THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
            to the 'accountType' field instead.<br/><br/>Identifier of account type.<br/><br/>1
            = Checking,<br/>2 = Savings,<br/>3 = CreditCard,<br/>4 = Security,<br/>5
            = Loan,<br/>6 = Pocket (DEPRECATED; will not be returned for any account
            unless this type has explicitly been set via PATCH),<br/>7 = Membership,<br/>8
            = Bausparen<br/>
          example: 1
          format: int64
          maximum: 7
          minimum: 1
          type: integer
        accountType:
          allOf:
          - $ref: '#/components/schemas/AccountType'
          description: |-
            <strong>Type:</strong> AccountType<br/>
            An account type.<br/><br/>Checking,<br/>Savings,<br/>CreditCard,<br/>Security,<br/>Loan,<br/>Pocket (DEPRECATED; will not be returned for any account unless this type has explicitly been set via PATCH),<br/>Membership,<br/>Bausparen<br/><br/>
          example: Checking
        isNew:
          description: Whether this account should be flagged as 'new' or not. Any
            newly imported account will have this flag initially set to true, and
            remain so until you set it to false (see PATCH /accounts/<id>). How you
            use this field is up to your interpretation, however it is recommended
            to set the flag to false for all accounts right after the initial import
            of the bank connection. This way, you will be able recognize accounts
            that get newly imported during a later update of the bank connection,
            by checking for any accounts with the flag set to true after every update
            of the bank connection.
          example: true
          type: boolean
      type: object
    AccountReference:
      description: Account reference data
      example:
        iban: DE89370400440532013000
      properties:
        iban:
          description: The account's IBAN
          example: DE89370400440532013000
          type: string
      required:
      - iban
      type: object
    AccountStatus:
      enum:
      - UPDATED
      - UPDATED_FIXED
      - DOWNLOAD_IN_PROGRESS
      - DOWNLOAD_FAILED
      - DEPRECATED
      type: string
    AccountType:
      enum:
      - Checking
      - Savings
      - CreditCard
      - Security
      - Loan
      - Pocket
      - Membership
      - Bausparen
      type: string
    BadCredentialsError:
      properties:
        error:
          description: Error type
          example: invalid_token
          type: string
        error_description:
          description: Error description
          example: Not authenticated or invalid access_token
          type: string
      required:
      - error
      - error_description
      type: object
    Bank:
      description: Container for a bank's data
      example:
        lastCommunicationAttempt: 2018-01-01 00:00:00.000
        interfaces:
        - loginHint: Bitte geben Sie nur die ersten fünf Stellen Ihrer PIN ein.
          lastCommunicationAttempt: 2018-01-01 00:00:00.000
          isAisSupported: true
          aisAccountTypes:
          - Checking
          - CreditCard
          lastSuccessfulCommunication: 2018-01-01 00:00:00.000
          isMoneyTransferSupported: true
          health: 100
          interface: FINTS_SERVER
          tppAuthenticationGroup: '{}'
          loginCredentials:
          - isSecret: false
            isVolatile: false
            label: Nutzerkennung
          - isSecret: false
            isVolatile: false
            label: Nutzerkennung
          properties:
          - REDIRECT_APPROACH
          paymentCapabilities: '{}'
        - loginHint: Bitte geben Sie nur die ersten fünf Stellen Ihrer PIN ein.
          lastCommunicationAttempt: 2018-01-01 00:00:00.000
          isAisSupported: true
          aisAccountTypes:
          - Checking
          - CreditCard
          lastSuccessfulCommunication: 2018-01-01 00:00:00.000
          isMoneyTransferSupported: true
          health: 100
          interface: FINTS_SERVER
          tppAuthenticationGroup: '{}'
          loginCredentials:
          - isSecret: false
            isVolatile: false
            label: Nutzerkennung
          - isSecret: false
            isVolatile: false
            label: Nutzerkennung
          properties:
          - REDIRECT_APPROACH
          paymentCapabilities: '{}'
        city: München
        bankGroup: '{}'
        health: 100
        isSupported: true
        isTestBank: true
        blzs: []
        loginHint: Bitte geben Sie Ihre Online-Identifikation und Ihre PIN ein.
        blz: "00000000"
        pinsAreVolatile: true
        lastSuccessfulCommunication: 2018-01-01 00:00:00.000
        loginFieldUserId: Onlinebanking-ID
        popularity: 95
        loginFieldPin: PIN
        name: FinAPI Test Bank
        location: DE
        isBeta: true
        id: 277672
        supportedDataSources:
        - FINTS_SERVER
        - WEB_SCRAPER
        bic: TESTBANKING
        loginFieldCustomerId: Kunden-ID
        isCustomerIdPassword: false
      properties:
        id:
          description: 'Bank identifier.<br/><br/>NOTE: Do NOT assume that the identifiers
            of banks are the same across different finAPI environments. In fact, the
            identifiers may change whenever a new finAPI version is released, even
            within the same environment. The identifiers are meant to be used for
            references within the finAPI services only, but not for hard-coding them
            in your application. If you need to hard-code the usage of a certain bank
            within your application, please instead refer to the BLZ.'
          example: 277672
          format: int64
          type: integer
        name:
          description: Name of bank
          example: FinAPI Test Bank
          type: string
        loginHint:
          description: THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
            to the 'loginHint' field in the 'interfaces' instead.<br/><br/>Login hint.
            Contains a German message for the user that explains what kind of credentials
            are expected.<br/><br/>Please note that it is strongly recommended to
            always show the login hint to the user if there is one, as the credentials
            that finAPI requires for the bank might be different to the credentials
            that the user knows from the bank's website.<br/><br/>Also note that the
            contents of this field should always be interpreted as HTML, as the text
            might contain HTML tags for highlighted words, paragraphs, etc.
          example: Bitte geben Sie Ihre Online-Identifikation und Ihre PIN ein.
          nullable: true
          type: string
        bic:
          description: BIC of bank
          example: TESTBANKING
          nullable: true
          type: string
        blzs:
          example: []
          items:
            description: THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please
              refer to the 'blz' field instead.
            type: string
          type: array
        blz:
          description: BLZ of bank
          example: "00000000"
          type: string
        location:
          description: Bank location (two-letter country code; ISO 3166 ALPHA-2).
            Note that when this field is not set, it means that this bank depicts
            an international institute which is not bound to any specific country.
          example: DE
          nullable: true
          type: string
        city:
          description: City that this bank is located in. Note that this field may
            not be set for some banks.
          example: München
          nullable: true
          type: string
        isSupported:
          description: 'THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
            to the ''isMoneyTransferSupported'' and ''isAisSupported'' fields in the
            ''interfaces'' instead.<br/><br/>Whether this bank is supported by finAPI,
            i.e. whether you can import/update a bank connection of this bank.<br/><br/>NOTE:
            this field only regards FINTS_SERVER and WEB_SCRAPER interfaces. XS2A
            is not considered.'
          example: true
          type: boolean
        isTestBank:
          description: If true, then this bank does not depict a real bank, but rather
            a testing endpoint provided by a bank or by finAPI. You probably want
            to regard these banks only during the development of your application,
            but not in production. You can filter out these banks in production by
            making sure that the 'isTestBank' parameter is always set to 'false' whenever
            your application is calling the 'Get and search all banks' service.
          example: true
          type: boolean
        popularity:
          description: Popularity of this bank with your users (mandator-wide, i.e.
            across all of your clients). The value equals the number of bank connections
            that are currently imported for this bank across all of your users (which
            means it is a constantly adjusting value). You can use this field for
            statistical evaluation, and also for ordering bank search results (see
            service 'Get and search all banks').
          example: 95
          format: int32
          type: integer
        health:
          description: THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
            to the 'health' field in the 'interfaces' instead. <br/><br/>The health
            status of this bank. This is a value between 0 and 100, depicting the
            percentage of successful communication attempts with this bank during
            the latest couple of bank connection imports or updates (across the entire
            finAPI system). Note that 'successful' means that there was no technical
            error trying to establish a communication with the bank. Non-technical
            errors (like incorrect credentials) are regarded successful communication
            attempts.
          example: 100
          format: int32
          maximum: 100
          minimum: 0
          type: integer
        loginFieldUserId:
          description: THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
            to the 'loginCredentials' in the 'interfaces' instead.<br/><br/>Label
            for the user ID login field, as it is called on the bank's website (e.g.
            "Nutzerkennung"). If this field is set (i.e. not null) then you should
            prompt your users to enter the required data in a text field which you
            can label with this field's value.
          example: Onlinebanking-ID
          nullable: true
          type: string
        loginFieldCustomerId:
          description: THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
            to the 'loginCredentials' in the 'interfaces' instead.<br/><br/>Label
            for the customer ID login field, as it is called on the bank's website
            (e.g. "Kundennummer"). If this field is set (i.e. not null) then you should
            prompt your users to enter the required data in a text field which you
            can label with this field's value.
          example: Kunden-ID
          nullable: true
          type: string
        loginFieldPin:
          description: THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
            to the 'loginCredentials' in the 'interfaces' instead.<br/><br/>Label
            for the PIN field, as it is called on the bank's website (mostly "PIN").
            If this field is set (i.e. not null) then you should prompt your users
            to enter the required data in a text field which you can label with this
            field's value.
          example: PIN
          nullable: true
          type: string
        pinsAreVolatile:
          description: THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
            to the 'isVolatile' field of the 'loginCredentials' in the 'interfaces'
            instead.<br/><br/>Whether the PINs that are used for authentication with
            the bank are volatile. If the PINs are volatile, it means that the value
            for the field, which is provided by the user, is valid only for a single
            authentication and then gets invalidated on bank-side. If pinsAreVolatile
            is true, it is not possible to store the PIN in finAPI, as a stored PIN
            will never work for future authentications.
          example: true
          type: boolean
        isCustomerIdPassword:
          description: THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
            to the 'isSecret' field of the 'loginCredentials' in 'interfaces' instead.<br/><br/>Whether
            the banking customer ID has to be treated like a password. Certain banks
            require a second password (besides the PIN) for the user to login. In
            this case your application should use a password input field when prompting
            users for their credentials.
          example: false
          type: boolean
        supportedDataSources:
          example:
          - FINTS_SERVER
          - WEB_SCRAPER
          items:
            allOf:
            - $ref: '#/components/schemas/SupportedDataSource'
            description: |-
              <strong>Type:</strong> SupportedDataSource<br/>
              THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer to 'interfaces' instead.<br/><br/>List of the data sources that finAPI will use for data download for this bank. Possible values:<br><br>&bull; <code>WEB_SCRAPER</code> - means that finAPI will parse data from the bank's online banking website.<br>&bull; <code>FINTS_SERVER</code> - means that finAPI will download data via the bank's FinTS interface.<br><br>Note that this list will be empty for non-supported banks. Note also that web scraping might be disabled for your client (see GET /clientConfiguration). When this is the case, then finAPI will not use the web scraper for data download, and if the web scraper is the only supported data source of this bank, then finAPI will not allow to download any data  for this bank at all (for details, see POST /bankConnections/import and POST /bankConnections/update).
          type: array
        interfaces:
          description: |-
            <strong>Type:</strong> BankInterface<br/>
            Set of interfaces that finAPI can use to connect to the bank. Note that this set will be empty for non-supported banks. Note also that the WEB_SCRAPER interface might be disabled for your client (see GET /clientConfiguration). When this is the case, then finAPI will not use the web scraper for data download, and if the web scraper is the only supported interface of this bank, then finAPI will not allow to download any data for this bank at all (for details, see POST /bankConnections/import and POST /bankConnections/update).
          items:
            $ref: '#/components/schemas/BankInterface'
          type: array
        bankGroup:
          allOf:
          - $ref: '#/components/schemas/BankGroup'
          description: |-
            <strong>Type:</strong> BankGroup<br/>
            Bank group
          nullable: true
          type: object
        lastCommunicationAttempt:
          description: THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
            to the 'lastCommunicationAttempt' field in the 'interfaces' instead. <br/><br/>Time
            of the last communication attempt with this bank during a bank connection
            import or update (across the entire finAPI system). The value is returned
            in the format 'YYYY-MM-DD HH:MM:SS.SSS' (german time).
          example: 2018-01-01 00:00:00.000
          nullable: true
          type: string
        lastSuccessfulCommunication:
          description: THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
            to the 'lastSuccessfulCommunication' field in the 'interfaces' instead.
            <br/><br/>Time of the last successful communication with this bank during
            a bank connection import or update (across the entire finAPI system).
            The value is returned in the format 'YYYY-MM-DD HH:MM:SS.SSS' (german
            time).
          example: 2018-01-01 00:00:00.000
          nullable: true
          type: string
        isBeta:
          description: Whether this bank is in beta phase. For more details, please
            refer to the field ClientConfiguration.betaBanksEnabled.
          example: true
          type: boolean
      required:
      - bankGroup
      - bic
      - blz
      - blzs
      - city
      - health
      - id
      - interfaces
      - isBeta
      - isCustomerIdPassword
      - isSupported
      - isTestBank
      - lastCommunicationAttempt
      - lastSuccessfulCommunication
      - location
      - loginFieldCustomerId
      - loginFieldPin
      - loginFieldUserId
      - loginHint
      - name
      - pinsAreVolatile
      - popularity
      - supportedDataSources
      type: object
    BankConnection:
      description: Container for a bank connection's data
      example:
        interfaces:
        - userActionRequired: true
          maxDaysForDownload: 365
          aisConsent: '{}'
          lastManualUpdate: '{}'
          twoStepProcedures:
          - implicitExecute: false
            procedureChallengeType: TEXT
            procedureName: mobileTAN
            procedureId: "955"
          - implicitExecute: false
            procedureChallengeType: TEXT
            procedureName: mobileTAN
            procedureId: "955"
          interface: FINTS_SERVER
          lastAutoUpdate: '{}'
          loginCredentials:
          - label: User ID
            value: "123456"
          - label: User ID
            value: "123456"
          defaultTwoStepProcedureId: "955"
        - userActionRequired: true
          maxDaysForDownload: 365
          aisConsent: '{}'
          lastManualUpdate: '{}'
          twoStepProcedures:
          - implicitExecute: false
            procedureChallengeType: TEXT
            procedureName: mobileTAN
            procedureId: "955"
          - implicitExecute: false
            procedureChallengeType: TEXT
            procedureName: mobileTAN
            procedureId: "955"
          interface: FINTS_SERVER
          lastAutoUpdate: '{}'
          loginCredentials:
          - label: User ID
            value: "123456"
          - label: User ID
            value: "123456"
          defaultTwoStepProcedureId: "955"
        ibanOnlyMoneyTransferSupported: true
        twoStepProcedures:
        - implicitExecute: false
          procedureChallengeType: TEXT
          procedureName: mobileTAN
          procedureId: "955"
        - implicitExecute: false
          procedureChallengeType: TEXT
          procedureName: mobileTAN
          procedureId: "955"
        owners:
        - firstName: Max
          lastName: Mustermann
          country: Deutschland
          city: München
          street: Musterstraße
          houseNumber: "99"
          dateOfBirth: 1980-01-01
          postCode: "80000"
          salutation: Herr
          title: Dr.
          email: email@localhost.de
        - firstName: Max
          lastName: Mustermann
          country: Deutschland
          city: München
          street: Musterstraße
          houseNumber: "99"
          dateOfBirth: 1980-01-01
          postCode: "80000"
          salutation: Herr
          title: Dr.
          email: email@localhost.de
        type: ONLINE
        defaultTwoStepProcedureId: "955"
        bankingCustomerId: XXXXX
        bankId: 277672
        bank: '{}'
        collectiveMoneyTransferSupported: true
        furtherLoginNotRecommended: false
        lastManualUpdate: '{}'
        updateStatus: READY
        accountIds:
        - 1
        - 2
        - 3
        name: Bank Connection
        id: 1
        lastAutoUpdate: '{}'
        bankingPin: XXXXX
        ibanOnlyDirectDebitSupported: true
        bankingUserId: XXXXX
        categorizationStatus: READY
      properties:
        id:
          description: Bank connection identifier
          example: 1
          format: int64
          type: integer
        bankId:
          description: 'THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
            to the ''bank'' field instead.<br/><br/>Identifier of the bank that this
            connection belongs to. '
          example: 277672
          format: int64
          type: integer
        name:
          description: Custom name for the bank connection. You can set this field
            with the 'Edit a bank connection' service, as well as during the initial
            import of the bank connection. Maximum length is 64.
          example: Bank Connection
          nullable: true
          type: string
        bankingUserId:
          description: THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
            to the 'loginCredentials' in the 'interfaces' instead.<br/><br/>Stored
            online banking user ID credential. This field may be null for the 'demo
            connection'. If your client has no license for processing banking credentials
            then a banking user ID will always be 'XXXXX'
          example: XXXXX
          nullable: true
          type: string
        bankingCustomerId:
          description: THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
            to the 'loginCredentials' in the 'interfaces' instead.<br/><br/>Stored
            online banking customer ID credential. If your client has no license for
            processing banking credentials or if this field contains a value that
            requires password protection (see field 'isCustomerIdPassword' in Bank
            Resource) then the banking customer ID will always be 'XXXXX
          example: XXXXX
          nullable: true
          type: string
        bankingPin:
          description: THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
            to the 'loginCredentials' in the 'interfaces' instead.<br/><br/>Stored
            online banking PIN. If a PIN is stored, this will always be 'XXXXX'
          example: XXXXX
          nullable: true
          type: string
        type:
          description: THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Bank connection
            type
          enum:
          - ONLINE
          - DEMO
          example: ONLINE
          type: string
        updateStatus:
          description: Current status of data download (account balances and transactions/securities).
            The POST /bankConnections/import and POST /bankConnections/<id>/update
            services will set this flag to IN_PROGRESS before they return. Once the
            import or update has finished, the status will be changed to READY.
          enum:
          - IN_PROGRESS
          - READY
          example: READY
          type: string
        categorizationStatus:
          allOf:
          - $ref: '#/components/schemas/CategorizationStatus'
          description: |-
            <strong>Type:</strong> CategorizationStatus<br/>
            Current status of transaction categorization. The asynchronous download process that is triggered by a call of the POST /bankConnections/import and POST /bankConnections/<id>/update services (and also by finAPI's auto update, if enabled) will set this flag to PENDING once the download has finished and a categorization is scheduled for the imported transactions. A separate categorization thread will then start to categorize the transactions (during this process, the status is IN_PROGRESS). When categorization has finished, the status will be (re-)set to READY. Note that the current categorization status should only be queried after the download has finished, i.e. once the download status has switched from IN_PROGRESS to READY.
          example: READY
        lastManualUpdate:
          allOf:
          - $ref: '#/components/schemas/UpdateResult'
          description: |-
            <strong>Type:</strong> UpdateResult<br/>
            THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer to the corresponding field in 'interfaces' instead.<br/><br/>Result of the last manual update of this bank connection. If no manual update has ever been done so far, then this field will not be set.
          nullable: true
          type: object
        lastAutoUpdate:
          allOf:
          - $ref: '#/components/schemas/UpdateResult'
          description: |-
            <strong>Type:</strong> UpdateResult<br/>
            THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer to the corresponding field in 'interfaces' instead.<br/><br/>Result of the last auto update of this bank connection (ran by finAPI's automatic batch update process). If no auto update has ever been done so far, then this field will not be set.
          nullable: true
          type: object
        ibanOnlyMoneyTransferSupported:
          description: 'THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
            to the ''capabilities'' field of the ''interfaces'' in the Account resource
            instead.<br/><br/>Whether this bank connection accepts money transfer
            requests where the recipient''s account is defined just by the IBAN (without
            an additional BIC). This field is re-evaluated each time this bank connection
            is updated. <br/>See also: /accounts/requestSepaMoneyTransfer'
          example: true
          type: boolean
        ibanOnlyDirectDebitSupported:
          description: 'THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
            to the ''capabilities'' field of the ''interfaces'' in the Account resource
            instead.<br/><br/>Whether this bank connection accepts direct debit requests
            where the debitor''s account is defined just by the IBAN (without an additional
            BIC). This field is re-evaluated each time this bank connection is updated.
            <br/>See also: /accounts/requestSepaDirectDebit'
          example: true
          type: boolean
        collectiveMoneyTransferSupported:
          description: 'THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
            to the ''capabilities'' field of the ''interfaces'' in the Account resource
            instead.<br/><br/>Whether this bank connection supports submitting collective
            money transfers. This field is re-evaluated each time this bank connection
            is updated. <br/>See also: /accounts/requestSepaMoneyTransfer'
          type: boolean
        defaultTwoStepProcedureId:
          description: THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
            to the corresponding field in 'interfaces' instead.<br/><br/>The default
            two-step-procedure. Must match one of the available 'procedureId's from
            the 'twoStepProcedures' list. When this field is set, then finAPI will
            automatically try to select the procedure wherever applicable. Note that
            the list of available procedures of a bank connection may change as a
            result of an update of the connection, and if this field references a
            procedure that is no longer available after an update, finAPI will automatically
            clear the default procedure (set it to null).
          example: "955"
          nullable: true
          type: string
        twoStepProcedures:
          description: |-
            <strong>Type:</strong> TwoStepProcedure<br/>
            THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer to the corresponding field in 'interfaces' instead.<br/><br/>Available two-step-procedures for this bank connection, used for submitting a money transfer or direct debit request (see /accounts/requestSepaMoneyTransfer or /requestSepaDirectDebit). The available two-step-procedures are re-evaluated each time this bank connection is updated (/bankConnections/update). This means that this list may change as a result of an update.
          items:
            $ref: '#/components/schemas/TwoStepProcedure'
          type: array
        interfaces:
          description: |-
            <strong>Type:</strong> BankConnectionInterface<br/>
            Set of interfaces that are connected for this bank connection.
          items:
            $ref: '#/components/schemas/BankConnectionInterface'
          type: array
        accountIds:
          description: Identifiers of the accounts that belong to this bank connection
          example:
          - 1
          - 2
          - 3
          items:
            format: int64
            type: integer
          type: array
        owners:
          description: |-
            <strong>Type:</strong> BankConnectionOwner<br/>
            Information about the owner(s) of the bank connection
          items:
            $ref: '#/components/schemas/BankConnectionOwner'
          nullable: true
          type: array
        bank:
          allOf:
          - $ref: '#/components/schemas/Bank'
          description: |-
            <strong>Type:</strong> Bank<br/>
            Bank that this connection belongs to
          type: object
        furtherLoginNotRecommended:
          description: THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
            to the 'userActionRequired' field of the BankConnectionInterface resource
            instead.<br/><br/>This field indicates whether the last communication
            with the bank failed with an error that requires the user's attention
            or multi-step authentication error. If 'furtherLoginNotRecommended' is
            true, finAPI will stop auto updates of this bank connection to mitigate
            the risk of the user's bank account getting locked by the bank. Every
            communication with the bank (via updates, money_transfers, direct debits.
            etc.) can change the value of this flag. If this field is true, we recommend
            the user to check his credentials and try a manual update of the bank
            connection. If the update is successful without any multi-step authentication
            error, the 'furtherLoginNotRecommended' field will be set to false and
            the bank connection will be reincluded in the next batch update process.
            A manual update of the bank connection with incorrect credentials or if
            multi-step authentication error happens will set this field to true and
            lead to the exclusion of the bank connection from the following batch
            updates.
          example: false
          type: boolean
      required:
      - accountIds
      - bank
      - bankId
      - bankingCustomerId
      - bankingPin
      - bankingUserId
      - categorizationStatus
      - collectiveMoneyTransferSupported
      - defaultTwoStepProcedureId
      - furtherLoginNotRecommended
      - ibanOnlyDirectDebitSupported
      - ibanOnlyMoneyTransferSupported
      - id
      - interfaces
      - lastAutoUpdate
      - lastManualUpdate
      - name
      - owners
      - twoStepProcedures
      - type
      - updateStatus
      type: object
    BankConnectionInterface:
      description: Resource representing a bank connection interface
      example:
        userActionRequired: true
        maxDaysForDownload: 365
        aisConsent: '{}'
        lastManualUpdate: '{}'
        twoStepProcedures:
        - implicitExecute: false
          procedureChallengeType: TEXT
          procedureName: mobileTAN
          procedureId: "955"
        - implicitExecute: false
          procedureChallengeType: TEXT
          procedureName: mobileTAN
          procedureId: "955"
        interface: FINTS_SERVER
        lastAutoUpdate: '{}'
        loginCredentials:
        - label: User ID
          value: "123456"
        - label: User ID
          value: "123456"
        defaultTwoStepProcedureId: "955"
      properties:
        interface:
          allOf:
          - $ref: '#/components/schemas/BankingInterface'
          description: |-
            <strong>Type:</strong> BankingInterface<br/>
            Bank interface. Possible values:<br><br>&bull; <code>WEB_SCRAPER</code> - means that finAPI will parse data from the bank's online banking website.<br>&bull; <code>FINTS_SERVER</code> - means that finAPI will download data via the bank's FinTS interface.<br>&bull; <code>XS2A</code> - means that finAPI will download data via the bank's XS2A interface.<br>
          example: FINTS_SERVER
        loginCredentials:
          description: |-
            <strong>Type:</strong> LoginCredentialResource<br/>
            Login fields for this interface (in the order that we suggest to show them to the user), with their currently stored values. Note that this list always contains all existing login fields for this interface, even when there is no stored value for a field (value will be null in such a case).
          items:
            $ref: '#/components/schemas/LoginCredentialResource'
          type: array
        defaultTwoStepProcedureId:
          description: The default two-step-procedure for this interface. Must match
            one of the available 'procedureId's from the 'twoStepProcedures' list.
            When this field is set, then finAPI will automatically try to select the
            procedure wherever applicable. Note that the list of available procedures
            of a bank connection may change as a result of an update of the connection,
            and if this field references a procedure that is no longer available after
            an update, finAPI will automatically clear the default procedure (set
            it to null).
          example: "955"
          nullable: true
          type: string
        twoStepProcedures:
          description: |-
            <strong>Type:</strong> TwoStepProcedure<br/>
            Available two-step-procedures in this interface, used for submitting a money transfer or direct debit request (see /accounts/requestSepaMoneyTransfer or /requestSepaDirectDebit),or for multi-step-authentication during bank connection import or update. The available two-step-procedures mya be re-evaluated each time this bank connection is updated (/bankConnections/update). This means that this list may change as a result of an update.
          items:
            $ref: '#/components/schemas/TwoStepProcedure'
          type: array
        aisConsent:
          allOf:
          - $ref: '#/components/schemas/BankConsent'
          description: |-
            <strong>Type:</strong> BankConsent<br/>
            If this field is set, it means that this interface is handing out a consent to finAPI in exchange for the login credentials. finAPI needs to use this consent to get access to the account list and account data (i.e. Account Information Services, AIS). If this field is not set, it means that this interface does not use such consents.
          nullable: true
          type: object
        lastManualUpdate:
          allOf:
          - $ref: '#/components/schemas/UpdateResult'
          description: |-
            <strong>Type:</strong> UpdateResult<br/>
            Result of the last manual update of the associated bank connection using this interface. If no manual update has ever been done so far with this interface, then this field will not be set.
          nullable: true
          type: object
        lastAutoUpdate:
          allOf:
          - $ref: '#/components/schemas/UpdateResult'
          description: |-
            <strong>Type:</strong> UpdateResult<br/>
            Result of the last auto update of the associated bank connection using this interface (ran by finAPI's automatic batch update process). If no auto update has ever been done so far with this interface, then this field will not be set.
          nullable: true
          type: object
        userActionRequired:
          description: This field indicates whether the user's attention is required
            for the next update of the given bank connection interface.<br/>If the
            field is true, finAPI stops auto-updates of this bank connection interface
            to mitigate the risk of locking the user's bank account and also of triggering
            a multi-step authentication that might lead to a notification being sent
            to the end-user.<br/>If the field is false, the user's attention might
            still be required for the next bank update, e.g. because of new Terms
            and Conditions that have to get approved by the user.(this only applies
            to users whose mandator doesn't have an AIS license)<br/>Every communication
            with the bank (e.g. updating a bank connection, submitting a money transfer
            or a direct debit, etc.) can change the value of this flag. If the field
            is true, we recommend to ask the end-user to trigger a manual update of
            the bank connection interface (using the 'Update a bank connection' service).
            If the update completes successfully without triggering a strong customer
            authentication or results in storing a valid XS2A consent, this flag will
            switch to false. The logic about determination of the user's attention
            being required might change in time. Please use this as a convenience
            function to know, when you have to involve the user in the next communication
            with the bank. Once the flag switches to false, the bank connection interface
            will be enabled again for the auto-update (if it is configured).
          example: true
          type: boolean
        maxDaysForDownload:
          description: This setting defines how much of an account's transactions
            history will be downloaded whenever a new account is imported. More technically,
            it depicts the number of days to download transactions for, starting from
            - and including - the date of the account import. For example, on an account
            import that happens today, the value 30 would instruct finAPI to download
            transactions from the past 30 days (including today). The minimum allowed
            value is 14, the maximum value is 3650. Also possible is the value 0 (which
            is the default value), in which case there will be no limit to the transactions
            download and finAPI will try to get all transactions that it can. <br/><br/>Note:<br/>&bull;
            There is no guarantee that finAPI will actually download transactions
            for the entire defined date range, as there may be limitations to the
            download range (set by the bank or by finAPI, e.g. see ClientConfiguration.transactionImportLimitation).
            <br/>&bull; This parameter only applies to transactions, not to security
            positions; For security accounts, finAPI will always download all security
            positions that it can. <br/>&bull; This setting is stored for each interface
            individually.<br/>&bull; After an interface has been connected with this
            setting, there is no way to change the setting for that interface afterwards.<br/>&bull;
            <b>If you do not limit the download range to a value less than 90 days,
            the bank is more likely to trigger a strong customer authentication request
            for the user when finAPI is attempting to download the transactions.</b>
          example: 365
          format: int32
          type: integer
      required:
      - aisConsent
      - defaultTwoStepProcedureId
      - interface
      - lastAutoUpdate
      - lastManualUpdate
      - loginCredentials
      - maxDaysForDownload
      - twoStepProcedures
      - userActionRequired
      type: object
    BankConnectionList:
      description: Container for data of multiple bank connections
      example:
        connections:
        - interfaces:
          - userActionRequired: true
            maxDaysForDownload: 365
            aisConsent: '{}'
            lastManualUpdate: '{}'
            twoStepProcedures:
            - implicitExecute: false
              procedureChallengeType: TEXT
              procedureName: mobileTAN
              procedureId: "955"
            - implicitExecute: false
              procedureChallengeType: TEXT
              procedureName: mobileTAN
              procedureId: "955"
            interface: FINTS_SERVER
            lastAutoUpdate: '{}'
            loginCredentials:
            - label: User ID
              value: "123456"
            - label: User ID
              value: "123456"
            defaultTwoStepProcedureId: "955"
          - userActionRequired: true
            maxDaysForDownload: 365
            aisConsent: '{}'
            lastManualUpdate: '{}'
            twoStepProcedures:
            - implicitExecute: false
              procedureChallengeType: TEXT
              procedureName: mobileTAN
              procedureId: "955"
            - implicitExecute: false
              procedureChallengeType: TEXT
              procedureName: mobileTAN
              procedureId: "955"
            interface: FINTS_SERVER
            lastAutoUpdate: '{}'
            loginCredentials:
            - label: User ID
              value: "123456"
            - label: User ID
              value: "123456"
            defaultTwoStepProcedureId: "955"
          ibanOnlyMoneyTransferSupported: true
          twoStepProcedures:
          - implicitExecute: false
            procedureChallengeType: TEXT
            procedureName: mobileTAN
            procedureId: "955"
          - implicitExecute: false
            procedureChallengeType: TEXT
            procedureName: mobileTAN
            procedureId: "955"
          owners:
          - firstName: Max
            lastName: Mustermann
            country: Deutschland
            city: München
            street: Musterstraße
            houseNumber: "99"
            dateOfBirth: 1980-01-01
            postCode: "80000"
            salutation: Herr
            title: Dr.
            email: email@localhost.de
          - firstName: Max
            lastName: Mustermann
            country: Deutschland
            city: München
            street: Musterstraße
            houseNumber: "99"
            dateOfBirth: 1980-01-01
            postCode: "80000"
            salutation: Herr
            title: Dr.
            email: email@localhost.de
          type: ONLINE
          defaultTwoStepProcedureId: "955"
          bankingCustomerId: XXXXX
          bankId: 277672
          bank: '{}'
          collectiveMoneyTransferSupported: true
          furtherLoginNotRecommended: false
          lastManualUpdate: '{}'
          updateStatus: READY
          accountIds:
          - 1
          - 2
          - 3
          name: Bank Connection
          id: 1
          lastAutoUpdate: '{}'
          bankingPin: XXXXX
          ibanOnlyDirectDebitSupported: true
          bankingUserId: XXXXX
          categorizationStatus: READY
        - interfaces:
          - userActionRequired: true
            maxDaysForDownload: 365
            aisConsent: '{}'
            lastManualUpdate: '{}'
            twoStepProcedures:
            - implicitExecute: false
              procedureChallengeType: TEXT
              procedureName: mobileTAN
              procedureId: "955"
            - implicitExecute: false
              procedureChallengeType: TEXT
              procedureName: mobileTAN
              procedureId: "955"
            interface: FINTS_SERVER
            lastAutoUpdate: '{}'
            loginCredentials:
            - label: User ID
              value: "123456"
            - label: User ID
              value: "123456"
            defaultTwoStepProcedureId: "955"
          - userActionRequired: true
            maxDaysForDownload: 365
            aisConsent: '{}'
            lastManualUpdate: '{}'
            twoStepProcedures:
            - implicitExecute: false
              procedureChallengeType: TEXT
              procedureName: mobileTAN
              procedureId: "955"
            - implicitExecute: false
              procedureChallengeType: TEXT
              procedureName: mobileTAN
              procedureId: "955"
            interface: FINTS_SERVER
            lastAutoUpdate: '{}'
            loginCredentials:
            - label: User ID
              value: "123456"
            - label: User ID
              value: "123456"
            defaultTwoStepProcedureId: "955"
          ibanOnlyMoneyTransferSupported: true
          twoStepProcedures:
          - implicitExecute: false
            procedureChallengeType: TEXT
            procedureName: mobileTAN
            procedureId: "955"
          - implicitExecute: false
            procedureChallengeType: TEXT
            procedureName: mobileTAN
            procedureId: "955"
          owners:
          - firstName: Max
            lastName: Mustermann
            country: Deutschland
            city: München
            street: Musterstraße
            houseNumber: "99"
            dateOfBirth: 1980-01-01
            postCode: "80000"
            salutation: Herr
            title: Dr.
            email: email@localhost.de
          - firstName: Max
            lastName: Mustermann
            country: Deutschland
            city: München
            street: Musterstraße
            houseNumber: "99"
            dateOfBirth: 1980-01-01
            postCode: "80000"
            salutation: Herr
            title: Dr.
            email: email@localhost.de
          type: ONLINE
          defaultTwoStepProcedureId: "955"
          bankingCustomerId: XXXXX
          bankId: 277672
          bank: '{}'
          collectiveMoneyTransferSupported: true
          furtherLoginNotRecommended: false
          lastManualUpdate: '{}'
          updateStatus: READY
          accountIds:
          - 1
          - 2
          - 3
          name: Bank Connection
          id: 1
          lastAutoUpdate: '{}'
          bankingPin: XXXXX
          ibanOnlyDirectDebitSupported: true
          bankingUserId: XXXXX
          categorizationStatus: READY
      properties:
        connections:
          description: |-
            <strong>Type:</strong> BankConnection<br/>
            List of bank connections
          items:
            $ref: '#/components/schemas/BankConnection'
          type: array
      required:
      - connections
      type: object
    BankConnectionOwner:
      description: Container for a bank connection owner's data
      example:
        firstName: Max
        lastName: Mustermann
        country: Deutschland
        city: München
        street: Musterstraße
        houseNumber: "99"
        dateOfBirth: 1980-01-01
        postCode: "80000"
        salutation: Herr
        title: Dr.
        email: email@localhost.de
      nullable: true
      properties:
        firstName:
          description: First name
          example: Max
          nullable: true
          type: string
        lastName:
          description: Last name
          example: Mustermann
          nullable: true
          type: string
        salutation:
          description: Salutation
          example: Herr
          nullable: true
          type: string
        title:
          description: Title
          example: Dr.
          nullable: true
          type: string
        email:
          description: Email
          example: email@localhost.de
          nullable: true
          type: string
        dateOfBirth:
          description: Date of birth (in format 'YYYY-MM-DD')
          example: 1980-01-01
          nullable: true
          type: string
        postCode:
          description: Post code
          example: "80000"
          nullable: true
          type: string
        country:
          description: Country
          example: Deutschland
          nullable: true
          type: string
        city:
          description: City
          example: München
          nullable: true
          type: string
        street:
          description: Street
          example: Musterstraße
          nullable: true
          type: string
        houseNumber:
          description: House number
          example: "99"
          nullable: true
          type: string
      required:
      - city
      - country
      - dateOfBirth
      - email
      - firstName
      - houseNumber
      - lastName
      - postCode
      - salutation
      - street
      - title
      type: object
    BankConsent:
      description: Bank consent information
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/BankConsentStatus'
          description: |-
            <strong>Type:</strong> BankConsentStatus<br/>
            Status of the consent. If <code>PRESENT</code>, it means that finAPI has a consent stored and can use it to connect to the bank. If <code>NOT_PRESENT</code>, finAPI will need to acquire a consent when connecting to the bank, which may require login credentials (either passed by the client, or stored in finAPI), and/or user involvement. Note that even when a consent is <code>PRESENT</code>, it may no longer be valid and finAPI will still have to acquire a new consent.
          example: PRESENT
        expiresAt:
          description: Expiration time of the consent in the format 'YYYY-MM-DD HH:MM:SS.SSS'
            (german time).
          example: 2019-07-20 09:05:10.546
          nullable: true
          type: string
      required:
      - expiresAt
      - status
      type: object
    BankConsentStatus:
      enum:
      - PRESENT
      - NOT_PRESENT
      type: string
    BankGroup:
      description: Container for a bank group's data
      properties:
        id:
          description: Bank group identifier
          example: 1
          format: int64
          type: integer
        name:
          description: Name of bank group
          example: FinAPI Test Bank Group
          type: string
      required:
      - id
      - name
      type: object
    BankInterface:
      description: Interface used to connect to a bank
      example:
        loginHint: Bitte geben Sie nur die ersten fünf Stellen Ihrer PIN ein.
        lastCommunicationAttempt: 2018-01-01 00:00:00.000
        isAisSupported: true
        aisAccountTypes:
        - Checking
        - CreditCard
        lastSuccessfulCommunication: 2018-01-01 00:00:00.000
        isMoneyTransferSupported: true
        health: 100
        interface: FINTS_SERVER
        tppAuthenticationGroup: '{}'
        loginCredentials:
        - isSecret: false
          isVolatile: false
          label: Nutzerkennung
        - isSecret: false
          isVolatile: false
          label: Nutzerkennung
        properties:
        - REDIRECT_APPROACH
        paymentCapabilities: '{}'
      properties:
        interface:
          allOf:
          - $ref: '#/components/schemas/BankingInterface'
          description: |-
            <strong>Type:</strong> BankingInterface<br/>
            Bank interface. Possible values:<br><br>&bull; <code>WEB_SCRAPER</code> - means that finAPI will parse data from the bank's online banking website.<br>&bull; <code>FINTS_SERVER</code> - means that finAPI will download data via the bank's FinTS server.<br>&bull; <code>XS2A</code> - means that finAPI will download data via the bank's XS2A interface.<br>
          example: FINTS_SERVER
        tppAuthenticationGroup:
          allOf:
          - $ref: '#/components/schemas/TppAuthenticationGroup'
          description: |-
            <strong>Type:</strong> TppAuthenticationGroup<br/>
            TPP Authentication Group which the bank interface is connected to
          nullable: true
          type: object
        loginCredentials:
          description: |-
            <strong>Type:</strong> BankInterfaceLoginField<br/>
            Login fields for this interface (in the order that we suggest to show them to the user)
          items:
            $ref: '#/components/schemas/BankInterfaceLoginField'
          type: array
        properties:
          example:
          - REDIRECT_APPROACH
          items:
            allOf:
            - $ref: '#/components/schemas/BankInterfaceProperty'
            description: |-
              <strong>Type:</strong> BankInterfaceProperty<br/>
              Set of interface properties/specifics. Possible values:<br><br>&bull; <code>REDIRECT_APPROACH</code> - means that the interface uses a redirect approach when authorizing the user. It requires you to pass the 'redirectUrl' field in all services which define the field. If the user already has imported a bank connection of the same bank that he is about to import, we recommend to confront the user with the question: <blockquote>For the selected bank you have already imported successfully the following accounts: &lt;account list&gt;. Are you sure that you want to import another bank connection from &lt;bank name&gt;?
              </blockquote>&bull; <code>DECOUPLED_APPROACH</code> - means that the interface can trigger a decoupled approval during user authorization.<br/><br/>&bull; <code>DETAILED_CONSENT</code> - means that the interface requires a list of account references when authorizing the user. It requires you to pass the 'accountReferences' field in all services which define the field.<br/><br/>Note that this set will be empty if the interface does not have any specific properties.
          type: array
          uniqueItems: true
        loginHint:
          description: Login hint. Contains a German message for the user that explains
            what kind of credentials are expected.<br/><br/>Please note that it is
            essential to always show the login hint to the user if there is one, as
            the credentials that finAPI requires for the bank might be different to
            the credentials that the user knows from his online banking.<br/><br/>Also
            note that the contents of this field should always be interpreted as HTML,
            as the text might contain HTML tags for highlighted words, paragraphs,
            etc.
          example: Bitte geben Sie nur die ersten fünf Stellen Ihrer PIN ein.
          nullable: true
          type: string
        health:
          description: The health status of this interface. This is a value between
            0 and 100, depicting the percentage of successful communication attempts
            with the bank via this interface during the latest couple of bank connection
            imports or updates (across the entire finAPI system). Note that 'successful'
            means that there was no technical error trying to establish a communication
            with the bank. Non-technical errors (like incorrect credentials) are regarded
            successful communication attempts.
          example: 100
          format: int32
          maximum: 100
          minimum: 0
          type: integer
        lastCommunicationAttempt:
          description: Time of the last communication attempt with this interface
            during an import, update or connect interface (across the entire finAPI
            system). The value is returned in the format 'YYYY-MM-DD HH:MM:SS.SSS'
            (german time).
          example: 2018-01-01 00:00:00.000
          nullable: true
          type: string
        lastSuccessfulCommunication:
          description: Time of the last successful communication with this interface
            during an import, update or connect interface (across the entire finAPI
            system). The value is returned in the format 'YYYY-MM-DD HH:MM:SS.SSS'
            (german time).
          example: 2018-01-01 00:00:00.000
          nullable: true
          type: string
        isMoneyTransferSupported:
          description: 'THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
            to the ''paymentCapabilities'' instead.<br/><br/>Whether this interface
            has the general capability to do money transfers.<br/><br/>Note: It still
            depends on the specifics of an account whether the account supports money
            transfer. In general, you should prefer the field AccountInterface.capabilities
            to determine what is possible for a specific account. This field here
            is meant to be used mainly for when you want to do standalone money transfers
            (finAPI Payment product), i.e. when you do not plan to import an account
            and thus will not have the information about the account''s capabilities.'
          example: true
          type: boolean
        isAisSupported:
          description: 'Whether this interface has the general capability to perform
            Account Information Services (AIS), i.e. if this interface can be used
            to download accounts, balances and transactions. '
          example: true
          type: boolean
        paymentCapabilities:
          allOf:
          - $ref: '#/components/schemas/BankInterfacePaymentCapabilities'
          description: |-
            <strong>Type:</strong> BankInterfacePaymentCapabilities<br/>
            The general payment capabilities of this interface. If a capability is 'true', it means that the option is supported, as long as the involved account also supports it (see AccountInterface.capabilities and AccountInterface.paymentCapabilities). If a capability is 'false', the option is not supported for any account.
          type: object
        aisAccountTypes:
          example:
          - Checking
          - CreditCard
          items:
            allOf:
            - $ref: '#/components/schemas/AccountType'
            description: |-
              <strong>Type:</strong> AccountType<br/>
              The set of account types that we can confirm can be successfully imported through this interface. This field can help you select the appropriate interface if you want to fetch only specific account types when importing or updating a bank connection (see the field <code>accountTypes</code> in the respective services).<br/><br/>Note: If an account type is not listed here, it could still be that the interface will provide such accounts - we just haven't seen this so far. Accordingly, this field is only meant to hint you at the most promising interface. If none of a bank's interfaces have your desired account type listed, we still advise you to make an attempt.
          type: array
      required:
      - aisAccountTypes
      - health
      - interface
      - isAisSupported
      - isMoneyTransferSupported
      - lastCommunicationAttempt
      - lastSuccessfulCommunication
      - loginCredentials
      - loginHint
      - paymentCapabilities
      - properties
      - tppAuthenticationGroup
      type: object
    BankInterfaceLoginField:
      description: Container for a bank's login credential field
      example:
        isSecret: false
        isVolatile: false
        label: Nutzerkennung
      properties:
        label:
          description: Contains a German label for the input field that you should
            provide to the user. Also, these labels are used to identify login fields
            on the API-level, when you pass credentials to the service.
          example: Nutzerkennung
          type: string
        isSecret:
          description: Whether this field has to be treated as a secret. In this case
            your application should use a password input field instead of a cleartext
            field.
          example: false
          type: boolean
        isVolatile:
          description: This field depicts whether the given credential is volatile.
            If a field is volatile, it means that the value for the field, which is
            provided by the user, is valid only for a single authentication and then
            gets invalidated on bank-side. If a login credential field is volatile,
            it is not possible to store it in finAPI, as stored credentials will never
            work for future authentications.
          example: false
          type: boolean
      required:
      - isSecret
      - isVolatile
      - label
      type: object
    BankInterfacePaymentCapabilities:
      description: Payment capabilities of a bank interface
      properties:
        sepaMoneyTransfer:
          description: Capability to do a (single) SEPA money transfer.
          example: true
          type: boolean
        sepaInstantMoneyTransfer:
          description: Capability to do a (single) SEPA instant money transfer.
          example: true
          type: boolean
        sepaCollectiveMoneyTransfer:
          description: Capability to do a collective SEPA money transfer.
          example: true
          type: boolean
        sepaFutureDatedMoneyTransfer:
          description: Capability to do a SEPA money transfer with a future execution
            date.
          example: true
          type: boolean
        sepaStandingOrder:
          description: Capability to do a SEPA standing order.
          example: true
          type: boolean
      required:
      - sepaCollectiveMoneyTransfer
      - sepaFutureDatedMoneyTransfer
      - sepaInstantMoneyTransfer
      - sepaMoneyTransfer
      - sepaStandingOrder
      type: object
    BankInterfaceProperty:
      enum:
      - REDIRECT_APPROACH
      - DECOUPLED_APPROACH
      - DETAILED_CONSENT
      type: string
    BankList:
      description: Container for data of multiple banks
      example:
        banks:
        - lastCommunicationAttempt: 2018-01-01 00:00:00.000
          interfaces:
          - loginHint: Bitte geben Sie nur die ersten fünf Stellen Ihrer PIN ein.
            lastCommunicationAttempt: 2018-01-01 00:00:00.000
            isAisSupported: true
            aisAccountTypes:
            - Checking
            - CreditCard
            lastSuccessfulCommunication: 2018-01-01 00:00:00.000
            isMoneyTransferSupported: true
            health: 100
            interface: FINTS_SERVER
            tppAuthenticationGroup: '{}'
            loginCredentials:
            - isSecret: false
              isVolatile: false
              label: Nutzerkennung
            - isSecret: false
              isVolatile: false
              label: Nutzerkennung
            properties:
            - REDIRECT_APPROACH
            paymentCapabilities: '{}'
          - loginHint: Bitte geben Sie nur die ersten fünf Stellen Ihrer PIN ein.
            lastCommunicationAttempt: 2018-01-01 00:00:00.000
            isAisSupported: true
            aisAccountTypes:
            - Checking
            - CreditCard
            lastSuccessfulCommunication: 2018-01-01 00:00:00.000
            isMoneyTransferSupported: true
            health: 100
            interface: FINTS_SERVER
            tppAuthenticationGroup: '{}'
            loginCredentials:
            - isSecret: false
              isVolatile: false
              label: Nutzerkennung
            - isSecret: false
              isVolatile: false
              label: Nutzerkennung
            properties:
            - REDIRECT_APPROACH
            paymentCapabilities: '{}'
          city: München
          bankGroup: '{}'
          health: 100
          isSupported: true
          isTestBank: true
          blzs: []
          loginHint: Bitte geben Sie Ihre Online-Identifikation und Ihre PIN ein.
          blz: "00000000"
          pinsAreVolatile: true
          lastSuccessfulCommunication: 2018-01-01 00:00:00.000
          loginFieldUserId: Onlinebanking-ID
          popularity: 95
          loginFieldPin: PIN
          name: FinAPI Test Bank
          location: DE
          isBeta: true
          id: 277672
          supportedDataSources:
          - FINTS_SERVER
          - WEB_SCRAPER
          bic: TESTBANKING
          loginFieldCustomerId: Kunden-ID
          isCustomerIdPassword: false
        - lastCommunicationAttempt: 2018-01-01 00:00:00.000
          interfaces:
          - loginHint: Bitte geben Sie nur die ersten fünf Stellen Ihrer PIN ein.
            lastCommunicationAttempt: 2018-01-01 00:00:00.000
            isAisSupported: true
            aisAccountTypes:
            - Checking
            - CreditCard
            lastSuccessfulCommunication: 2018-01-01 00:00:00.000
            isMoneyTransferSupported: true
            health: 100
            interface: FINTS_SERVER
            tppAuthenticationGroup: '{}'
            loginCredentials:
            - isSecret: false
              isVolatile: false
              label: Nutzerkennung
            - isSecret: false
              isVolatile: false
              label: Nutzerkennung
            properties:
            - REDIRECT_APPROACH
            paymentCapabilities: '{}'
          - loginHint: Bitte geben Sie nur die ersten fünf Stellen Ihrer PIN ein.
            lastCommunicationAttempt: 2018-01-01 00:00:00.000
            isAisSupported: true
            aisAccountTypes:
            - Checking
            - CreditCard
            lastSuccessfulCommunication: 2018-01-01 00:00:00.000
            isMoneyTransferSupported: true
            health: 100
            interface: FINTS_SERVER
            tppAuthenticationGroup: '{}'
            loginCredentials:
            - isSecret: false
              isVolatile: false
              label: Nutzerkennung
            - isSecret: false
              isVolatile: false
              label: Nutzerkennung
            properties:
            - REDIRECT_APPROACH
            paymentCapabilities: '{}'
          city: München
          bankGroup: '{}'
          health: 100
          isSupported: true
          isTestBank: true
          blzs: []
          loginHint: Bitte geben Sie Ihre Online-Identifikation und Ihre PIN ein.
          blz: "00000000"
          pinsAreVolatile: true
          lastSuccessfulCommunication: 2018-01-01 00:00:00.000
          loginFieldUserId: Onlinebanking-ID
          popularity: 95
          loginFieldPin: PIN
          name: FinAPI Test Bank
          location: DE
          isBeta: true
          id: 277672
          supportedDataSources:
          - FINTS_SERVER
          - WEB_SCRAPER
          bic: TESTBANKING
          loginFieldCustomerId: Kunden-ID
          isCustomerIdPassword: false
      properties:
        banks:
          description: |-
            <strong>Type:</strong> Bank<br/>
            Banks
          items:
            $ref: '#/components/schemas/Bank'
          type: array
      required:
      - banks
      type: object
    BankingInterface:
      enum:
      - WEB_SCRAPER
      - FINTS_SERVER
      - XS2A
      type: string
    CashFlow:
      description: Cash flow
      example:
        income: 199.99
        spending: -99.99
        balance: 100.0
        countSpendingTransactions: 3
        countIncomeTransactions: 5
        category: '{}'
        countAllTransactions: 8
      properties:
        category:
          allOf:
          - $ref: '#/components/schemas/Category'
          description: |-
            <strong>Type:</strong> Category<br/>
            Category of this cash flow. When null, then this is the cash flow of transactions that do not have a category.
          nullable: true
          type: object
        income:
          description: The total calculated income for the given category
          example: 199.99
          type: number
        spending:
          description: The total calculated spending for the given category
          example: -99.99
          type: number
        balance:
          description: The calculated balance for the given category
          example: 100.0
          type: number
        countIncomeTransactions:
          description: The total count of income transactions for the given category
          example: 5
          format: int32
          type: integer
        countSpendingTransactions:
          description: The total count of spending transactions for the given category
          example: 3
          format: int32
          type: integer
        countAllTransactions:
          description: The total count of all transactions for the given category
          example: 8
          format: int32
          type: integer
      required:
      - balance
      - category
      - countAllTransactions
      - countIncomeTransactions
      - countSpendingTransactions
      - income
      - spending
      type: object
    CashFlowList:
      description: Cash flows
      example:
        totalIncome: 199.99
        totalSpending: -99.99
        totalBalance: 100.0
        cashFlows:
        - income: 199.99
          spending: -99.99
          balance: 100.0
          countSpendingTransactions: 3
          countIncomeTransactions: 5
          category: '{}'
          countAllTransactions: 8
        - income: 199.99
          spending: -99.99
          balance: 100.0
          countSpendingTransactions: 3
          countIncomeTransactions: 5
          category: '{}'
          countAllTransactions: 8
      properties:
        cashFlows:
          description: |-
            <strong>Type:</strong> CashFlow<br/>
            Array of cash flows
          items:
            $ref: '#/components/schemas/CashFlow'
          type: array
        totalIncome:
          description: The total income
          example: 199.99
          type: number
        totalSpending:
          description: The total spending
          example: -99.99
          type: number
        totalBalance:
          description: The total balance
          example: 100.0
          type: number
      required:
      - cashFlows
      - totalBalance
      - totalIncome
      - totalSpending
      type: object
    CategorizationCheckResult:
      example:
        category: '{}'
        transactionId: transaction
      properties:
        transactionId:
          description: The transaction identifier. The transactionId of the transaction
            that was passed to the service as input. This is not an actual ID of a
            stored transaction in finAPI, as the checkCategorization service doesn't
            store any data.
          example: transaction
          type: string
        category:
          allOf:
          - $ref: '#/components/schemas/Category'
          description: |-
            <strong>Type:</strong> Category<br/>
            A category. The determined transaction category for the given transactionId. This can be null, if the categorization algorithm fails to find a matching rule.
          nullable: true
          type: object
      required:
      - category
      - transactionId
      type: object
    CategorizationCheckResults:
      example:
        categorizationCheckResult:
        - category: '{}'
          transactionId: transaction
        - category: '{}'
          transactionId: transaction
      properties:
        categorizationCheckResult:
          description: |-
            <strong>Type:</strong> CategorizationCheckResult<br/>
            List of results
          items:
            $ref: '#/components/schemas/CategorizationCheckResult'
          type: array
      required:
      - categorizationCheckResult
      type: object
    CategorizationRuleDirection:
      enum:
      - Income
      - Spending
      - Both
      type: string
    CategorizationStatus:
      enum:
      - PENDING
      - IN_PROGRESS
      - READY
      type: string
    Category:
      description: Category data
      example:
        parentName: Freizeit, Hobbys & Soziales
        children:
        - 1
        - 2
        - 3
        name: Sport & Fitness
        isCustom: false
        id: 378
        parentId: 373
      properties:
        id:
          description: 'Category identifier.<br/><br/>NOTE: Do NOT assume that the
            identifiers of the global finAPI categories are the same across different
            finAPI environments. In fact, the identifiers may change whenever a new
            finAPI version is released, even within the same environment. The identifiers
            are meant to be used for references within the finAPI services only, but
            not for hard-coding them in your application. If you need to hard-code
            the usage of a certain global category within your application, please
            instead refer to the category name. Also, please make sure to check the
            ''isCustom'' flag, which is false for all global categories (if you are
            not regarding this flag, you might end up referring to a user-specific
            category, and not the global category).'
          example: 378
          format: int64
          type: integer
        name:
          description: Category name
          example: Sport & Fitness
          type: string
        parentId:
          description: Identifier of the parent category (if a parent category exists)
          example: 373
          format: int64
          nullable: true
          type: integer
        parentName:
          description: Name of the parent category (if a parent category exists)
          example: Freizeit, Hobbys & Soziales
          nullable: true
          type: string
        isCustom:
          description: Whether the category is a finAPI global category (in which
            case this field will be false), or the category was created by a user
            (in which case this field will be true)
          example: false
          type: boolean
        children:
          description: List of sub-categories identifiers (if any exist)
          example:
          - 1
          - 2
          - 3
          items:
            format: int64
            type: integer
          nullable: true
          type: array
      required:
      - children
      - id
      - isCustom
      - name
      - parentId
      - parentName
      type: object
    CategoryList:
      description: Container for data of multiple categories
      example:
        categories:
        - parentName: Freizeit, Hobbys & Soziales
          children:
          - 1
          - 2
          - 3
          name: Sport & Fitness
          isCustom: false
          id: 378
          parentId: 373
        - parentName: Freizeit, Hobbys & Soziales
          children:
          - 1
          - 2
          - 3
          name: Sport & Fitness
          isCustom: false
          id: 378
          parentId: 373
      properties:
        categories:
          description: |-
            <strong>Type:</strong> Category<br/>
            Categories
          items:
            $ref: '#/components/schemas/Category'
          type: array
      required:
      - categories
      type: object
    CategoryParams:
      description: Category parameters
      example:
        name: Sport & Fitness
        parentId: 373
      properties:
        name:
          description: Name of the category. Maximum length is 128.
          example: Sport & Fitness
          pattern: '[A-Za-z0-9¡-ʯ &\(\)\{\}\[\]\.:,;\?!\+\-_\$@#~`\^€]*'
          type: string
        parentId:
          description: Identifier of the parent category, if the new category should
            be created as a sub-category. Must point to a main category in this case.
            If the new category should be a main category itself, this field must
            remain unset.
          example: 373
          format: int64
          type: integer
      required:
      - name
      type: object
    ChangeClientCredentialsParams:
      description: Container for change client credentials parameters
      example:
        clientId: 01234567-89ab-cdef-0123-456789abcdef
        newClientSecret: 01234567-89ab-cdef-0123-456789abcdef
        oldClientSecret: 01234567-89ab-cdef-0123-456789abcdef
      properties:
        clientId:
          description: client_id of the client that you want to change the secret
            for
          example: 01234567-89ab-cdef-0123-456789abcdef
          type: string
        oldClientSecret:
          description: Old (=current) client_secret
          example: 01234567-89ab-cdef-0123-456789abcdef
          type: string
        newClientSecret:
          description: 'New client_secret. Required length is 36. Allowed symbols:
            Digits (0 through 9), lower-case and upper-case letters (A through Z),
            and the dash symbol ("-").'
          example: 01234567-89ab-cdef-0123-456789abcdef
          pattern: '[a-zA-Z0-9\-]*'
          type: string
      required:
      - clientId
      - newClientSecret
      - oldClientSecret
      type: object
    CheckCategorizationData:
      description: Transactions data for categorization check
      example:
        transactionData:
        - mcCode: "5542"
          amount: -99.99
          counterpartBlz: "70080000"
          accountTypeId: 1
          typeCodeZka: "999"
          purpose: Restaurantbesuch
          counterpart: Bar Centrale
          counterpartIban: DE13700800000061110500
          counterpartAccountNumber: "61110500"
          transactionId: transaction
          counterpartBic: DRESDEFF700
        - mcCode: "5542"
          amount: -99.99
          counterpartBlz: "70080000"
          accountTypeId: 1
          typeCodeZka: "999"
          purpose: Restaurantbesuch
          counterpart: Bar Centrale
          counterpartIban: DE13700800000061110500
          counterpartAccountNumber: "61110500"
          transactionId: transaction
          counterpartBic: DRESDEFF700
      properties:
        transactionData:
          description: |-
            <strong>Type:</strong> CheckCategorizationTransactionData<br/>
            Set of transaction data
          items:
            $ref: '#/components/schemas/CheckCategorizationTransactionData'
          type: array
      required:
      - transactionData
      type: object
    CheckCategorizationTransactionData:
      description: Transaction data for categorization check
      example:
        mcCode: "5542"
        amount: -99.99
        counterpartBlz: "70080000"
        accountTypeId: 1
        typeCodeZka: "999"
        purpose: Restaurantbesuch
        counterpart: Bar Centrale
        counterpartIban: DE13700800000061110500
        counterpartAccountNumber: "61110500"
        transactionId: transaction
        counterpartBic: DRESDEFF700
      properties:
        transactionId:
          description: Identifier of transaction. This can be any arbitrary string
            that will be passed back in the response so that you can map the results
            to the given transactions. Note that the identifier must be unique within
            the given list of transactions.
          example: transaction
          type: string
        accountTypeId:
          description: Identifier of account type.<br/><br/>1 = Checking,<br/>2 =
            Savings,<br/>3 = CreditCard,<br/>4 = Security,<br/>5 = Loan,<br/>6 = Pocket
            (DEPRECATED; will not be returned for any account unless this type has
            explicitly been set via PATCH),<br/>7 = Membership,<br/>8 = Bausparen<br/><br/>
          example: 1
          format: int64
          maximum: 7
          minimum: 1
          type: integer
        amount:
          description: Amount
          example: -99.99
          type: number
        purpose:
          description: 'Purpose. Any symbols are allowed. Maximum length is 2000.
            Default value: null.'
          example: Restaurantbesuch
          type: string
        counterpart:
          description: 'Counterpart. Any symbols are allowed. Maximum length is 80.
            Default value: null.'
          example: Bar Centrale
          type: string
        counterpartIban:
          description: 'Counterpart IBAN. Default value: null.'
          example: DE13700800000061110500
          type: string
        counterpartAccountNumber:
          description: 'Counterpart account number. Default value: null.'
          example: "61110500"
          type: string
        counterpartBlz:
          description: 'Counterpart BLZ. Default value: null.'
          example: "70080000"
          type: string
        counterpartBic:
          description: 'Counterpart BIC. Default value: null.'
          example: DRESDEFF700
          type: string
        mcCode:
          description: 'Merchant category code (for credit card transactions only).
            May only contain up to 4 digits. Default value: null.'
          example: "5542"
          type: string
        typeCodeZka:
          description: 'ZKA business transaction code which relates to the transaction''s
            type (Number from 0 through 999). Default value: null.'
          example: "999"
          type: string
      required:
      - accountTypeId
      - amount
      - transactionId
      type: object
    ClearingAccountData:
      description: clearing account data
      example:
        clearingAccountName: BA-TUYEF7D24CGK6
        clearingAccountId: BA-TUYEF7D24CGK6
      properties:
        clearingAccountId:
          description: Technical identifier of the clearing account
          example: BA-TUYEF7D24CGK6
          type: string
        clearingAccountName:
          description: Name of the clearing account
          example: BA-TUYEF7D24CGK6
          type: string
      required:
      - clearingAccountId
      - clearingAccountName
      type: object
    ClientConfiguration:
      description: Client configuration parameters
      example:
        paymentsEnabled: true
        finTSProductRegistrationNumber: XXXXX
        betaBanksEnabled: true
        autoDismountWebForm: true
        maxUserLoginAttempts: 3
        pisStandaloneWebFormMode: DISABLED
        isWebScrapingEnabled: true
        pisWebFormMode: DISABLED
        transactionImportLimitation: 0
        userAccessTokensValidityPeriod: 3600
        products:
        - ACCESS
        pfmServicesEnabled: true
        isAutomaticBatchUpdateEnabled: true
        refreshTokensValidityPeriod: 3600
        userSynchronizationCallbackUrl: https://bank.server.com/synchronization
        applicationName: My App
        isStandalonePaymentsEnabled: true
        isUserAutoVerificationEnabled: true
        isMandatorAdmin: false
        pinStorageAvailableInWebForm: true
        categoryRestrictions:
        - parentName: Freizeit, Hobbys & Soziales
          children:
          - 1
          - 2
          - 3
          name: Sport & Fitness
          isCustom: false
          id: 378
          parentId: 373
        - parentName: Freizeit, Hobbys & Soziales
          children:
          - 1
          - 2
          - 3
          name: Sport & Fitness
          isCustom: false
          id: 378
          parentId: 373
        storeSecretsAvailableInWebForm: true
        preferredConsentType: ONETIME
        clientAccessTokensValidityPeriod: 3600
        mandatorLicense: UNLICENSED
        availableBankGroups:
        - DE
        - AT
        - IT
        supportSubjectDefault: Some subject
        supportEmail: email@localhost.de
        userNotificationCallbackUrl: https://bank.server.com/notification
        isXs2aEnabled: true
        isAutoCategorizationEnabled: true
        isNonEuroAccountsSupported: true
        aisWebFormMode: DISABLED
        corsAllowedOrigins:
        - corsAllowedOrigins
        - corsAllowedOrigins
        isDevelopmentModeEnabled: true
      properties:
        pfmServicesEnabled:
          description: Whether your client is allowed to call PFM services (Personal
            Finance Management). The set of PFM services is the following:<br/><br/>&bull;
            all /mandatorAdmin/ibanRules/* and /mandatorAdmin/keywordRules/* services<br/>&bull;
            GET /accounts/dailyBalances<br/>&bull; all /transactions/* services, except
            for GET /transactions/[id(s)] and DELETE /transactions/[id]<br/>&bull;
            all /categories/* services, except for GET /categories/[id(s)]<br/>&bull;
            all /labels/* services<br/>&bull; all /notificationRules/* services<br/>&bull;
            all /tests/* services
          example: true
          type: boolean
        isAutomaticBatchUpdateEnabled:
          description: Whether finAPI performs a regular automatic update of your
            users' bank connections. To find out how the automatic batch update is
            configured for your client, i.e. which bank connections get updated, and
            at which time and interval, please contact your Sys-Admin. Note that even
            if the automatic batch update is enabled for your client, individual users
            can still disable the feature for their own bank connections.
          example: true
          type: boolean
        isDevelopmentModeEnabled:
          description: 'Whether development mode is enabled. This setting is enabled
            on mandator level and allows any user to access the ''Mock batch update''
            service. <br/><br/>NOTE: This flag is meant for testing purposes during
            development of your application. <br/>This is why this will never be enabled
            on a production environment.'
          example: true
          type: boolean
        isNonEuroAccountsSupported:
          description: Whether finAPI will download data (balance and transactions)
            for bank accounts with a currency other than EUR (affects all users).
            If this flag is false, then non-EUR accounts will still be returned in
            the account list, but they will have no balance and no transactions. Note
            that this currently applies to Checking accounts only.
          example: true
          type: boolean
        isAutoCategorizationEnabled:
          description: Whether transactions will be categorized as soon as they are
            downloaded. <br/>In case this flag is false, the user needs to manually
            trigger categorization using the 'Trigger categorization' service.
          example: true
          type: boolean
        mandatorLicense:
          allOf:
          - $ref: '#/components/schemas/MandatorLicense'
          description: |-
            <strong>Type:</strong> MandatorLicense<br/>
            The license associated with your client. <br/>The licensing model affects the TPP registration data used to connect to the bank (e.g. <b>finTSProductRegistrationNumber</b> for FINTS_SERVER interface). Licenses are administered by finAPI. Please contact the support to change the license that was set up for you.<br/>Possible values are:<br/>UNLICENSED: finAPI will use its own TPP registration to connect to the bank for both account information services (AIS) and payment initiation services (PIS).<br/>AISP: finAPI will use its own TPP registration to connect to the bank for PIS, and your registration for AIS.<br/>PISP: finAPI will use its own TPP registration to connect to the bank for AIS, and your registration for PIS.<br/>FULLY_LICENSED: finAPI will use your TPP registration to connect to the bank for both AIS and PIS.
          example: UNLICENSED
        preferredConsentType:
          allOf:
          - $ref: '#/components/schemas/PreferredConsentType'
          description: |-
            <strong>Type:</strong> PreferredConsentType<br/>
            The preferred consent type that will be used for the XS2A interface.<br/><br/><b>ONETIME</b> - The consent can only be used once to download data associated with the account. The consent won’t be saved by finAPI.<br/><b>RECURRING</b> - The consent is valid for up to 90 days and can be used by finAPI to access and download account data for up to 4 times per day.<br/><br/>NOTE: If the bank does not support the preferred consent type, then finAPI will default to the other type.
          example: ONETIME
        userNotificationCallbackUrl:
          description: Callback URL to which finAPI sends the notification messages
            that are triggered from the automatic batch update of the users' bank
            connections. This field is only relevant if the automatic batch update
            is enabled for your client. For details about what the notification messages
            look like, please see the documentation in the 'Notification Rules' section.
            finAPI will call this URL with HTTP method POST. Note that the response
            of the call is not processed by finAPI. Also note that while the callback
            URL may be a non-secured (http) URL on the finAPI sandbox or alpha environment,
            it MUST be a SSL-secured (https) URL on the finAPI live system.
          example: https://bank.server.com/notification
          nullable: true
          type: string
        userSynchronizationCallbackUrl:
          description: |-
            Callback URL for user synchronization. This field should be set if you - as a finAPI customer - have multiple clients using finAPI. In such case, all of your clients will share the same user base, making it possible for a user to be created in one client, but then deleted in another. To keep the client-side user data consistent in all clients, you should set a callback URL for each client. finAPI will send a notification to the callback URL of each client whenever a user of your user base gets deleted. Note that finAPI will send a deletion notification to ALL clients, including the one that made the user deletion request to finAPI. So when deleting a user in finAPI, a client should rely on the callback to delete the user on its own side. <p>The notification that finAPI sends to the clients' callback URLs will be a POST request, with this body: <pre>{
               "userId" : string // contains the identifier of the deleted user
               "event" : string // this will always be "DELETED"
            }</pre><br/>Note that finAPI does not process the response of this call. Also note that while the callback URL may be a non-secured (http) URL on the finAPI sandbox or alpha environment, it MUST be a SSL-secured (https) URL on the finAPI live system.</p>As long as you have just one client, you can ignore this field and let it be null. However keep in mind that in this case your client will not receive any callback when a user gets deleted - so the deletion of the user on the client-side must not be forgotten. Of course you may still use the callback URL even for just one client, if you want to implement the deletion of the user on the client-side via the callback from finAPI.
          example: https://bank.server.com/synchronization
          nullable: true
          type: string
        refreshTokensValidityPeriod:
          description: The validity period that newly requested refresh tokens initially
            have (in seconds). A value of 0 means that the tokens never expire (Unless
            explicitly invalidated, e.g. by revocation, or when a user gets locked,
            or when the password is reset for a user).
          example: 3600
          format: int32
          type: integer
        userAccessTokensValidityPeriod:
          description: The validity period that newly requested access tokens for
            users initially have (in seconds). A value of 0 means that the tokens
            never expire (Unless explicitly invalidated, e.g. by revocation, or when
            a user gets locked, or when the password is reset for a user).
          example: 3600
          format: int32
          type: integer
        clientAccessTokensValidityPeriod:
          description: The validity period that newly requested access tokens for
            clients initially have (in seconds). A value of 0 means that the tokens
            never expire (Unless explicitly invalidated, e.g. by revocation).
          example: 3600
          format: int32
          type: integer
        maxUserLoginAttempts:
          description: Number of consecutive failed login attempts of a user into
            his finAPI account that is allowed before finAPI locks the user's account.
            When a user's account is locked, finAPI will invalidate all user's tokens
            and it will deny any service call in the context of this user (i.e. any
            call to a service using one of the user's authorization tokens, as well
            as the service for requesting a new token for this user). To unlock a
            user's account, a new password must be set for the account by the client
            (see the services /users/requestPasswordChange and /users/executePasswordChange).
            Once a new password has been set, all services will be available again
            for this user and the user's failed login attempts counter is reset to
            0. The user's failed login attempts counter is also reset whenever a new
            authorization token has been successfully retrieved, or whenever the user
            himself changes his password.<br/><br/>Note that when this field has a
            value of 0, it means that there is no limit for user login attempts, i.e.
            finAPI will never lock user accounts.
          example: 3
          format: int32
          type: integer
        transactionImportLimitation:
          description: This setting defines the upper limit of how much of an account's
            transactions history may be downloaded whenever a new account is imported,
            across all of your users. More technically, it depicts the maximum number
            of days for which transactions might get downloaded, starting from - and
            including - the date of the account import. '0' means that there is no
            limitation.
          example: 0
          format: int32
          type: integer
        isUserAutoVerificationEnabled:
          description: Whether users that are created with this client are automatically
            verified on creation. If this field is set to 'false', then any user that
            is created with this client must first be verified with the "Verify a
            user" service before he can be authorized. If the field is 'true', then
            no verification is required by the client and the user can be authorized
            immediately after creation.
          example: true
          type: boolean
        isMandatorAdmin:
          description: Whether this client is a 'Mandator Admin'. Mandator Admins
            are special clients that can access the 'Mandator Administration' section
            of finAPI. If you do not yet have credentials for a Mandator Admin, please
            contact us at support@finapi.io. For further information, please refer
            to <a href='https://documentation.finapi.io/access/Application-management.2763423767.html'
            target='_blank'>this page</a> on our Access Public Documentation.
          example: false
          type: boolean
        isWebScrapingEnabled:
          description: Whether finAPI is allowed to use the WEB_SCRAPER interface
            for data download or payments. <br/><br/>If this field is set to 'true',
            then finAPI might download data from the online banking websites of banks
            (either in addition to other interfaces, or as the sole data source for
            the download). Also, it will be possible to do payments via the WEB_SCRAPER
            interface.<br/><br/>If this field is set to 'false', then finAPI will
            not use any web scrapers. Payments via the WEB_SCRAPER interface will
            not be possible, and finAPI will not allow any data download for banks
            where no other interface except WEB_SCRAPER is available. <br/><br/>Please
            contact your Sys-Admin if you want to change this setting.
          example: true
          type: boolean
        isXs2aEnabled:
          description: THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/><br/>Whether
            this client is allowed to access XS2A services.
          example: true
          type: boolean
        pinStorageAvailableInWebForm:
          description: THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
            to the 'storeSecretsAvailableInWebForm' field instead.<br/><br/>Whether
            finAPI's Web Form will provide a checkbox for the user allowing him to
            choose whether to store his banking PIN in finAPI. If this field is set
            to false, then the user won't have an option to store his PIN.
          example: true
          type: boolean
        paymentsEnabled:
          description: Whether this client is allowed to do PIS.<br/><br/>Note that
            on the Sandbox environment, it is always possible to execute payments
            (regardless of what this field says), as long as you are using a test
            bank (see Bank.isTestBank)
          example: true
          type: boolean
        isStandalonePaymentsEnabled:
          description: Whether this client is allowed to do standalone PIS (doing
            money transfers and standing orders for accounts that are not imported
            in finAPI).<br/><br/>Note that on the Sandbox environment, it is always
            possible to execute payments and standing orders (regardless of what this
            field says), as long as you are using a test bank (see Bank.isTestBank)
          example: true
          type: boolean
        availableBankGroups:
          example:
          - DE
          - AT
          - IT
          items:
            description: 'List of bank groups that are available to this client. A
              bank group is a collection of all banks that are located in a certain
              country, and is defined by the country''s ISO 3166 ALPHA-2 code (see
              also field ''location'' of Bank resource). If you want to extend or
              limit the available bank groups for your client, please contact your
              Sys-Admin.<br/><br/>Note: There is no bank group for international institutes
              (i.e. institutes that are not bound to any specific country). Instead,
              those institutes are always available. If this list is empty, it means
              that ONLY international institutes are available.'
            type: string
          type: array
        products:
          example:
          - ACCESS
          items:
            allOf:
            - $ref: '#/components/schemas/Product'
            description: |-
              <strong>Type:</strong> Product<br/>
              List of finAPI products that are available to this client.
          type: array
          uniqueItems: true
        applicationName:
          description: THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
            <a href='?product=web_form_2.0#post-/api/profiles' target='_blank'>here</a>
            to the 'logo' and 'favicon' field instead. The Web Form will now be able
            to render your logo both in the header and as a favicon.<br/><br/>Application
            name. When an application name is set (e.g. "My App"), then finAPI's Web
            Form will display a text to the user "Weiterleitung auf finAPI von ..."
            (e.g. "Weiterleitung auf finAPI von MyApp").
          example: My App
          nullable: true
          type: string
        finTSProductRegistrationNumber:
          description: The FinTS product registration number. If a value is stored,
            this will always be 'XXXXX'.
          example: XXXXX
          nullable: true
          type: string
        storeSecretsAvailableInWebForm:
          description: THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
            <a href='?product=web_form_2.0#post-/api/profiles' target='_blank'>here</a>
            to the 'storeSecrets' field instead.<br/><br/>Whether finAPI's Web Form
            should provide a checkbox for the user allowing him to choose whether
            to store his banking PIN in finAPI. If this field is set to false, then
            the user won't have an option to store his PIN.
          example: true
          type: boolean
        supportSubjectDefault:
          description: THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
            <a href='https://documentation.finapi.io/webform/For-best-results!.2477654019.html'
            target='_blank'>here</a> to the 'errorRedirectUrl' and 'customerSupportUrl'
            query parameters instead.<br/><br/>Default value for the subject element
            of support emails.
          example: Some subject
          nullable: true
          type: string
        supportEmail:
          description: THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
            <a href='https://documentation.finapi.io/webform/For-best-results!.2477654019.html'
            target='_blank'>here</a> to the 'errorRedirectUrl' and 'customerSupportUrl'
            query parameters instead.<br/><br/>Email address to sent support requests
            to from the Web Form.
          example: email@localhost.de
          nullable: true
          type: string
        aisWebFormMode:
          allOf:
          - $ref: '#/components/schemas/WebFormMode'
          description: |-
            <strong>Type:</strong> WebFormMode<br/>
            Indicates whether the client is using the finAPI Web Form for Account Initiation Services.<br/><br/>Possible values: <br/>&bull; <code>DISABLED</code> - No Web Form is triggered<br/>&bull; <code>INTERNAL</code> - THIS VALUE IS DEPRECATED AND WILL BE REMOVED. Hence, we request customers to foresee a migration to Web Form 2.0 (value <code>EXTERNAL</code>).<br/>End users will be directed to the classical Web Form implementation.<br/>&bull; <code>EXTERNAL</code> - End users will be directed to the <a href='https://documentation.finapi.io/webform/Introduction.2038136860.html'  target='_blank'>new Web Form</a> implementation.
          example: DISABLED
        pisWebFormMode:
          allOf:
          - $ref: '#/components/schemas/WebFormMode'
          description: |-
            <strong>Type:</strong> WebFormMode<br/>
            Indicates whether the client is using the finAPI Web Form for Standard Payment Initiation Services (Payments for accounts that have been imported in finAPI).<br/><br/>Possible values: <br/>&bull; <code>DISABLED</code> - No Web Form is triggered<br/>&bull; <code>INTERNAL</code> - THIS VALUE IS DEPRECATED AND WILL BE REMOVED. Hence, we request customers to foresee a migration to Web Form 2.0 (value <code>EXTERNAL</code>).<br/>End users will be directed to the classical Web Form implementation.<br/>&bull; <code>EXTERNAL</code> - End users will be directed to the <a href='https://documentation.finapi.io/webform/Introduction.2038136860.html'  target='_blank'>new Web Form</a> implementation.
          example: DISABLED
        pisStandaloneWebFormMode:
          allOf:
          - $ref: '#/components/schemas/WebFormMode'
          description: |-
            <strong>Type:</strong> WebFormMode<br/>
            Indicates whether the client is using the finAPI Web Form for Standalone Payment Initiation Services (Payments without account import).<br/><br/>Possible values: <br/>&bull; <code>DISABLED</code> - No Web Form is triggered<br/>&bull; <code>INTERNAL</code> - THIS VALUE IS DEPRECATED AND WILL BE REMOVED. Hence, we request customers to foresee a migration to Web Form 2.0 (value <code>EXTERNAL</code>).<br/>End users will be directed to the classical Web Form implementation.<br/>&bull; <code>EXTERNAL</code> - End users will be directed to the <a href='https://documentation.finapi.io/webform/Introduction.2038136860.html'  target='_blank'>new Web Form</a> implementation.
          example: DISABLED
        betaBanksEnabled:
          description: Whether the set of banks that are available to your client
            contains “Beta banks”. Beta banks provide pre-release interfaces that
            are still in a beta phase. Communication to the bank via such interfaces
            might be unstable, and the correctness and/or quality of data delivery
            or payment execution cannot be guaranteed.<br/>As the word “BETA” already
            indicates, Beta banks are subject to changes. Their properties, as well
            as their behaviour can change based on continuous tests and customer feedback.
            Also, to keep our bank list clean, we might remove Beta banks at any point
            in time, including all related user data (bank connections, accounts,
            transactions etc). We still recommend you to enable beta banks in your
            application, because it enables us to release a stable interface faster.
            However, you should point it out to your users when using a beta bank
            (also see field Bank.isBeta).<br/><br/>If this field is true, then the
            GET /banks services will include beta banks in their results, and you
            can use beta banks in any service where you can pass a bank identifier.
            If the field is false, then beta banks will not exist for your client.
          example: true
          type: boolean
        categoryRestrictions:
          description: |-
            <strong>Type:</strong> Category<br/>
            Defines the set of transaction categories to which your client is restricted. When retrieving transactions (via the GET /transactions services), you may request only those transactions whose 'category' is one of the listed categories. If this field is null, then there are no restrictions for your client, and you may retrieve the full set of imported transactions.
          items:
            $ref: '#/components/schemas/Category'
          nullable: true
          type: array
        autoDismountWebForm:
          description: THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/> Please refer
            <a href='?product=web_form_2.0#post-/api/profiles' target='_blank'>here</a>
            to the 'skipConfirmationView' field instead.<br/><br/>This flag indicates
            whether the Web Form should get removed from the parent page automatically
            once it’s finished. It applies ONLY to the classical embedded Web Form.
            That means it’s only applied if aisWebFormMode, pisWebFormMode or pisStandaloneWebFormMode
            are defined as INTERNAL. In case you are using our standalone Web Form
            by redirecting the user to our Web Form link, this feature has no effect.
          example: true
          type: boolean
        corsAllowedOrigins:
          description: The list of allowed origins for cross-origin requests. The
            CORS configuration applies to all the API services except for the /oauth
            services. If this list is empty, then CORS is not enabled for this client.
            Please contact the support if you want to enable or change the client's
            CORS configuration.
          items:
            type: string
          nullable: true
          type: array
      required:
      - aisWebFormMode
      - applicationName
      - autoDismountWebForm
      - availableBankGroups
      - betaBanksEnabled
      - categoryRestrictions
      - clientAccessTokensValidityPeriod
      - corsAllowedOrigins
      - finTSProductRegistrationNumber
      - isAutoCategorizationEnabled
      - isAutomaticBatchUpdateEnabled
      - isDevelopmentModeEnabled
      - isMandatorAdmin
      - isNonEuroAccountsSupported
      - isStandalonePaymentsEnabled
      - isUserAutoVerificationEnabled
      - isWebScrapingEnabled
      - isXs2aEnabled
      - mandatorLicense
      - maxUserLoginAttempts
      - paymentsEnabled
      - pfmServicesEnabled
      - pinStorageAvailableInWebForm
      - pisStandaloneWebFormMode
      - pisWebFormMode
      - preferredConsentType
      - products
      - refreshTokensValidityPeriod
      - storeSecretsAvailableInWebForm
      - supportEmail
      - supportSubjectDefault
      - transactionImportLimitation
      - userAccessTokensValidityPeriod
      - userNotificationCallbackUrl
      - userSynchronizationCallbackUrl
      type: object
    ClientConfigurationParams:
      description: Client configuration parameters
      example:
        isPinStorageAvailableInWebForm: true
        supportSubjectDefault: Some subject
        supportEmail: email@localhost.de
        userNotificationCallbackUrl: https://bank.server.com/notification
        finTSProductRegistrationNumber: ABCDEF1234567890ABCDEF123
        betaBanksEnabled: true
        refreshTokensValidityPeriod: 3600
        userSynchronizationCallbackUrl: https://bank.server.com/synchronization
        userAccessTokensValidityPeriod: 3600
        storeSecretsAvailableInWebForm: true
        applicationName: My App
        clientAccessTokensValidityPeriod: 3600
      properties:
        userNotificationCallbackUrl:
          description: Callback URL to which finAPI sends the notification messages
            that are triggered from the automatic batch update of the users' bank
            connections. This field is only relevant if the automatic batch update
            is enabled for your client. For details about what the notification messages
            look like, please see the documentation in the 'Notification Rules' section.
            finAPI will call this URL with HTTP method POST. Note that the response
            of the call is not processed by finAPI. Also note that while the callback
            URL may be a non-secured (http) URL on the finAPI sandbox or alpha environment,
            it MUST be a SSL-secured (https) URL on the finAPI live system.<p>The
            maximum allowed length of the URL is 512. If you have previously set a
            callback URL and now want to clear it (thus disabling user-related notifications
            altogether), you can pass an empty string ("").
          example: https://bank.server.com/notification
          type: string
        userSynchronizationCallbackUrl:
          description: |-
            Callback URL for user synchronization. This field should be set if you - as a finAPI customer - have multiple clients using finAPI. In such case, all of your clients will share the same user base, making it possible for a user to be created in one client, but then deleted in another. To keep the client-side user data consistent in all clients, you should set a callback URL for each client. finAPI will send a notification to the callback URL of each client whenever a user of your user base gets deleted. Note that finAPI will send a deletion notification to ALL clients, including the one that made the user deletion request to finAPI. So when deleting a user in finAPI, a client should rely on the callback to delete the user on its own side. <p>The notification that finAPI sends to the clients' callback URLs will be a POST request, with this body: <pre>{
               "userId" : string // contains the identifier of the deleted user
               "event" : string // this will always be "DELETED"
            }</pre><br/>Note that finAPI does not process the response of this call. Also note that while the callback URL may be a non-secured (http) URL on the finAPI sandbox or alpha system, it MUST be a SSL-secured (https) URL on the live system.</p>As long as you have just one client, you can ignore this field and let it be null. However keep in mind that in this case your client will not receive any callback when a user gets deleted - so the deletion of the user on the client-side must not be forgotten. Of course you may still use the callback URL even for just one client, if you want to implement the deletion of the user on the client-side via the callback from finAPI.<p> The maximum allowed length of the URL is 512. If you have previously set a callback URL and now want to clear it (thus disabling user synchronization related notifications for this client), you can pass an empty string ("").
          example: https://bank.server.com/synchronization
          type: string
        refreshTokensValidityPeriod:
          description: The validity period that newly requested refresh tokens initially
            have (in seconds). The value must be greater than or equal to 60, or 0.
            A value of 0 means that the tokens never expire (Unless explicitly invalidated,
            e.g. by revocation , or when a user gets locked, or when the password
            is reset for a user).
          example: 3600
          format: int32
          type: integer
        userAccessTokensValidityPeriod:
          description: The validity period that newly requested access tokens for
            users initially have (in seconds). The value must be greater than or equal
            to 60, or 0. A value of 0 means that the tokens never expire.
          example: 3600
          format: int32
          type: integer
        clientAccessTokensValidityPeriod:
          description: The validity period that newly requested access tokens for
            clients initially have (in seconds). The value must be greater than or
            equal to 60, or 0. A value of 0 means that the tokens never expire.
          example: 3600
          format: int32
          type: integer
        isPinStorageAvailableInWebForm:
          description: THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
            <a href='?product=web_form_2.0#post-/api/profiles' target='_blank'>here</a>
            to the 'storeSecrets' field instead.<br/><br/>Whether finAPI's Web Form
            should provide a checkbox for the user allowing him to choose whether
            to store his banking PIN in finAPI. If this field is set to false, then
            the user won't have an option to store his PIN.
          example: true
          type: boolean
        storeSecretsAvailableInWebForm:
          description: THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
            <a href='?product=web_form_2.0#post-/api/profiles' target='_blank'>here</a>
            to the 'storeSecrets' field instead.<br/><br/>Whether finAPI's Web Form
            will allow the user to choose whether to store login secrets (like a PIN)
            in finAPI. If this field is set to false, the option will not be available
            and the secrets not stored.
          example: true
          type: boolean
        applicationName:
          description: 'THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
            <a href=''?product=web_form_2.0#post-/api/profiles'' target=''_blank''>here</a>
            to the ''logo'' and ''favicon'' field instead. The Web Form will now be
            able to render your logo both in the header and as a favicon.<br/><br/>When
            an application name is set (e.g. "My App"), then finAPI''s Web Form will
            display a text to the user "Weiterleitung auf finAPI von ..." (e.g. "Weiterleitung
            auf finAPI von My App"). If you have previously set a application name
            and now want to clear it, you can pass an empty string (""). Maximum length:
            64'
          example: My App
          pattern: '[A-Za-z0-9¡-ʯ &\(\)\{\}\[\]\.:,;\?!\+\-_\$@#~`\^€]*'
          type: string
        finTSProductRegistrationNumber:
          description: The FinTS product registration number. Please follow <a href='https://www.hbci-zka.de/register/prod_register.htm'
            target='_blank'>this link</a> to apply for a registration number. Only
            customers who have an AISP or PISP license must define their FinTS product
            registration number. Customers who are relying on the finAPI Web Form
            will be assigned to finAPI's FinTS product registration number automatically
            and do not have to register themselves. During a batch update, finAPI
            is using the FinTS product registration number of the client, that was
            used to create the user. If you have previously set a FinTS product registration
            number and now want to clear it, you can pass an empty string (""). Only
            hexa decimal characters in capital case with a maximum length of 25 characters
            are allowed. E.g. 'ABCDEF1234567890ABCDEF123'
          example: ABCDEF1234567890ABCDEF123
          pattern: '[0-9A-F]*'
          type: string
        supportSubjectDefault:
          description: THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
            <a href='https://documentation.finapi.io/webform/For-best-results!.2477654019.html'
            target='_blank'>here</a> to the 'errorRedirectUrl' and 'customerSupportUrl'
            query parameters instead.<br/><br/>Default value for the subject element
            of support emails. Maximum length is 100. Pass an empty string ('') if
            you want to clear the current subject default value.
          example: Some subject
          pattern: '[A-Za-z0-9¡-ʯ &\(\)\{\}\[\]\.:,;\?!\+\-_\$@#~`\^€]*'
          type: string
        supportEmail:
          description: THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
            <a href='https://documentation.finapi.io/webform/For-best-results!.2477654019.html'
            target='_blank'>here</a> to the 'errorRedirectUrl' and 'customerSupportUrl'
            query parameters instead.<br/><br/>Email address to sent support requests
            to from the Web Form. Maximum length is 320. Pass an empty string ('')
            if you want to clear the current email address.
          example: email@localhost.de
          pattern: '[A-Za-z0-9¡-ʯ &\(\)\{\}\[\]\.:,;\?!\+\-_\$@#~`\^€]*'
          type: string
        betaBanksEnabled:
          description: Whether the set of banks that are available to your client
            should include “Beta banks”. Beta banks provide pre-release interfaces
            that are still in a beta phase. Communication to the bank via such interfaces
            might be unstable, and the correctness and/or quality of data delivery
            or payment execution cannot be guaranteed.<br/>As the word “BETA” already
            indicates, Beta banks are subject to changes. Their properties, as well
            as their behaviour can change based on continuous tests and customer feedback.
            Also, to keep our bank list clean, we might remove Beta banks at any point
            in time, including all related user data (bank connections, accounts,
            transactions etc). We still recommend you to enable beta banks in your
            application, because it enables us to release a stable interface faster.
            However, you should point it out to your users when using a beta bank
            (also see field Bank.isBeta).<br/><br/>If this field is true, then the
            GET /banks services will include beta banks in their results, and you
            can use beta banks in any service where you can pass a bank identifier.
            If the field is false, then beta banks will not exist for your client.
          example: true
          type: boolean
      type: object
    ConnectInterfaceParams:
      description: Container for interface connection parameters
      example:
        skipPositionsDownload: false
        maxDaysForDownload: 365
        bankConnectionId: 1
        redirectUrl: https://myapplication.com
        multiStepAuthentication: '{}'
        sourceInterface: XS2A
        accountReferences:
        - iban: DE89370400440532013000
        - iban: DE89370400440532013000
        accountTypes:
        - Checking
        - Savings
        - CreditCard
        - Security
        - Loan
        - Pocket
        - Membership
        - Bausparen
        loadOwnerData: false
        interface: XS2A
        loginCredentials:
        - label: Onlinebanking-ID
          value: max.mustermann
        - label: Onlinebanking-ID
          value: max.mustermann
        storeSecrets: true
      properties:
        bankConnectionId:
          description: Bank connection identifier
          example: 1
          format: int64
          type: integer
        interface:
          allOf:
          - $ref: '#/components/schemas/BankingInterface'
          description: |-
            <strong>Type:</strong> BankingInterface<br/>
            The interface to use for connecting with the bank.
          example: XS2A
        sourceInterface:
          allOf:
          - $ref: '#/components/schemas/BankingInterface'
          description: |-
            <strong>Type:</strong> BankingInterface<br/>
            The source interface that should be used as the source of credentials. Set it to one of already existing bank connection's interfaces and finAPI will try to use the stored credentials of that interface for the current service call. The source interface must fit the following requirements:<br/>- it must have the same set of bank login fields as the main interface (the 'interface' parameter);<br/>- it must have stored values for all its bank login fields.<br/>If any of those conditions are not met - the service will throw an appropriate error.<br/>Note: the source interface is ignored if any login credentials are given.
          example: XS2A
        loginCredentials:
          description: |-
            <strong>Type:</strong> LoginCredential<br/>
            Set of login credentials. Must be passed in combination with the 'interface' field.
          items:
            $ref: '#/components/schemas/LoginCredential'
          type: array
        storeSecrets:
          default: false
          description: Whether to store the secret login fields. If the secret fields
            are stored, then updates can be triggered without the involvement of the
            users, as long as the credentials remain valid and the bank consent has
            not expired. Note that bank consent will be stored regardless of the field
            value. Default value is false.
          example: true
          type: boolean
        skipPositionsDownload:
          default: false
          description: Whether to skip the download of transactions and securities
            or not. If set to true, then finAPI will download just the accounts list
            with the accounts' information (like account name, number, holder, etc),
            as well as the accounts' balances (if possible), but skip the download
            of transactions and securities. Default is false.<br/><br/>NOTES:<br/>&bull;
            Setting this flag to true is only meant to be used if A) you generally
            never download positions, because you are only interested in the accounts
            list and/or balances, or B) you want to get just the list of accounts
            in a first step, and then delete unwanted accounts from the bank connection,
            before you trigger another update with transactions download. This approach
            allows you to download transactions only for the accounts that you want.<br/>&bull;
            If you skip the download of transactions and securities during an import
            or update, you can still download them on a later update (though you might
            not get all positions at a later point, because the date range in which
            the bank servers provide this data is usually limited).<br/>&bull; If
            an account already had any positions imported before an update, and you
            skip the positions download in the update, then the account's updated
            balance might not add up to the set of transactions / security positions.
            Be aware that certain services (like GET /accounts/dailyBalances) may
            give incorrect results for accounts in such a state.<br/>&bull; If this
            bank connection is updated via finAPI's automatic batch update, then transactions
            and security positions (of already imported accounts) <u>will</u> be downloaded
            in any case!<br/>&bull; For security accounts, skipping the downloading
            of the securities might result in the account's balance also not being
            downloaded.<br/>&bull; For Bausparen accounts, this field is ignored.
            finAPI will always download transactions for Bausparen accounts.<br/>
          example: false
          type: boolean
        loadOwnerData:
          default: false
          description: 'Whether to load information about the bank connection owner(s)
            - see field ''owners''. Default value is ''false''.<br/><br/>NOTE: This
            feature is supported only by the WEB_SCRAPER interface.'
          example: false
          type: boolean
        accountTypes:
          example:
          - Checking
          - Savings
          - CreditCard
          - Security
          - Loan
          - Pocket
          - Membership
          - Bausparen
          items:
            allOf:
            - $ref: '#/components/schemas/AccountType'
            description: |-
              <strong>Type:</strong> AccountType<br/>
              If specified, then finAPI will import only those accounts whose type is one of the given types. Note that when the bank connection does not contain any accounts of the given types, the operation will fail with error code NO_ACCOUNTS_FOR_TYPE_LIST. If you leave this field unset, then all accounts will be imported.
          type: array
        accountReferences:
          description: |-
            <strong>Type:</strong> AccountReference<br/>
            List of accounts for which access is requested from the bank. It must only be passed if the bank interface has the DETAILED_CONSENT property set.
          items:
            $ref: '#/components/schemas/AccountReference'
          type: array
        multiStepAuthentication:
          allOf:
          - $ref: '#/components/schemas/MultiStepAuthenticationCallback'
          description: |-
            <strong>Type:</strong> MultiStepAuthenticationCallback<br/>
            Container for multi-step authentication data. Required when a previous service call initiated a multi-step authentication.
          type: object
        redirectUrl:
          description: Must only be passed when the used interface has the property
            REDIRECT_APPROACH. The user will be redirected to the given URL from the
            bank's website after completing the bank login and (possibly) the SCA.
          example: https://myapplication.com
          type: string
        maxDaysForDownload:
          default: 0
          description: This setting defines how much of an account's transactions
            history will be downloaded whenever a new account is imported. More technically,
            it depicts the number of days to download transactions for, starting from
            - and including - the date of the account import. For example, on an account
            import that happens today, the value 30 would instruct finAPI to download
            transactions from the past 30 days (including today). The minimum allowed
            value is 14, the maximum value is 3650. Also possible is the value 0 (which
            is the default value), in which case there will be no limit to the transactions
            download and finAPI will try to get all transactions that it can. <br/><br/>Note:<br/>&bull;
            There is no guarantee that finAPI will actually download transactions
            for the entire defined date range, as there may be limitations to the
            download range (set by the bank or by finAPI, e.g. see ClientConfiguration.transactionImportLimitation).
            <br/>&bull; This parameter only applies to transactions, not to security
            positions; For security accounts, finAPI will always download all security
            positions that it can. <br/>&bull; This setting is stored for each interface
            individually.<br/>&bull; After an interface has been connected with this
            setting, there is no way to change the setting for that interface afterwards.<br/>&bull;
            <b>If you do not limit the download range to a value less than 90 days,
            the bank is more likely to trigger a strong customer authentication request
            for the user when finAPI is attempting to download the transactions.</b>
          example: 365
          format: int32
          type: integer
      required:
      - bankConnectionId
      - interface
      type: object
    CreateDirectDebitParams:
      description: Container for direct debit creation parameters
      example:
        accountId: 1
        singleBooking: false
        directDebits:
        - sepaPurposeCode: OTHR
          counterpartAddress: 221b Baker St, London NW1 6XE
          amount: 99.99
          counterpartCountry: GB
          counterpartName: Max Mustermann
          purpose: Test Payment
          mandateId: "1"
          counterpartIban: DE13700800000061110500
          mandateDate: 2018-01-01
          endToEndId: "001100550526"
          counterpartBic: DRESDEFF700
          creditorId: DE02ABC01234567890
        - sepaPurposeCode: OTHR
          counterpartAddress: 221b Baker St, London NW1 6XE
          amount: 99.99
          counterpartCountry: GB
          counterpartName: Max Mustermann
          purpose: Test Payment
          mandateId: "1"
          counterpartIban: DE13700800000061110500
          mandateDate: 2018-01-01
          endToEndId: "001100550526"
          counterpartBic: DRESDEFF700
          creditorId: DE02ABC01234567890
        - sepaPurposeCode: OTHR
          counterpartAddress: 221b Baker St, London NW1 6XE
          amount: 99.99
          counterpartCountry: GB
          counterpartName: Max Mustermann
          purpose: Test Payment
          mandateId: "1"
          counterpartIban: DE13700800000061110500
          mandateDate: 2018-01-01
          endToEndId: "001100550526"
          counterpartBic: DRESDEFF700
          creditorId: DE02ABC01234567890
        - sepaPurposeCode: OTHR
          counterpartAddress: 221b Baker St, London NW1 6XE
          amount: 99.99
          counterpartCountry: GB
          counterpartName: Max Mustermann
          purpose: Test Payment
          mandateId: "1"
          counterpartIban: DE13700800000061110500
          mandateDate: 2018-01-01
          endToEndId: "001100550526"
          counterpartBic: DRESDEFF700
          creditorId: DE02ABC01234567890
        - sepaPurposeCode: OTHR
          counterpartAddress: 221b Baker St, London NW1 6XE
          amount: 99.99
          counterpartCountry: GB
          counterpartName: Max Mustermann
          purpose: Test Payment
          mandateId: "1"
          counterpartIban: DE13700800000061110500
          mandateDate: 2018-01-01
          endToEndId: "001100550526"
          counterpartBic: DRESDEFF700
          creditorId: DE02ABC01234567890
        executionDate: 2018-01-01
        directDebitType: B2B
        sequenceType: OOFF
      properties:
        singleBooking:
          default: false
          description: This field is only relevant when you pass multiple orders.
            It determines whether the orders should be processed by the bank as one
            collective booking (in case of 'false'), or as single bookings (in case
            of 'true'). Note that it is subject to the bank whether it will regard
            the field. Default value is 'false'.
          example: false
          type: boolean
        accountId:
          description: Identifier of the account that should be used for the direct
            debit.
          example: 1
          format: int64
          type: integer
        directDebitType:
          allOf:
          - $ref: '#/components/schemas/DirectDebitType'
          description: |-
            <strong>Type:</strong> DirectDebitType<br/>
            Type of the direct debit; either <code>BASIC</code> or <code>B2B</code> (Business-To-Business).
          example: B2B
        sequenceType:
          allOf:
          - $ref: '#/components/schemas/DirectDebitSequenceType'
          description: |-
            <strong>Type:</strong> DirectDebitSequenceType<br/>
            Sequence type of the direct debit. Possible values:<br/><br/>&bull; <code>OOFF</code> - means that this is a one-time direct debit order<br/>&bull; <code>FRST</code> - means that this is the first in a row of multiple direct debit orders<br/>&bull; <code>RCUR</code> - means that this is one (but not the first or final) within a row of multiple direct debit orders<br/>&bull; <code>FNAL</code> - means that this is the final in a row of multiple direct debit orders<br/><br/>
          example: OOFF
        directDebits:
          description: |-
            <strong>Type:</strong> DirectDebitOrderParams<br/>
            List of direct debit orders (may contain at most 15000 items). Please note that collective direct debit may not always be supported.
          items:
            $ref: '#/components/schemas/DirectDebitOrderParams'
          maxItems: 15000
          minItems: 1
          type: array
        executionDate:
          description: Execution date for the direct debit(s), in the format 'YYYY-MM-DD'.
            May not be in the past. If not specified, most banks will use the current
            date as the instructed date for execution.
          example: 2018-01-01
          type: string
      required:
      - accountId
      - directDebitType
      - directDebits
      - executionDate
      - sequenceType
      type: object
    CreateMoneyTransferParams:
      description: Container for money transfer creation parameters
      example:
        accountId: 1
        singleBooking: false
        iban: DE89370400440532013000
        executionDate: 2018-01-01
        moneyTransfers:
        - sepaPurposeCode: OTHR
          amount: 99.99
          counterpartName: Max Mustermann
          purpose: Test Payment
          counterpartIban: DE13700800000061110500
          endToEndId: "001100550526"
          counterpartBic: DRESDEFF700
        - sepaPurposeCode: OTHR
          amount: 99.99
          counterpartName: Max Mustermann
          purpose: Test Payment
          counterpartIban: DE13700800000061110500
          endToEndId: "001100550526"
          counterpartBic: DRESDEFF700
        - sepaPurposeCode: OTHR
          amount: 99.99
          counterpartName: Max Mustermann
          purpose: Test Payment
          counterpartIban: DE13700800000061110500
          endToEndId: "001100550526"
          counterpartBic: DRESDEFF700
        - sepaPurposeCode: OTHR
          amount: 99.99
          counterpartName: Max Mustermann
          purpose: Test Payment
          counterpartIban: DE13700800000061110500
          endToEndId: "001100550526"
          counterpartBic: DRESDEFF700
        - sepaPurposeCode: OTHR
          amount: 99.99
          counterpartName: Max Mustermann
          purpose: Test Payment
          counterpartIban: DE13700800000061110500
          endToEndId: "001100550526"
          counterpartBic: DRESDEFF700
        instantPayment: false
      properties:
        singleBooking:
          default: false
          description: This field is only relevant when you pass multiple orders.
            It determines whether the orders should be processed by the bank as one
            collective booking (in case of 'false'), or as single bookings (in case
            of 'true'). Note that it is subject to the bank whether it will regard
            the field. Default value is 'false'.
          example: false
          type: boolean
        accountId:
          description: Identifier of the account that should be used for the money
            transfer. If you want to do a standalone money transfer (finAPI Payment
            product, i.e. for an account that is not imported in finAPI) leave this
            field unset and instead use the field 'iban'.
          example: 1
          format: int64
          type: integer
        iban:
          description: IBAN of the account that should be used for the money transfer.
            Use this field only if you want to do a standalone money transfer (finAPI
            Payment product, i.e. for an account that is not imported in finAPI) otherwise,
            use the 'accountId' field and leave this field unset.
          example: DE89370400440532013000
          type: string
        executionDate:
          description: Execution date for the money transfer(s), in the format 'YYYY-MM-DD'.
            May not be in the past. For instant payments, it must be the current date.
            If not specified, most banks will use the current date as the instructed
            date for execution.
          example: 2018-01-01
          type: string
        moneyTransfers:
          description: |-
            <strong>Type:</strong> MoneyTransferOrderParams<br/>
            List of money transfer orders (may contain at most 15000 items). Please note that collective money transfer may not always be supported.
          items:
            $ref: '#/components/schemas/MoneyTransferOrderParams'
          maxItems: 15000
          minItems: 1
          type: array
        instantPayment:
          default: false
          description: Whether the order should be submitted to the bank as an instant
            SEPA order. Default value is 'false'.<br/><br/>NOTE:<br/>&bull; Instant
            payments can only be submitted if you are self-licensed (and not using
            the finAPI Web Form) OR via our Web Form from the endpoint <a href='?product=web_form_2.0#tag--Payment-Initiation-Services'
            target='_blank'>here</a>.<br/>&bull; Submitting an instant payment will
            work only with interfaces that support it, see BankInterface.paymentCapabilities.sepaInstantMoneyTransfer<br/>&bull;
            Instant payments work only for a single order, not for collective orders.<br/>&bull;
            The bank may charge a fee for instant payments, depending on the agreement
            between the user and the bank.<br/>&bull; The payment might get rejected
            if the source and/or target account doesn't support instant payments.
          example: false
          type: boolean
      required:
      - moneyTransfers
      type: object
    CreateStandingOrderParams:
      description: Container for standing order creation parameters
      example:
        amount: 99.99
        counterpartName: Max Mustermann
        purpose: Standing Order
        endDate: 2024-01-01
        dayOfExecution: 1
        counterpartIban: DE13700800000061110500
        endToEndId: "001100550526"
        frequency: MONTHLY
        accountId: 1
        sepaPurposeCode: OTHR
        iban: DE89370400440532013000
        currency: EUR
        startDate: 2023-01-01
      properties:
        accountId:
          description: Identifier of the account that should be used for the standing
            order. If you want to do a standalone standing order (i.e. for an account
            that is not imported in finAPI) leave this field unset and instead use
            the field 'iban'.
          example: 1
          format: int64
          type: integer
        iban:
          description: IBAN of the account that should be used for the standing order.
            Use this field only if you want to do a standalone standing order (i.e.
            for an account that is not imported in finAPI) otherwise, use the 'accountId'
            field and leave this field unset.
          example: DE89370400440532013000
          type: string
        counterpartName:
          description: 'Name of the counterpart. Note: Neither finAPI nor the involved
            bank servers are guaranteed to validate the counterpart name. Even if
            the name does not depict the actual registered account holder of the target
            account, the order might still be successful.'
          example: Max Mustermann
          type: string
        counterpartIban:
          description: IBAN of the counterpart's account.
          example: DE13700800000061110500
          type: string
        amount:
          description: The amount of the standing order. Must be a positive decimal
            number with at most two decimal places.
          example: 99.99
          type: number
        currency:
          allOf:
          - $ref: '#/components/schemas/Currency'
          description: |-
            <strong>Type:</strong> Currency<br/>
            The currency code of the 'amount'. To be provided in the ISO 4217 Alpha 3 format.
          example: EUR
        purpose:
          description: The purpose of the standing order.
          example: Standing Order
          type: string
        sepaPurposeCode:
          description: SEPA purpose code, according to ISO 20022, external codes set.<br/>Please
            note that the SEPA purpose code may be ignored by some banks.
          example: OTHR
          type: string
        endToEndId:
          description: End-To-End ID of the standing order
          example: "001100550526"
          type: string
        startDate:
          description: Start date of the standing order. Date must be in the future
            (at least tomorrow). To be provided in the format 'YYYY-MM-DD'.
          example: 2023-01-01
          type: string
        endDate:
          description: Termination date of the standing order. If provided, it must
            be after the 'startDate'. If not provided, then the standing order will
            have no termination. To be provided in the format 'YYYY-MM-DD'.
          example: 2024-01-01
          type: string
        frequency:
          allOf:
          - $ref: '#/components/schemas/StandingOrderFrequency'
          description: |-
            <strong>Type:</strong> StandingOrderFrequency<br/>
            The frequency of the standing order
          example: MONTHLY
        dayOfExecution:
          description: 'Desired day of execution. If not provided, it will be derived
            from the ''startDate''. Use ''31'' for ultimo. Allowed values: 1-31.'
          example: 1
          format: int32
          type: integer
      required:
      - amount
      - counterpartIban
      - counterpartName
      - currency
      - frequency
      - startDate
      type: object
    Currency:
      enum:
      - AED
      - AFN
      - ALL
      - AMD
      - ANG
      - AOA
      - ARS
      - AUD
      - AWG
      - AZN
      - BAM
      - BBD
      - BDT
      - BGN
      - BHD
      - BIF
      - BMD
      - BND
      - BOB
      - BOV
      - BRL
      - BSD
      - BTN
      - BWP
      - BYN
      - BZD
      - CAD
      - CDF
      - CHE
      - CHF
      - CHN
      - CHW
      - CLF
      - CLP
      - CNY
      - COP
      - COU
      - CRC
      - CUC
      - CUP
      - CVE
      - CZK
      - DJF
      - DKK
      - DOP
      - DZD
      - EGP
      - ERN
      - ETB
      - EUR
      - FJD
      - FKP
      - GBP
      - GEL
      - GGP
      - GHS
      - GIP
      - GMD
      - GNF
      - GTQ
      - GYD
      - HKD
      - HNL
      - HRK
      - HTG
      - HUF
      - IDR
      - ILS
      - IMP
      - INR
      - IQD
      - IRR
      - ISK
      - JEP
      - JMD
      - JOD
      - JPY
      - KES
      - KGS
      - KHR
      - KID
      - KMF
      - KPW
      - KRW
      - KWD
      - KYD
      - KZT
      - LAK
      - LBP
      - LKR
      - LRD
      - LSL
      - LYD
      - MAD
      - MDL
      - MGA
      - MKD
      - MMK
      - MNT
      - MOP
      - MRU
      - MUR
      - MVR
      - MWK
      - MXN
      - MXV
      - MYR
      - MZN
      - NAD
      - NGN
      - NIO
      - NIS
      - NOK
      - NPR
      - NTD
      - NZD
      - OMR
      - PAB
      - PEN
      - PGK
      - PHP
      - PKR
      - PLN
      - PRB
      - PYG
      - QAR
      - RMB
      - RON
      - RSD
      - RUB
      - RWF
      - SAR
      - SBD
      - SCR
      - SDG
      - SEK
      - SGD
      - SHP
      - SLL
      - SLS
      - SOS
      - SRD
      - SSP
      - STN
      - SVC
      - SYP
      - SZL
      - THB
      - TJS
      - TMT
      - TND
      - TOP
      - TRY
      - TTD
      - TVD
      - TWD
      - TZS
      - UAH
      - UGX
      - USD
      - USN
      - UYI
      - UYU
      - UYW
      - UZS
      - VEF
      - VES
      - VND
      - VUV
      - WST
      - XAF
      - XAG
      - XAU
      - XBA
      - XBB
      - XBC
      - XBD
      - XCD
      - XDR
      - XOF
      - XPD
      - XPF
      - XPT
      - XSU
      - XTS
      - XUA
      - XXX
      - YER
      - ZAR
      - ZMW
      - ZWB
      - ZWL
      type: string
    DailyBalance:
      description: Balance data for a single day
      example:
        date: 2018-01-01 00:00:00.000
        income: 99.99
        spending: 99.99
        balance: 999.0
        internalAdjustingEntries: -99.99
        transactions:
        - 1
        - 2
        - 3
      properties:
        date:
          description: Date in the format 'YYYY-MM-DD HH:MM:SS.SSS' (german time).
          example: 2018-01-01 00:00:00.000
          type: string
        balance:
          description: Calculated balance at the end of day, across all regarded accounts.
            Note that the balance may not always add up to the income/spending of
            the day. This happens when a bank reports a balance that includes transactions
            which the bank didn't (yet) deliver. In any case, it is recommended to
            rely on the balance rather than on calculations based on the income/spending.
          example: 999.0
          type: number
        income:
          description: The sum of income of the given day, based on the 'transactions',
            across all regarded accounts.
          example: 99.99
          type: number
        spending:
          description: The sum of spending of the given day, based on the 'transactions',
            across all regarded accounts. Note that this is an absolute (i.e. positive)
            value.
          example: 99.99
          type: number
        internalAdjustingEntries:
          description: Sometimes finAPI may detect deviations between the bank reported
            account balance and the set of transactions received from the bank. This
            is an expected behaviour when an account has not been updated for a while,
            as banks provide only a limited history of transactions. In such cases,
            finAPI adds an adjusting entry (see the field Transaction.isAdjustingEntry),
            which will be contained in the 'transactions' list, just as any other
            transaction.<br/><br/>However, if an account was regularly updated and
            gaps in the transaction history are not expected, then finAPI will fix
            such deviations by adding an internal adjusting entry. These internal
            entries are not visible in the API and will not be contained in the 'transactions'
            list, and thus also not regarded for the calculations of 'income' and
            'spending'. They are however regarded for the calculation of the 'balance'.<br/><br/>As
            long as you don't do your own balance calculations, you do not need to
            regard this field here; The 'balance' will always be correct. But if you
            do your own calculations, then you should not only regard the 'income'
            and 'spending', but this field as well.<br/><br/>Note that unlike the
            'income' and 'spending', this field can have a positive or negative value.
          example: -99.99
          type: number
        transactions:
          description: Identifiers of the transactions for the given day
          example:
          - 1
          - 2
          - 3
          items:
            format: int64
            type: integer
          type: array
      required:
      - balance
      - date
      - income
      - internalAdjustingEntries
      - spending
      - transactions
      type: object
    DailyBalanceList:
      description: Contains a list of daily balances
      example:
        latestCommonBalanceTimestamp: 2018-01-01 00:00:00.000
        paging: '{}'
        dailyBalances:
        - date: 2018-01-01 00:00:00.000
          income: 99.99
          spending: 99.99
          balance: 999.0
          internalAdjustingEntries: -99.99
          transactions:
          - 1
          - 2
          - 3
        - date: 2018-01-01 00:00:00.000
          income: 99.99
          spending: 99.99
          balance: 999.0
          internalAdjustingEntries: -99.99
          transactions:
          - 1
          - 2
          - 3
      properties:
        latestCommonBalanceTimestamp:
          description: 'The latestCommonBalanceTimestamp is the latest timestamp at
            which all regarded  accounts have been up to date. Only balances with
            their date being smaller than the latestCommonBalanceTimestamp are reliable.
            Example: A user has two accounts: A (last update today, so balance from
            today) and B (last update yesterday, so balance from yesterday). The service
            /accounts/dailyBalances will return a balance for yesterday and for today,
            with the info latestCommonBalanceTimestamp=yesterday. Since account B
            might have received transactions this morning, today''s balance might
            be wrong. So either make sure that all regarded accounts are up to date
            before calling this service, or use the results carefully in combination
            with the latestCommonBalanceTimestamp. The format is ''YYYY-MM-DD HH:MM:SS.SSS''
            (german time).'
          example: 2018-01-01 00:00:00.000
          nullable: true
          type: string
        dailyBalances:
          description: |-
            <strong>Type:</strong> DailyBalance<br/>
            List of daily balances for the requested period and account(s)
          items:
            $ref: '#/components/schemas/DailyBalance'
          type: array
        paging:
          allOf:
          - $ref: '#/components/schemas/Paging'
          description: |-
            <strong>Type:</strong> Paging<br/>
            Information for pagination
          type: object
      required:
      - dailyBalances
      - latestCommonBalanceTimestamp
      - paging
      type: object
    DeleteConsent:
      description: Container for a result of the consent deleting
      example:
        remote: DELETED
        local: DELETED
      properties:
        local:
          allOf:
          - $ref: '#/components/schemas/DeleteConsentResult'
          description: |-
            <strong>Type:</strong> DeleteConsentResult<br/>
            Result of consent deletion in the finAPI database (local):<br/><br/>&bull; <code>DELETED</code> - if there was a stored consent and it was deleted.<br/>&bull; <code>NOT_EXIST</code> - if there was no stored consent.<br/>
          example: DELETED
        remote:
          allOf:
          - $ref: '#/components/schemas/DeleteConsentResult'
          description: |-
            <strong>Type:</strong> DeleteConsentResult<br/>
            Result of consent deletion on the bank's side (remote):<br/><br/>&bull; <code>DELETED</code> - if the consent was successfully deleted on the bank side.<br/>&bull; <code>NOT_SUPPORTED</code> - if the bank doesn't support consent deletion.<br/>&bull; <code>NOT_EXIST</code> - if either there was no remote consent, or there was no local consent (making it impossible to identify any remote consent).<br/>&bull; <code>NOT_DELETED</code> - if the consent couldn't get deleted on the bank side.<br/>
          example: DELETED
      required:
      - local
      - remote
      type: object
    DeleteConsentResult:
      enum:
      - DELETED
      - NOT_EXIST
      - NOT_SUPPORTED
      - NOT_DELETED
      type: string
    DirectDebitOrderParams:
      description: Parameters for a direct debit order
      example:
        sepaPurposeCode: OTHR
        counterpartAddress: 221b Baker St, London NW1 6XE
        amount: 99.99
        counterpartCountry: GB
        counterpartName: Max Mustermann
        purpose: Test Payment
        mandateId: "1"
        counterpartIban: DE13700800000061110500
        mandateDate: 2018-01-01
        endToEndId: "001100550526"
        counterpartBic: DRESDEFF700
        creditorId: DE02ABC01234567890
      properties:
        counterpartName:
          description: 'Name of the counterpart. Note: Neither finAPI nor the involved
            bank servers are guaranteed to validate the counterpart name. Even if
            the name does not depict the actual registered account holder of the target
            account, the order might still be successful.'
          example: Max Mustermann
          type: string
        counterpartIban:
          description: IBAN of the counterpart's account.
          example: DE13700800000061110500
          type: string
        counterpartBic:
          description: BIC of the counterpart's account. Only required when there
            is no 'IBAN_ONLY'-capability in the respective account/interface combination
            that is to be used when submitting the payment.
          example: DRESDEFF700
          type: string
        amount:
          description: The amount of the payment. Must be a positive decimal number
            with at most two decimal places. When debiting money using the FINTS_SERVER
            or WEB_SCRAPER interface, the currency is always EUR.
          example: 99.99
          type: number
        purpose:
          description: The purpose of the transfer transaction
          example: Test Payment
          type: string
        sepaPurposeCode:
          description: SEPA purpose code, according to ISO 20022, external codes set.<br/>Please
            note that the SEPA purpose code may be ignored by some banks.
          example: OTHR
          type: string
        endToEndId:
          description: End-To-End ID for the transfer transaction
          example: "001100550526"
          type: string
        mandateId:
          description: Mandate ID that this direct debit order is based on.
          example: "1"
          type: string
        mandateDate:
          description: Date of the mandate that this direct debit order is based on,
            in the format 'YYYY-MM-DD'
          example: 2018-01-01
          type: string
        creditorId:
          description: Creditor ID of the source account's holder
          example: DE02ABC01234567890
          type: string
        counterpartAddress:
          description: The postal address of the debtor. This should be defined for
            direct debits created for debtors outside of the european union.
          example: 221b Baker St, London NW1 6XE
          type: string
        counterpartCountry:
          allOf:
          - $ref: '#/components/schemas/ISO3166Alpha2Codes'
          description: |-
            <strong>Type:</strong> ISO3166Alpha2Codes<br/>
            The ISO 3166 ALPHA-2 country code of the debtor’s address. Examples: 'GB' for the United Kingdom or 'CH' for Switzerland. This should be defined for direct debits created for debtors outside of the european union.
          example: GB
      required:
      - amount
      - counterpartIban
      - counterpartName
      - creditorId
      - mandateDate
      - mandateId
      type: object
    DirectDebitOrderingResponse:
      description: Bank server's response to a direct debit order request
      example:
        warnMessage: Es liegen Warnungen vor.
        tanListNumber: "001"
        photoTanData: PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iaXNvLTg4NTktMSI/Pgo8IURPQ1RZUEUgc3ZnIFBVQkxJQyAiLS8vVzNDLy9EVEQgU1ZHIDEuMS8vRU4iICJodHRwOi8vd3d3LnczLm9yZy9HcmFwaGljcy9TVkcvMS4xL0RURC9zdmcxMS5kdGQiPgo8c3ZnIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHZlcnNpb249IjEuMSIgdmlld0JveD0iMCAwIDIxMi43NTUgMjEyLjc1NSIgZW5hYmxlLWJhY2tncm91bmQ9Im5ldyAwIDAgMjEyLjc1NSAyMTIuNzU1IiB3aWR0aD0iMTZweCIgaGVpZ2h0PSIxNnB4Ij4KICA8Zz4KICAgIDxwYXRoIGQ9Ik0xMDYuMzc3LDBDNDcuNzIxLDAsMCw0Ny43MjEsMCwxMDYuMzc3czQ3LjcyMSwxMDYuMzc3LDEwNi4zNzcsMTA2LjM3N3MxMDYuMzc3LTQ3LjcyMSwxMDYuMzc3LTEwNi4zNzcgICBTMTY1LjAzNCwwLDEwNi4zNzcsMHogTTEwNi4zNzcsMTk4Ljc1NUM1NS40NCwxOTguNzU1LDE0LDE1Ny4zMTQsMTQsMTA2LjM3N1M1NS40NCwxNCwxMDYuMzc3LDE0czkyLjM3Nyw0MS40NCw5Mi4zNzcsOTIuMzc3ICAgUzE1Ny4zMTQsMTk4Ljc1NSwxMDYuMzc3LDE5OC43NTV6IiBmaWxsPSIjMDAwMDAwIi8+CiAgICA8cGF0aCBkPSJtMTEzLjM3NywxMDAuMDk2di0zOS43NDRjMy45NjEsMS40NzEgNy40MTcsNC4xNyA5LjgyLDcuODIgMi4xMjcsMy4yMjkgNi40NjgsNC4xMjMgOS42OTYsMS45OTcgMy4yMjktMi4xMjYgNC4xMjMtNi40NjcgMS45OTYtOS42OTYtNS4wMjktNy42MzYtMTIuNzc4LTEyLjgyLTIxLjUxMi0xNC42NDd2LTExLjEyYzAtMy44NjYtMy4xMzQtNy03LTdzLTcsMy4xMzQtNyw3djExLjA5OWMtMTUuNDkzLDMuMjMtMjcuMTY4LDE2Ljk4OS0yNy4xNjgsMzMuNDI2IDAsMTYuNDM3IDExLjY3NiwzMC4xOTggMjcuMTY4LDMzLjQyOHYzOS43NDRjLTMuOTYxLTEuNDcxLTcuNDE3LTQuMTctOS44Mi03LjgyLTIuMTI3LTMuMjI5LTYuNDY4LTQuMTI0LTkuNjk2LTEuOTk3LTMuMjI5LDIuMTI2LTQuMTIzLDYuNDY3LTEuOTk2LDkuNjk2IDUuMDI5LDcuNjM2IDEyLjc3OCwxMi44MiAyMS41MTIsMTQuNjQ3djExLjExOWMwLDMuODY2IDMuMTM0LDcgNyw3czctMy4xMzQgNy03di0xMS4wOThjMTUuNDkzLTMuMjMgMjcuMTY4LTE2Ljk4OSAyNy4xNjgtMzMuNDI2LTIuODQyMTdlLTE0LTE2LjQzNy0xMS42NzUtMzAuMTk4LTI3LjE2OC0zMy40Mjh6bS0yNy4xNjgtMjAuODY1YzAtOC42NTMgNS40OTQtMTYuMDI3IDEzLjE2OC0xOC44NzR2MzcuNzQ4Yy03LjY3NC0yLjg0Ny0xMy4xNjgtMTAuMjIxLTEzLjE2OC0xOC44NzR6bTI3LjE2OCw3My4xNjZ2LTM3Ljc0OGM3LjY3NCwyLjg0NyAxMy4xNjgsMTAuMjIxIDEzLjE2OCwxOC44NzRzLTUuNDkzLDE2LjAyNy0xMy4xNjgsMTguODc0eiIgZmlsbD0iIzAwMDAwMCIvPgogIDwvZz4KPC9zdmc+Cg==
        paymentId: 1
        photoTanMimeType: image/svg+xml
        answerFieldLabel: TAN-Nummer
        opticalData: 11048813833205002812775114302C30315D
        successMessage: Auftrag ausgeführt.
        challengeMessage: Bitte geben Sie die TAN ein, die Sie per SMS erhalten.
      properties:
        successMessage:
          description: Technical message from the bank server, confirming the success
            of the request. Typically, you would not want to present this message
            to the user. Note that this field may not be set. However if it is not
            set, it does not necessarily mean that there was an error in processing
            the request.
          example: Auftrag ausgeführt.
          nullable: true
          type: string
        warnMessage:
          description: In some cases, a bank server may accept the requested order,
            but return a warn message. This message may be of technical nature, but
            could also be of interest to the user.
          example: Es liegen Warnungen vor.
          nullable: true
          type: string
        paymentId:
          description: Payment identifier. Can be used to retrieve the status of the
            payment (see 'Get payments' service).
          example: 1
          format: int64
          type: integer
        challengeMessage:
          description: Message from the bank server containing information or instructions
            on how to retrieve the TAN that is needed to execute the requested order.
            This message should be presented to the user. Note that some bank servers
            may limit the message to just the most crucial information, e.g. the message
            may contain just a single number that depicts the target TAN number on
            a user's TAN list. You may want to parse the challenge message for such
            cases and extend it with more detailed information before showing it to
            the user.
          example: Bitte geben Sie die TAN ein, die Sie per SMS erhalten.
          nullable: true
          type: string
        answerFieldLabel:
          description: Suggestion from the bank server on how you can label your input
            field where the user must enter his TAN. A typical value that many bank
            servers give is 'TAN-Nummer'.
          example: TAN-Nummer
          nullable: true
          type: string
        tanListNumber:
          description: In case that the bank server has instructed the user to look
            up a TAN from a TAN list, this field may contain the identification number
            of the TAN list. However in most cases, this field is only set (i.e. not
            null) when the user has multiple active TAN lists.
          example: "001"
          nullable: true
          type: string
        opticalData:
          description: In case that the bank server has instructed the user to scan
            a flicker code, then this field will contain the raw data for the flicker
            animation as a BASE-64 string. Otherwise, this field will be not set (i.e.
            null). For more information on how to process the flicker code data, please
            refer to <a href='https://documentation.finapi.io/access/Flicker-Code-Template.2807824454.html'
            target='_blank'>this</a> article.
          example: 11048813833205002812775114302C30315D
          nullable: true
          type: string
        photoTanMimeType:
          description: 'In case that the ''photoTanData'' field is set (i.e. not null),
            this field contains the MIME type to use for interpreting the photo data
            (e.g.: ''image/png'')'
          example: image/svg+xml
          nullable: true
          type: string
        photoTanData:
          description: In case that the bank server has instructed the user to scan
            a photo (or more generally speaking, any kind of QR-code-like data), then
            this field will contain the raw data of the photo as a BASE-64 string.
            Otherwise, this field will be not set (i.e. null).
          example: PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iaXNvLTg4NTktMSI/Pgo8IURPQ1RZUEUgc3ZnIFBVQkxJQyAiLS8vVzNDLy9EVEQgU1ZHIDEuMS8vRU4iICJodHRwOi8vd3d3LnczLm9yZy9HcmFwaGljcy9TVkcvMS4xL0RURC9zdmcxMS5kdGQiPgo8c3ZnIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHZlcnNpb249IjEuMSIgdmlld0JveD0iMCAwIDIxMi43NTUgMjEyLjc1NSIgZW5hYmxlLWJhY2tncm91bmQ9Im5ldyAwIDAgMjEyLjc1NSAyMTIuNzU1IiB3aWR0aD0iMTZweCIgaGVpZ2h0PSIxNnB4Ij4KICA8Zz4KICAgIDxwYXRoIGQ9Ik0xMDYuMzc3LDBDNDcuNzIxLDAsMCw0Ny43MjEsMCwxMDYuMzc3czQ3LjcyMSwxMDYuMzc3LDEwNi4zNzcsMTA2LjM3N3MxMDYuMzc3LTQ3LjcyMSwxMDYuMzc3LTEwNi4zNzcgICBTMTY1LjAzNCwwLDEwNi4zNzcsMHogTTEwNi4zNzcsMTk4Ljc1NUM1NS40NCwxOTguNzU1LDE0LDE1Ny4zMTQsMTQsMTA2LjM3N1M1NS40NCwxNCwxMDYuMzc3LDE0czkyLjM3Nyw0MS40NCw5Mi4zNzcsOTIuMzc3ICAgUzE1Ny4zMTQsMTk4Ljc1NSwxMDYuMzc3LDE5OC43NTV6IiBmaWxsPSIjMDAwMDAwIi8+CiAgICA8cGF0aCBkPSJtMTEzLjM3NywxMDAuMDk2di0zOS43NDRjMy45NjEsMS40NzEgNy40MTcsNC4xNyA5LjgyLDcuODIgMi4xMjcsMy4yMjkgNi40NjgsNC4xMjMgOS42OTYsMS45OTcgMy4yMjktMi4xMjYgNC4xMjMtNi40NjcgMS45OTYtOS42OTYtNS4wMjktNy42MzYtMTIuNzc4LTEyLjgyLTIxLjUxMi0xNC42NDd2LTExLjEyYzAtMy44NjYtMy4xMzQtNy03LTdzLTcsMy4xMzQtNyw3djExLjA5OWMtMTUuNDkzLDMuMjMtMjcuMTY4LDE2Ljk4OS0yNy4xNjgsMzMuNDI2IDAsMTYuNDM3IDExLjY3NiwzMC4xOTggMjcuMTY4LDMzLjQyOHYzOS43NDRjLTMuOTYxLTEuNDcxLTcuNDE3LTQuMTctOS44Mi03LjgyLTIuMTI3LTMuMjI5LTYuNDY4LTQuMTI0LTkuNjk2LTEuOTk3LTMuMjI5LDIuMTI2LTQuMTIzLDYuNDY3LTEuOTk2LDkuNjk2IDUuMDI5LDcuNjM2IDEyLjc3OCwxMi44MiAyMS41MTIsMTQuNjQ3djExLjExOWMwLDMuODY2IDMuMTM0LDcgNyw3czctMy4xMzQgNy03di0xMS4wOThjMTUuNDkzLTMuMjMgMjcuMTY4LTE2Ljk4OSAyNy4xNjgtMzMuNDI2LTIuODQyMTdlLTE0LTE2LjQzNy0xMS42NzUtMzAuMTk4LTI3LjE2OC0zMy40Mjh6bS0yNy4xNjgtMjAuODY1YzAtOC42NTMgNS40OTQtMTYuMDI3IDEzLjE2OC0xOC44NzR2MzcuNzQ4Yy03LjY3NC0yLjg0Ny0xMy4xNjgtMTAuMjIxLTEzLjE2OC0xOC44NzR6bTI3LjE2OCw3My4xNjZ2LTM3Ljc0OGM3LjY3NCwyLjg0NyAxMy4xNjgsMTAuMjIxIDEzLjE2OCwxOC44NzRzLTUuNDkzLDE2LjAyNy0xMy4xNjgsMTguODc0eiIgZmlsbD0iIzAwMDAwMCIvPgogIDwvZz4KPC9zdmc+Cg==
          nullable: true
          type: string
      required:
      - answerFieldLabel
      - challengeMessage
      - opticalData
      - paymentId
      - photoTanData
      - photoTanMimeType
      - successMessage
      - tanListNumber
      - warnMessage
      type: object
    DirectDebitSequenceType:
      enum:
      - OOFF
      - FRST
      - RCUR
      - FNAL
      type: string
    DirectDebitType:
      enum:
      - B2B
      - BASIC
      type: string
    EditBankConnectionParams:
      description: Container for bank connection edit params
      example:
        name: Bank Connection
        interface: FINTS_SERVER
        bankingPin: "123456"
        loginCredentials:
        - label: Onlinebanking-ID
          value: max.mustermann
        - label: Onlinebanking-ID
          value: max.mustermann
        defaultTwoStepProcedureId: "955"
        bankingUserId: "123456"
        bankingCustomerId: "123456"
      properties:
        name:
          description: New name for the bank connection. Maximum length is 64. If
            you do not want to change the current name let this field remain unset.
            If you want to clear the current name, set the field's value to an empty
            string ("").<br/><br/><strong>NOTE:</strong> If you are a Web Form 2.0
            customer, and would like to update the name of your bank connection, please
            use the API parameter.
          example: Bank Connection
          pattern: '[A-Za-z0-9¡-ʯ &\(\)\{\}\[\]\.:,;\?!\+\-_\$@#~`\^€]*'
          type: string
        bankingUserId:
          description: 'THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
            to the ''loginCredentials'' and ''interface'' fields instead. If any of
            those two fields is used, then the value of this field will be ignored.<br/><br/>New
            online banking user ID. If you do not want to change the current user
            ID let this field remain unset. In case you need to use finAPI''s Web
            Form to let the user update the field, just set the field to any value,
            so that the service recognizes that you wish to use the Web Form flow.
            Note that you cannot clear the current user ID, i.e. a bank connection
            must always have a user ID (except for when it is a ''demo connection'').
            Max length: 170.'
          example: "123456"
          type: string
        bankingCustomerId:
          description: 'THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
            to the ''loginCredentials'' and ''interface'' fields instead. If any of
            those two fields is used, then the value of this field will be ignored.<br/><br/>New
            online banking customer ID. If you do not want to change the current customer
            ID let this field remain unset. In case you need to use finAPI''s Web
            Form to let the user update the field, just set the field to non-empty
            value, so that the service recognizes that you wish to use the Web Form
            flow. If you want to clear the current customer ID, set the field''s value
            to an empty string (""). Max length: 170.'
          example: "123456"
          type: string
        bankingPin:
          description: 'THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
            to the ''loginCredentials'' and ''interface'' fields instead. If any of
            those two fields is used, then the value of this field will be ignored.<br/><br/>New
            online banking PIN. If you do not want to change the current PIN let this
            field remain unset. In case you need to use finAPI''s Web Form to let
            the user update the field, just set the field to non-empty value, so that
            the service recognizes that you wish to use the Web Form flow. If you
            want to clear the current PIN, set the field''s value to an empty string
            ("").<br/><br/>Any symbols are allowed. Max length: 170.'
          example: "123456"
          type: string
        interface:
          allOf:
          - $ref: '#/components/schemas/BankingInterface'
          description: |-
            <strong>Type:</strong> BankingInterface<br/>
            The interface for which you want to edit data. Must be given when you pass 'loginCredentials' and/or a 'defaultTwoStepProcedureId'.
          example: FINTS_SERVER
        loginCredentials:
          description: |-
            <strong>Type:</strong> LoginCredential<br/>
            Set of login credentials that you want to edit. Must be passed in combination with the 'interface' field. The labels that you pass must match with the login credential labels that the respective interface defines. If you want to clear the stored value for a credential, you can pass an empty string ("") as value.In case you need to use finAPI's Web Form to let the user update the login credentials, send all fields the user wishes to update with a non-empty value.In case all fields contain an empty string (""), no Web Form will be generated. Note that any change in the credentials will automatically remove the saved consent data associated with those credentials.<br/><br/><strong>NOTE:</strong> If you are a  Web Form 2.0 customer, and would like to allow your end-users to change the credentials they have stored in our system, then please navigate <a target="_blank" href='?product=web_form_2.0#post-/api/tasks/backgroundUpdate' target='_blank'>here</a> to implement the same functionality.
          items:
            $ref: '#/components/schemas/LoginCredential'
          type: array
        defaultTwoStepProcedureId:
          description: 'NOTE: In the future, this field will work only in combination
            with the ''interface'' field.<br/><br/>New default two-step-procedure.
            Must match the ''procedureId'' of one of the procedures that are listed
            in the bank connection. If you do not want to change this field let it
            remain unset. If you want to clear the current default two-step-procedure,
            set the field''s value to an empty string ("").<br/><br/><strong>NOTE:</strong>
            If you are a Web Form 2.0 customer and would like to allow your end users
            to update their preferred TAN procedure that is stored in our system,
            then please navigate <a target="_blank" href=''?product=web_form_2.0#post-/api/tasks/backgroundUpdate''>here</a>
            to implement the same functionality.'
          example: "955"
          type: string
      type: object
    EditCategoryParams:
      description: Container for category edit params
      example:
        name: Sport & Fitness
      properties:
        name:
          description: New name of the category. Maximum length is 128.
          example: Sport & Fitness
          pattern: '[A-Za-z0-9¡-ʯ &\(\)\{\}\[\]\.:,;\?!\+\-_\$@#~`\^€]*'
          type: string
      required:
      - name
      type: object
    EditTppCredentialParams:
      description: A container for editing TPP client credentials data
      example:
        tppClientId: a23312
        validFromDate: 2019-04-23
        label: Demo bank TPP credentials
        tppClientSecret: followTheWhiteRabbit
        validUntilDate: 2022-04-23
        tppAuthenticationGroupId: 1
        tppApiKey: dontFollowTheWhiteRabbit
        tppName: finAPI
      properties:
        tppAuthenticationGroupId:
          description: The TPP Authentication Group Id for which the credentials can
            be used
          example: 1
          format: int64
          type: integer
        label:
          description: Label for credentials
          example: Demo bank TPP credentials
          type: string
        tppClientId:
          description: ID of the TPP accessing the ASPSP API, as provided by the ASPSP
            as the result of registration
          example: a23312
          type: string
        tppClientSecret:
          description: Secret of the TPP accessing the ASPSP API, as provided by the
            ASPSP as the result of registration
          example: followTheWhiteRabbit
          type: string
        tppApiKey:
          description: API Key provided by ASPSP  as the result of registration
          example: dontFollowTheWhiteRabbit
          type: string
        tppName:
          description: TPP name
          example: finAPI
          type: string
        validFromDate:
          description: Credentials "valid from" date in the format 'YYYY-MM-DD'. Default
            is today's date
          example: 2019-04-23
          type: string
        validUntilDate:
          description: Credentials "valid until" date in the format 'YYYY-MM-DD'.
            Default is null which means "indefinite" (no limit)
          example: 2022-04-23
          type: string
      type: object
    ErrorCode:
      enum:
      - ADDITIONAL_AUTHENTICATION_REQUIRED
      - BAD_REQUEST
      - BANK_SERVER_REJECTION
      - COLLECTIVE_MONEY_TRANSFER_NOT_SUPPORTED
      - ENTITY_EXISTS
      - FORBIDDEN
      - IBAN_ONLY_DIRECT_DEBIT_NOT_SUPPORTED
      - IBAN_ONLY_MONEY_TRANSFER_NOT_SUPPORTED
      - ILLEGAL_ENTITY_STATE
      - ILLEGAL_FIELD_VALUE
      - ILLEGAL_PAGE_SIZE
      - INVALID_CONSENT
      - INVALID_FILTER_OPTIONS
      - INVALID_TOKEN
      - INVALID_TWO_STEP_PROCEDURE
      - LOCKED
      - LOGIN_FIELDS_MISMATCH
      - METHOD_NOT_ALLOWED
      - MISSING_CREDENTIALS
      - MISSING_FIELD
      - MISSING_TWO_STEP_PROCEDURE
      - NO_ACCOUNTS_FOR_TYPE_LIST
      - NO_CERTIFICATE
      - NO_EXISTING_CHALLENGE
      - NO_TPP_CLIENT_CREDENTIALS
      - NO_PSU_METADATA
      - TOO_MANY_IDS
      - UNAUTHORIZED_ACCESS
      - UNEXPECTED_ERROR
      - UNKNOWN_ENTITY
      - UNSUPPORTED_BANK
      - UNSUPPORTED_FEATURE
      - UNSUPPORTED_MEDIA_TYPE
      - UNSUPPORTED_ORDER
      - USER_ALREADY_VERIFIED
      - USER_NOT_VERIFIED
      - WEB_FORM_ABORTED
      - WEB_FORM_REQUIRED
      type: string
    ErrorDetails:
      description: Error details
      properties:
        message:
          description: Error message
          example: An unexpected error occurred
          nullable: true
          type: string
        code:
          allOf:
          - $ref: '#/components/schemas/ErrorCode'
          description: |-
            <strong>Type:</strong> ErrorCode<br/>
            Error code. See the documentation of the individual services for details about what values may be returned.
          example: UNEXPECTED_ERROR
        type:
          allOf:
          - $ref: '#/components/schemas/ErrorType'
          description: |-
            <strong>Type:</strong> ErrorType<br/>
            Error type. BUSINESS errors depict error messages in the language of the bank (or the preferred language) for the user, e.g. from a bank server. TECHNICAL errors are meant to be read by developers and depict internal errors.
          example: TECHNICAL
        multiStepAuthentication:
          allOf:
          - $ref: '#/components/schemas/MultiStepAuthenticationChallenge'
          description: |-
            <strong>Type:</strong> MultiStepAuthenticationChallenge<br/>
            This field is set when a multi-step authentication is required, i.e. when you need to repeat the original service call and provide additional data. The field contains information about what additional data is required.
          nullable: true
          type: object
      required:
      - code
      - message
      - multiStepAuthentication
      - type
      type: object
    ErrorMessage:
      description: Response type when a service call was not successful. Contains
        details about the error(s) that occurred.
      properties:
        errors:
          description: |-
            <strong>Type:</strong> ErrorDetails<br/>
            List of errors
          items:
            $ref: '#/components/schemas/ErrorDetails'
          type: array
        date:
          description: Server date of when the error(s) occurred, in the format YYYY-MM-DD
            HH:MM:SS.SSS
          example: 2018-01-01 00:00:00.000
          type: string
        requestId:
          description: THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
            to the response header 'X-Request-Id' instead.<br/><br/>ID of the request
            that caused this error. This is either what you have passed for the header
            'X-Request-Id', or an auto-generated ID in case you didn't pass any value
            for that header.<br/><br/>
          example: request-id-01234567890123456789
          type: string
        endpoint:
          description: The service endpoint that was called
          example: https://finapi.localhost
          type: string
        authContext:
          description: Information about the authorization context of the service
            call
          example: 1/2
          type: string
        bank:
          description: BLZ and name (in format "<BLZ> - <name>") of a bank that was
            used for the original request
          example: "00000000"
          nullable: true
          type: string
      required:
      - authContext
      - bank
      - date
      - endpoint
      - errors
      - requestId
      type: object
    ErrorType:
      enum:
      - BUSINESS
      - TECHNICAL
      type: string
    ExecutePasswordChangeParams:
      description: Execute password change parameters
      example:
        password: password
        passwordChangeToken: 45a611d8-8a19-4a02-8726-a24b6a691ce9
        userId: username
      properties:
        userId:
          description: User identifier
          example: username
          pattern: '[a-zA-Z0-9\-_\.\+@]*'
          type: string
        password:
          description: User's new password. Minimum length is 6, and maximum length
            is 128.
          example: password
          type: string
        passwordChangeToken:
          description: Decrypted password change token (the token that you received
            from the /users/requestPasswordChange service, decrypted with your data
            decryption key)
          example: 45a611d8-8a19-4a02-8726-a24b6a691ce9
          pattern: '[0-9a-f\-]*'
          type: string
      required:
      - password
      - passwordChangeToken
      - userId
      type: object
    ExecuteSepaDirectDebitParams:
      description: Container for parameters for the execution of a submitted SEPA
        direct debit order
      example:
        accountId: 1
        bankingTan: "0123"
      properties:
        accountId:
          description: Identifier of the bank account that you want to transfer money
            to
          example: 1
          format: int64
          type: integer
        bankingTan:
          description: Banking TAN that the user received from the bank for executing
            the direct debit order. The field is required if you are licensed to perform
            SEPA direct debits yourself. Otherwise, i.e. when finAPI's Web Form flow
            is required, the Web Form will deal with executing the service itself.
          example: "0123"
          type: string
      required:
      - accountId
      type: object
    ExecuteSepaMoneyTransferParams:
      description: Container for parameters for the execution of a submitted SEPA
        money transfer order
      example:
        accountId: 1
        bankingTan: "098765"
      properties:
        accountId:
          description: Identifier of the bank account that you want to transfer money
            from
          example: 1
          format: int64
          type: integer
        bankingTan:
          description: Banking TAN that the user received from the bank for executing
            the money transfer order. The field is required if you are licensed to
            perform SEPA money transfers yourself. Otherwise, i.e. when finAPI's Web
            Form flow is required, the Web Form will deal with executing the service
            itself.
          example: "098765"
          type: string
      required:
      - accountId
      type: object
    GetTokenParams:
      properties:
        grant_type:
          description: Determines the required type of authorization:password - authorize
            a user; client_credentials - authorize a client;refresh_token - refresh
            a user's access_token.
          enum:
          - password
          - client_credentials
          - refresh_token
          type: string
        client_id:
          description: Client identifier
          type: string
        client_secret:
          description: Client secret
          format: password
          type: string
        refresh_token:
          description: Refresh token. Required for grant_type=refresh_token only.
          type: string
        username:
          description: User identifier. Required for grant_type=password only.
          type: string
        password:
          description: User password. Required for grant_type=password only.
          format: password
          type: string
      required:
      - client_id
      - client_secret
      - grant_type
      type: object
    ISO3166Alpha2Codes:
      enum:
      - AD
      - AE
      - AF
      - AG
      - AI
      - AL
      - AM
      - AO
      - AQ
      - AR
      - AS
      - AT
      - AU
      - AW
      - AX
      - AZ
      - BA
      - BB
      - BD
      - BE
      - BF
      - BG
      - BH
      - BI
      - BJ
      - BL
      - BM
      - BN
      - BO
      - BQ
      - BR
      - BS
      - BT
      - BV
      - BW
      - BY
      - BZ
      - CA
      - CC
      - CD
      - CF
      - CG
      - CH
      - CI
      - CK
      - CL
      - CM
      - CN
      - CO
      - CR
      - CU
      - CV
      - CW
      - CX
      - CY
      - CZ
      - DE
      - DJ
      - DK
      - DM
      - DO
      - DZ
      - EC
      - EE
      - EG
      - EH
      - ER
      - ES
      - ET
      - FI
      - FJ
      - FK
      - FM
      - FO
      - FR
      - GA
      - GB
      - GD
      - GE
      - GF
      - GG
      - GH
      - GI
      - GL
      - GM
      - GN
      - GP
      - GQ
      - GR
      - GS
      - GT
      - GU
      - GW
      - GY
      - HK
      - HM
      - HN
      - HR
      - HT
      - HU
      - ID
      - IE
      - IL
      - IM
      - IN
      - IO
      - IQ
      - IR
      - IS
      - IT
      - JE
      - JM
      - JO
      - JP
      - KE
      - KG
      - KH
      - KI
      - KM
      - KN
      - KP
      - KR
      - KW
      - KY
      - KZ
      - LA
      - LB
      - LC
      - LI
      - LK
      - LR
      - LS
      - LT
      - LU
      - LV
      - LY
      - MA
      - MC
      - MD
      - ME
      - MF
      - MG
      - MH
      - MK
      - ML
      - MM
      - MN
      - MO
      - MP
      - MQ
      - MR
      - MS
      - MT
      - MU
      - MV
      - MW
      - MX
      - MY
      - MZ
      - NA
      - NC
      - NE
      - NF
      - NG
      - NI
      - NL
      - "NO"
      - NP
      - NR
      - NU
      - NZ
      - OM
      - PA
      - PE
      - PF
      - PG
      - PH
      - PK
      - PL
      - PM
      - PN
      - PR
      - PS
      - PT
      - PW
      - PY
      - QA
      - RE
      - RO
      - RS
      - RU
      - RW
      - SA
      - SB
      - SC
      - SD
      - SE
      - SG
      - SH
      - SI
      - SJ
      - SK
      - SL
      - SM
      - SN
      - SO
      - SR
      - SS
      - ST
      - SV
      - SX
      - SY
      - SZ
      - TC
      - TD
      - TF
      - TG
      - TH
      - TJ
      - TK
      - TL
      - TM
      - TN
      - TO
      - TR
      - TT
      - TV
      - TW
      - TZ
      - UA
      - UG
      - UM
      - US
      - UY
      - UZ
      - VA
      - VC
      - VE
      - VG
      - VI
      - VN
      - VU
      - WF
      - WS
      - XK
      - YE
      - YT
      - ZA
      - ZM
      - ZW
      type: string
    IbanRule:
      description: Container for an IBAN rule
      example:
        iban: DE89370400440532013000
        id: 1
        category: '{}'
        creationDate: 2018-01-01 00:00:00.000
        direction: Income
      properties:
        id:
          description: Rule identifier
          example: 1
          format: int64
          type: integer
        category:
          allOf:
          - $ref: '#/components/schemas/Category'
          description: |-
            <strong>Type:</strong> Category<br/>
            The category that this rule assigns to the transactions that it matches
          type: object
        direction:
          allOf:
          - $ref: '#/components/schemas/TransactionDirection'
          description: |-
            <strong>Type:</strong> TransactionDirection<br/>
            Direction for the rule. 'Income' means that the rule applies to transactions with a positive amount only, 'Spending' means it applies to transactions with a negative amount only.
          example: Income
        creationDate:
          description: Timestamp of when the rule was created, in the format 'YYYY-MM-DD
            HH:MM:SS.SSS' (german time)
          example: 2018-01-01 00:00:00.000
          type: string
        iban:
          description: The IBAN for this rule
          example: DE89370400440532013000
          type: string
      required:
      - category
      - creationDate
      - direction
      - iban
      - id
      type: object
    IbanRuleIdentifiersParams:
      description: IBAN Rule Identifier params
      example:
        ids:
        - 1
        - 2
        - 3
      properties:
        ids:
          description: List of identifiers
          example:
          - 1
          - 2
          - 3
          items:
            format: int64
            type: integer
          type: array
      required:
      - ids
      type: object
    IbanRuleList:
      description: Container for IBAN rules
      example:
        ibanRules:
        - iban: DE89370400440532013000
          id: 1
          category: '{}'
          creationDate: 2018-01-01 00:00:00.000
          direction: Income
        - iban: DE89370400440532013000
          id: 1
          category: '{}'
          creationDate: 2018-01-01 00:00:00.000
          direction: Income
      properties:
        ibanRules:
          description: |-
            <strong>Type:</strong> IbanRule<br/>
            List of IBAN rules
          items:
            $ref: '#/components/schemas/IbanRule'
          type: array
      required:
      - ibanRules
      type: object
    IbanRuleParams:
      description: Parameters of IBAN rule
      example:
        iban: DE89370400440532013000
        categoryId: 378
        direction: Spending
      properties:
        iban:
          description: IBAN (case-insensitive)
          example: DE89370400440532013000
          type: string
        categoryId:
          description: ID of the category that this rule should assign to the matching
            transactions
          example: 378
          format: int64
          type: integer
        direction:
          allOf:
          - $ref: '#/components/schemas/CategorizationRuleDirection'
          description: |-
            <strong>Type:</strong> CategorizationRuleDirection<br/>
            Direction for the rule. 'Income' means that the rule applies to transactions with a positive amount only, 'Spending' means it applies to transactions with a negative amount only. 'Both' means that it applies to both kind of transactions. Note that in case of 'Both', finAPI will create two individual rules (one with direction 'Income' and one with direction 'Spending').
          example: Spending
      required:
      - categoryId
      - direction
      - iban
      type: object
    IbanRulesParams:
      description: Params for creation of IBAN rules
      example:
        ibanRules:
        - iban: DE89370400440532013000
          categoryId: 378
          direction: Spending
        - iban: DE89370400440532013000
          categoryId: 378
          direction: Spending
        - iban: DE89370400440532013000
          categoryId: 378
          direction: Spending
        - iban: DE89370400440532013000
          categoryId: 378
          direction: Spending
        - iban: DE89370400440532013000
          categoryId: 378
          direction: Spending
      properties:
        ibanRules:
          description: |-
            <strong>Type:</strong> IbanRuleParams<br/>
            IBAN rule definitions. The minimum number of rule definitions is 1. The maximum number of rule definitions is 100.
          items:
            $ref: '#/components/schemas/IbanRuleParams'
          maxItems: 100
          minItems: 1
          type: array
      required:
      - ibanRules
      type: object
    IdentifierList:
      description: Set of identifiers (in ascending order)
      example:
        identifiers:
        - 1
        - 2
        - 3
      properties:
        identifiers:
          description: Set of identifiers (in ascending order)
          example:
          - 1
          - 2
          - 3
          items:
            format: int64
            type: integer
          type: array
      required:
      - identifiers
      type: object
    ImportBankConnectionParams:
      description: Container for bank connection import parameters
      example:
        skipPositionsDownload: false
        maxDaysForDownload: 365
        accountTypeIds:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        challengeResponse: "0123"
        redirectUrl: https://myapplication.com
        multiStepAuthentication: '{}'
        loadOwnerData: false
        interface: XS2A
        storePin: true
        loginCredentials:
        - label: Onlinebanking-ID
          value: max.mustermann
        - label: Onlinebanking-ID
          value: max.mustermann
        bankingCustomerId: "123456"
        bankId: 280001
        accountReferences:
        - iban: DE89370400440532013000
        - iban: DE89370400440532013000
        name: Bank connection
        accountTypes:
        - Checking
        - Savings
        - CreditCard
        - Security
        - Loan
        - Pocket
        - Membership
        - Bausparen
        bankingPin: "123456"
        bankingUserId: "123456"
        storeSecrets: true
      properties:
        bankId:
          description: Bank Identifier
          example: 280001
          format: int64
          type: integer
        name:
          description: Custom name for the bank connection. Maximum length is 64.
            If you do not want to set a name, you can leave this field unset.
          example: Bank connection
          type: string
        bankingUserId:
          description: 'THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
            to the ''loginCredentials'' and ''interface'' fields instead. If any of
            those two fields is used, then the value of this field will be ignored.<br/><br/>Online
            banking user ID credential. Max length: 170. NOTES:<br/>- if you import
            the ''demo connection'', this field can be left unset;<br/> - if the user
            will need to enter his credentials in finAPI''s Web Form, this field can
            contain any value. It will be ignored.'
          example: "123456"
          type: string
        bankingCustomerId:
          description: 'THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
            to the ''loginCredentials'' and ''interface'' fields instead. If any of
            those two fields is used, then the value of this field will be ignored.<br/><br/>Online
            banking customer ID credential (for most banks this field can remain unset).
            Max length: 170. NOTES:<br/>- if the user will need to enter his credentials
            in finAPI''s Web Form, this field can contain any value. It will be ignored.'
          example: "123456"
          type: string
        bankingPin:
          description: 'THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
            to the ''loginCredentials'' and ''interface'' fields instead. If any of
            those two fields is used, then the value of this field will be ignored.<br/><br/>Online
            banking PIN. Max length: 170. Any symbols are allowed. NOTES:<br/>- if
            you import the ''demo connection'', this field can be left unset;<br/>
            - if the user will need to enter his credentials in finAPI''s Web Form,
            this field can be left unset or contain any value. It will be ignored.'
          example: "123456"
          type: string
        storePin:
          default: false
          description: THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
            to the 'storeSecrets' field instead.<br/><br/>Whether to store the PIN.
            If the PIN is stored, it is not required to pass the PIN again when updating
            this bank connection or when executing orders (like money transfers).
            Default is false. <br/><br/>NOTES:<br/> - before you set this field to
            true, please regard the 'pinsAreVolatile' flag of this connection's bank.
            Please note that volatile credentials will not be stored, even if provided,
            to enforce user involvement in the next communication with the bank;<br/>
            - this field is ignored in case when the user will need to use finAPI's
            Web Form. The user will be able to decide whether to store the PIN or
            not in the Web Form, depending on the 'storeSecretsAvailableInWebForm'
            setting (see Client Configuration).
          example: true
          type: boolean
        interface:
          allOf:
          - $ref: '#/components/schemas/BankingInterface'
          description: |-
            <strong>Type:</strong> BankingInterface<br/>
            The interface to use for connecting with the bank.
          example: XS2A
        loginCredentials:
          description: |-
            <strong>Type:</strong> LoginCredential<br/>
            Set of login credentials. Must be passed in combination with the 'interface' field.
          items:
            $ref: '#/components/schemas/LoginCredential'
          type: array
        storeSecrets:
          default: false
          description: Whether to store the secret login fields. If the secret fields
            are stored, then updates can be triggered without the involvement of the
            users, as long as the credentials remain valid and the bank consent has
            not expired. Note that bank consent will be stored regardless of the field
            value. Default value is false.
          example: true
          type: boolean
        skipPositionsDownload:
          default: false
          description: Whether to skip the download of transactions and securities
            or not. If set to true, then finAPI will download just the accounts list
            with the accounts' information (like account name, number, holder, etc),
            as well as the accounts' balances (if possible), but skip the download
            of transactions and securities. Default is false.<br/><br/>NOTES:<br/>&bull;
            Setting this flag to true is only meant to be used if A) you generally
            never download positions, because you are only interested in the accounts
            list and/or balances, or B) you want to get just the list of accounts
            in a first step, and then delete unwanted accounts from the bank connection,
            before you trigger another update with transactions download. This approach
            allows you to download transactions only for the accounts that you want.<br/>&bull;
            If you skip the download of transactions and securities during an import
            or update, you can still download them on a later update (though you might
            not get all positions at a later point, because the date range in which
            the bank servers provide this data is usually limited).<br/>&bull; If
            an account already had any positions imported before an update, and you
            skip the positions download in the update, then the account's updated
            balance might not add up to the set of transactions / security positions.
            Be aware that certain services (like GET /accounts/dailyBalances) may
            give incorrect results for accounts in such a state.<br/>&bull; If this
            bank connection is updated via finAPI's automatic batch update, then transactions
            and security positions (of already imported accounts) <u>will</u> be downloaded
            in any case!<br/>&bull; For security accounts, skipping the downloading
            of the securities might result in the account's balance also not being
            downloaded.<br/>&bull; For Bausparen accounts, this field is ignored.
            finAPI will always download transactions for Bausparen accounts.<br/>
          example: false
          type: boolean
        loadOwnerData:
          default: false
          description: 'Whether to load information about the bank connection owner(s)
            - see field ''owners''. Default value is ''false''.<br/><br/>NOTE: This
            feature is supported only by the WEB_SCRAPER interface.'
          example: false
          type: boolean
        maxDaysForDownload:
          default: 0
          description: This setting defines how much of an account's transactions
            history will be downloaded whenever a new account is imported. More technically,
            it depicts the number of days to download transactions for, starting from
            - and including - the date of the account import. For example, on an account
            import that happens today, the value 30 would instruct finAPI to download
            transactions from the past 30 days (including today). The minimum allowed
            value is 14, the maximum value is 3650. Also possible is the value 0 (which
            is the default value), in which case there will be no limit to the transactions
            download and finAPI will try to get all transactions that it can. <br/><br/>Note:<br/>&bull;
            There is no guarantee that finAPI will actually download transactions
            for the entire defined date range, as there may be limitations to the
            download range (set by the bank or by finAPI, e.g. see ClientConfiguration.transactionImportLimitation).
            <br/>&bull; This parameter only applies to transactions, not to security
            positions; For security accounts, finAPI will always download all security
            positions that it can. <br/>&bull; This setting is stored for each interface
            individually.<br/>&bull; After an interface has been connected with this
            setting, there is no way to change the setting for that interface afterwards.<br/>&bull;
            <b>If you do not limit the download range to a value less than 90 days,
            the bank is more likely to trigger a strong customer authentication request
            for the user when finAPI is attempting to download the transactions.</b>
          example: 365
          format: int32
          type: integer
        accountTypes:
          example:
          - Checking
          - Savings
          - CreditCard
          - Security
          - Loan
          - Pocket
          - Membership
          - Bausparen
          items:
            allOf:
            - $ref: '#/components/schemas/AccountType'
            description: |-
              <strong>Type:</strong> AccountType<br/>
              If specified, then finAPI will import only those accounts whose type is one of the given types. Note that when the bank connection does not contain any accounts of the given types, the operation will fail with error code NO_ACCOUNTS_FOR_TYPE_LIST. If you leave this field unset, then all accounts will be imported.
          type: array
        accountTypeIds:
          example:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          items:
            description: THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please
              refer to the 'accountTypes' field instead.<br/><br/>Whitelist of identifiers
              of finAPI account types that are considered for the import. Only accounts
              whose type matches with one of the given types will be imported. Note
              that when the bank connection does not contain any accounts of the given
              types, the import will fail with error code NO_ACCOUNTS_FOR_TYPE_LIST.
              If no whitelist is given, then all accounts will be imported.<br/><br/><br/>1
              = Checking,<br/>2 = Savings,<br/>3 = CreditCard,<br/>4 = Security,<br/>5
              = Loan,<br/>6 = Pocket (DEPRECATED; will not be returned for any account
              unless this type has explicitly been set via PATCH),<br/>7 = Membership,<br/>8
              = Bausparen<br/>
            format: int64
            type: integer
          type: array
        accountReferences:
          description: |-
            <strong>Type:</strong> AccountReference<br/>
            List of accounts for which access is requested from the bank. It must only be passed if the bank interface has the DETAILED_CONSENT property set.
          items:
            $ref: '#/components/schemas/AccountReference'
          type: array
        challengeResponse:
          description: THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
            to the 'multiStepAuthentication' field instead.<br/><br/>Challenge response.
            This field should be set only when the previous attempt of importing the
            bank connection failed with HTTP code 510, i.e. the bank sent a challenge
            for the user for an additional authentication. In this case, this field
            must contain the response to the bank's challenge. Note that in the context
            of finAPI's Web Form flow, finAPI will automatically deal with getting
            the challenge response from the user via the Web Form.
          example: "0123"
          type: string
        multiStepAuthentication:
          allOf:
          - $ref: '#/components/schemas/MultiStepAuthenticationCallback'
          description: |-
            <strong>Type:</strong> MultiStepAuthenticationCallback<br/>
            Container for multi-step authentication data. Required when a previous service call initiated a multi-step authentication.
          type: object
        redirectUrl:
          description: Must only be passed when the used interface has the property
            REDIRECT_APPROACH. The user will be redirected to the given URL from the
            bank's website after completing the bank login and (possibly) the SCA.
          example: https://myapplication.com
          type: string
      required:
      - bankId
      type: object
    KeywordRule:
      description: Container for a keyword rule
      example:
        keywords:
        - coffee
        - pizza
        - burger
        allKeywordsMustMatch: false
        id: 1
        category: '{}'
        creationDate: 2018-01-01 00:00:00.000
        direction: Spending
      properties:
        id:
          description: Rule identifier
          example: 1
          format: int64
          type: integer
        category:
          allOf:
          - $ref: '#/components/schemas/Category'
          description: |-
            <strong>Type:</strong> Category<br/>
            The category that this rule assigns to the transactions that it matches
          type: object
        direction:
          allOf:
          - $ref: '#/components/schemas/TransactionDirection'
          description: |-
            <strong>Type:</strong> TransactionDirection<br/>
            Direction for the rule. 'Income' means that the rule applies to transactions with a positive amount only, 'Spending' means it applies to transactions with a negative amount only.
          example: Spending
        creationDate:
          description: Timestamp of when the rule was created, in the format 'YYYY-MM-DD
            HH:MM:SS.SSS' (german time)
          example: 2018-01-01 00:00:00.000
          type: string
        keywords:
          example:
          - coffee
          - pizza
          - burger
          items:
            description: Set of keywords that this rule defines.
            type: string
          type: array
        allKeywordsMustMatch:
          description: This field is only relevant if the rule contains multiple keywords.
            If set to 'true' it means that all keywords have to be found in a transaction
            to apply the given category. If set to 'false', then even a single matching
            keyword in a transaction can trigger this rule.
          example: false
          type: boolean
      required:
      - allKeywordsMustMatch
      - category
      - creationDate
      - direction
      - id
      - keywords
      type: object
    KeywordRuleIdentifiersParams:
      description: Keyword Rule Identifier params
      example:
        ids:
        - 1
        - 2
        - 3
      properties:
        ids:
          description: List of identifiers
          example:
          - 1
          - 2
          - 3
          items:
            format: int64
            type: integer
          type: array
      required:
      - ids
      type: object
    KeywordRuleList:
      description: Container for keyword rules
      example:
        keywordRules:
        - keywords:
          - coffee
          - pizza
          - burger
          allKeywordsMustMatch: false
          id: 1
          category: '{}'
          creationDate: 2018-01-01 00:00:00.000
          direction: Spending
        - keywords:
          - coffee
          - pizza
          - burger
          allKeywordsMustMatch: false
          id: 1
          category: '{}'
          creationDate: 2018-01-01 00:00:00.000
          direction: Spending
      properties:
        keywordRules:
          description: |-
            <strong>Type:</strong> KeywordRule<br/>
            List of keyword rules
          items:
            $ref: '#/components/schemas/KeywordRule'
          type: array
      required:
      - keywordRules
      type: object
    KeywordRuleParams:
      description: Parameters of keyword rule
      example:
        keywords:
        - coffee
        - pizza
        - burger
        allKeywordsMustMatch: true
        categoryId: 378
        direction: Spending
      properties:
        categoryId:
          description: ID of the category that this rule should assign to the matching
            transactions
          example: 378
          format: int64
          type: integer
        direction:
          allOf:
          - $ref: '#/components/schemas/CategorizationRuleDirection'
          description: |-
            <strong>Type:</strong> CategorizationRuleDirection<br/>
            Direction for the rule. 'Income' means that the rule applies to transactions with a positive amount only, 'Spending' means it applies to transactions with a negative amount only. 'Both' means that it applies to both kind of transactions. Note that in case of 'Both', finAPI will create two individual rules (one with direction 'Income' and one with direction 'Spending').
          example: Spending
        keywords:
          example:
          - coffee
          - pizza
          - burger
          items:
            description: Set of keywords for the rule (Keywords are regarded case-insensitive).
              The minimum number of keywords is 1. The maximum number of keywords
              is 100.
            type: string
          maxItems: 100
          minItems: 1
          type: array
        allKeywordsMustMatch:
          default: false
          description: This field is only relevant if you pass multiple keywords.
            If set to 'true', it means that all keywords have to be found in a transaction
            to apply the given category. If set to 'false', then even a single matching
            keyword in a transaction can trigger this rule. Default value is 'false'.
          example: true
          type: boolean
      required:
      - categoryId
      - direction
      - keywords
      type: object
    KeywordRulesParams:
      description: Params for creation of keyword rules
      example:
        keywordRules:
        - keywords:
          - coffee
          - pizza
          - burger
          allKeywordsMustMatch: true
          categoryId: 378
          direction: Spending
        - keywords:
          - coffee
          - pizza
          - burger
          allKeywordsMustMatch: true
          categoryId: 378
          direction: Spending
        - keywords:
          - coffee
          - pizza
          - burger
          allKeywordsMustMatch: true
          categoryId: 378
          direction: Spending
        - keywords:
          - coffee
          - pizza
          - burger
          allKeywordsMustMatch: true
          categoryId: 378
          direction: Spending
        - keywords:
          - coffee
          - pizza
          - burger
          allKeywordsMustMatch: true
          categoryId: 378
          direction: Spending
      properties:
        keywordRules:
          description: |-
            <strong>Type:</strong> KeywordRuleParams<br/>
            Keyword rule definitions. The minimum number of rule definitions is 1. The maximum number of rule definitions is 100.
          items:
            $ref: '#/components/schemas/KeywordRuleParams'
          maxItems: 100
          minItems: 1
          type: array
      required:
      - keywordRules
      type: object
    Label:
      description: Container for a label's data
      example:
        name: test
        id: 1
      properties:
        id:
          description: Label identifier
          example: 1
          format: int64
          type: integer
        name:
          description: Label name
          example: test
          type: string
      required:
      - id
      - name
      type: object
    LabelList:
      description: Container for labels
      example:
        labels:
        - name: test
          id: 1
        - name: test
          id: 1
      properties:
        labels:
          description: |-
            <strong>Type:</strong> Label<br/>
            Labels
          items:
            $ref: '#/components/schemas/Label'
          type: array
      required:
      - labels
      type: object
    LabelParams:
      description: Label's name
      example:
        name: test
      properties:
        name:
          description: Label's name. Maximum length is 288.
          example: test
          pattern: '[A-Za-z0-9¡-ʯ &\(\)\{\}\[\]\.:,;\?!\+\-_\$@#~`\^€]*'
          type: string
      required:
      - name
      type: object
    LoginCredential:
      description: Login credential
      example:
        label: Onlinebanking-ID
        value: max.mustermann
      properties:
        label:
          description: The login field label, as defined by the respective bank interface.
          example: Onlinebanking-ID
          type: string
        value:
          description: The value for the login field
          example: max.mustermann
          type: string
      required:
      - label
      - value
      type: object
    LoginCredentialResource:
      description: Container for a bank login credential
      example:
        label: User ID
        value: "123456"
      properties:
        label:
          description: Label for this login credential, as we suggest to show it to
            the user.
          example: User ID
          type: string
        value:
          description: Stored value for this login credential. Please NOTE:<br/>If
            your client has no license for processing banking credentials, or if this
            field contains a value that requires password protection (e.g. PIN), then
            this field will always be 'XXXXX'.
          example: "123456"
          nullable: true
          type: string
      required:
      - label
      - value
      type: object
    MandatorLicense:
      enum:
      - UNLICENSED
      - AISP
      - PISP
      - FULLY_LICENSED
      type: string
    MockAccountData:
      description: Mock account data
      example:
        newTransactions:
        - amount: -99.99
          counterpartDebitorId: CRI098
          counterpartCustomerReference: CUR123
          purpose: Restaurantbesuch
          counterpartCreditorId: DE02ABC01234567890
          counterpartIban: DE13700800000061110500
          valueDate: 2018-01-01
          type: Überweisungsauftrag
          sepaPurposeCode: OTHR
          counterpartBlz: "70080000"
          originalAmount: -99.99
          counterpart: Bar Centrale
          typeCodeSwift: RAPRDE51
          currency: EUR
          bookingDate: 2018-01-01
          typeId: 106
          counterpartAccountNumber: "61110500"
          originalCurrency: EUR
          counterpartMandateReference: MR123
          counterpartBic: DRESDEFF700
        - amount: -99.99
          counterpartDebitorId: CRI098
          counterpartCustomerReference: CUR123
          purpose: Restaurantbesuch
          counterpartCreditorId: DE02ABC01234567890
          counterpartIban: DE13700800000061110500
          valueDate: 2018-01-01
          type: Überweisungsauftrag
          sepaPurposeCode: OTHR
          counterpartBlz: "70080000"
          originalAmount: -99.99
          counterpart: Bar Centrale
          typeCodeSwift: RAPRDE51
          currency: EUR
          bookingDate: 2018-01-01
          typeId: 106
          counterpartAccountNumber: "61110500"
          originalCurrency: EUR
          counterpartMandateReference: MR123
          counterpartBic: DRESDEFF700
        accountId: 1
        accountBalance: 99.99
      properties:
        accountId:
          description: Account identifier
          example: 1
          format: int64
          type: integer
        accountBalance:
          description: The balance that this account should be set to.<br/><br/><b>NOTE</b>:<br/>&bull;
            If the specified balance does not add up to the account's current balance
            plus the sum of the 'newTransactions', then finAPI will fix the balance
            deviation with the insertion of an adjusting entry ('Zwischensaldo' transaction).<br/>&bull;
            This service is not calculating exchange rates for transactions, so if
            'newTransactions' contains any transactions with a currency different
            to the account's currency, then the balance deviation might get calculated
            incorrectly.
          example: 99.99
          type: number
        newTransactions:
          description: |-
            <strong>Type:</strong> NewTransaction<br/>
            New transactions that should be imported into the account (at most 1000 transactions at once). Please make sure that the value you pass in the 'accountBalance' field equals the current account balance plus the sum of the new transactions that you pass here, otherwise finAPI will detect a deviation in the balance and might add an adjusting entry ('Zwischensaldo' transaction). <br/>Please also note that it is not guaranteed that all transactions that you pass here will actually get imported. More specifically, finAPI will ignore any transactions whose booking date is prior to the date of the last successful account update minus 10 days (which is the default 'update window' that finAPI uses when importing new transactions). Also, finAPI will ignore any transactions that are considered duplicates of already existing transactions within the update window. This is the case for instance when you try to import a new transaction with the same booking date and same amount as an already existing transaction. In such cases, you might get an adjusting entry too ('Zwischensaldo' transaction), as your given balance might not add up to the transactions that will exist in the account after the update.
          items:
            $ref: '#/components/schemas/NewTransaction'
          type: array
      required:
      - accountBalance
      - accountId
      type: object
    MockBankConnectionUpdate:
      description: Data for a mock bank connection update
      example:
        simulateBankLoginError: false
        bankConnectionId: 1
        interface: XS2A
        mockAccountsData:
        - newTransactions:
          - amount: -99.99
            counterpartDebitorId: CRI098
            counterpartCustomerReference: CUR123
            purpose: Restaurantbesuch
            counterpartCreditorId: DE02ABC01234567890
            counterpartIban: DE13700800000061110500
            valueDate: 2018-01-01
            type: Überweisungsauftrag
            sepaPurposeCode: OTHR
            counterpartBlz: "70080000"
            originalAmount: -99.99
            counterpart: Bar Centrale
            typeCodeSwift: RAPRDE51
            currency: EUR
            bookingDate: 2018-01-01
            typeId: 106
            counterpartAccountNumber: "61110500"
            originalCurrency: EUR
            counterpartMandateReference: MR123
            counterpartBic: DRESDEFF700
          - amount: -99.99
            counterpartDebitorId: CRI098
            counterpartCustomerReference: CUR123
            purpose: Restaurantbesuch
            counterpartCreditorId: DE02ABC01234567890
            counterpartIban: DE13700800000061110500
            valueDate: 2018-01-01
            type: Überweisungsauftrag
            sepaPurposeCode: OTHR
            counterpartBlz: "70080000"
            originalAmount: -99.99
            counterpart: Bar Centrale
            typeCodeSwift: RAPRDE51
            currency: EUR
            bookingDate: 2018-01-01
            typeId: 106
            counterpartAccountNumber: "61110500"
            originalCurrency: EUR
            counterpartMandateReference: MR123
            counterpartBic: DRESDEFF700
          accountId: 1
          accountBalance: 99.99
        - newTransactions:
          - amount: -99.99
            counterpartDebitorId: CRI098
            counterpartCustomerReference: CUR123
            purpose: Restaurantbesuch
            counterpartCreditorId: DE02ABC01234567890
            counterpartIban: DE13700800000061110500
            valueDate: 2018-01-01
            type: Überweisungsauftrag
            sepaPurposeCode: OTHR
            counterpartBlz: "70080000"
            originalAmount: -99.99
            counterpart: Bar Centrale
            typeCodeSwift: RAPRDE51
            currency: EUR
            bookingDate: 2018-01-01
            typeId: 106
            counterpartAccountNumber: "61110500"
            originalCurrency: EUR
            counterpartMandateReference: MR123
            counterpartBic: DRESDEFF700
          - amount: -99.99
            counterpartDebitorId: CRI098
            counterpartCustomerReference: CUR123
            purpose: Restaurantbesuch
            counterpartCreditorId: DE02ABC01234567890
            counterpartIban: DE13700800000061110500
            valueDate: 2018-01-01
            type: Überweisungsauftrag
            sepaPurposeCode: OTHR
            counterpartBlz: "70080000"
            originalAmount: -99.99
            counterpart: Bar Centrale
            typeCodeSwift: RAPRDE51
            currency: EUR
            bookingDate: 2018-01-01
            typeId: 106
            counterpartAccountNumber: "61110500"
            originalCurrency: EUR
            counterpartMandateReference: MR123
            counterpartBic: DRESDEFF700
          accountId: 1
          accountBalance: 99.99
      properties:
        bankConnectionId:
          description: Bank connection identifier
          example: 1
          format: int64
          type: integer
        interface:
          allOf:
          - $ref: '#/components/schemas/BankingInterface'
          description: |-
            <strong>Type:</strong> BankingInterface<br/>
            Banking interface to update. If not specified, then first available interface in bank connection will be used.
          example: XS2A
        simulateBankLoginError:
          default: false
          description: Whether to simulate the case that the update fails due to incorrect
            banking credentials. Note that there is no real communication to any bank
            server involved, so you won't lock your accounts when enabling this flag.
            Default value is 'false'.
          example: false
          type: boolean
        mockAccountsData:
          description: |-
            <strong>Type:</strong> MockAccountData<br/>
            Mock accounts data. Note that for accounts that exist in a bank connection but that you do not specify in this list, the service will act like those accounts are not received by the bank servers. This means that any accounts that you do not specify here will be marked as deprecated. If you do not specify this list at all, all accounts in the bank connection will be marked as deprecated.
          items:
            $ref: '#/components/schemas/MockAccountData'
          type: array
      required:
      - bankConnectionId
      type: object
    MockBatchUpdateParams:
      description: Data for mock bank connection updates
      example:
        mockBankConnectionUpdates:
        - simulateBankLoginError: false
          bankConnectionId: 1
          interface: XS2A
          mockAccountsData:
          - newTransactions:
            - amount: -99.99
              counterpartDebitorId: CRI098
              counterpartCustomerReference: CUR123
              purpose: Restaurantbesuch
              counterpartCreditorId: DE02ABC01234567890
              counterpartIban: DE13700800000061110500
              valueDate: 2018-01-01
              type: Überweisungsauftrag
              sepaPurposeCode: OTHR
              counterpartBlz: "70080000"
              originalAmount: -99.99
              counterpart: Bar Centrale
              typeCodeSwift: RAPRDE51
              currency: EUR
              bookingDate: 2018-01-01
              typeId: 106
              counterpartAccountNumber: "61110500"
              originalCurrency: EUR
              counterpartMandateReference: MR123
              counterpartBic: DRESDEFF700
            - amount: -99.99
              counterpartDebitorId: CRI098
              counterpartCustomerReference: CUR123
              purpose: Restaurantbesuch
              counterpartCreditorId: DE02ABC01234567890
              counterpartIban: DE13700800000061110500
              valueDate: 2018-01-01
              type: Überweisungsauftrag
              sepaPurposeCode: OTHR
              counterpartBlz: "70080000"
              originalAmount: -99.99
              counterpart: Bar Centrale
              typeCodeSwift: RAPRDE51
              currency: EUR
              bookingDate: 2018-01-01
              typeId: 106
              counterpartAccountNumber: "61110500"
              originalCurrency: EUR
              counterpartMandateReference: MR123
              counterpartBic: DRESDEFF700
            accountId: 1
            accountBalance: 99.99
          - newTransactions:
            - amount: -99.99
              counterpartDebitorId: CRI098
              counterpartCustomerReference: CUR123
              purpose: Restaurantbesuch
              counterpartCreditorId: DE02ABC01234567890
              counterpartIban: DE13700800000061110500
              valueDate: 2018-01-01
              type: Überweisungsauftrag
              sepaPurposeCode: OTHR
              counterpartBlz: "70080000"
              originalAmount: -99.99
              counterpart: Bar Centrale
              typeCodeSwift: RAPRDE51
              currency: EUR
              bookingDate: 2018-01-01
              typeId: 106
              counterpartAccountNumber: "61110500"
              originalCurrency: EUR
              counterpartMandateReference: MR123
              counterpartBic: DRESDEFF700
            - amount: -99.99
              counterpartDebitorId: CRI098
              counterpartCustomerReference: CUR123
              purpose: Restaurantbesuch
              counterpartCreditorId: DE02ABC01234567890
              counterpartIban: DE13700800000061110500
              valueDate: 2018-01-01
              type: Überweisungsauftrag
              sepaPurposeCode: OTHR
              counterpartBlz: "70080000"
              originalAmount: -99.99
              counterpart: Bar Centrale
              typeCodeSwift: RAPRDE51
              currency: EUR
              bookingDate: 2018-01-01
              typeId: 106
              counterpartAccountNumber: "61110500"
              originalCurrency: EUR
              counterpartMandateReference: MR123
              counterpartBic: DRESDEFF700
            accountId: 1
            accountBalance: 99.99
        - simulateBankLoginError: false
          bankConnectionId: 1
          interface: XS2A
          mockAccountsData:
          - newTransactions:
            - amount: -99.99
              counterpartDebitorId: CRI098
              counterpartCustomerReference: CUR123
              purpose: Restaurantbesuch
              counterpartCreditorId: DE02ABC01234567890
              counterpartIban: DE13700800000061110500
              valueDate: 2018-01-01
              type: Überweisungsauftrag
              sepaPurposeCode: OTHR
              counterpartBlz: "70080000"
              originalAmount: -99.99
              counterpart: Bar Centrale
              typeCodeSwift: RAPRDE51
              currency: EUR
              bookingDate: 2018-01-01
              typeId: 106
              counterpartAccountNumber: "61110500"
              originalCurrency: EUR
              counterpartMandateReference: MR123
              counterpartBic: DRESDEFF700
            - amount: -99.99
              counterpartDebitorId: CRI098
              counterpartCustomerReference: CUR123
              purpose: Restaurantbesuch
              counterpartCreditorId: DE02ABC01234567890
              counterpartIban: DE13700800000061110500
              valueDate: 2018-01-01
              type: Überweisungsauftrag
              sepaPurposeCode: OTHR
              counterpartBlz: "70080000"
              originalAmount: -99.99
              counterpart: Bar Centrale
              typeCodeSwift: RAPRDE51
              currency: EUR
              bookingDate: 2018-01-01
              typeId: 106
              counterpartAccountNumber: "61110500"
              originalCurrency: EUR
              counterpartMandateReference: MR123
              counterpartBic: DRESDEFF700
            accountId: 1
            accountBalance: 99.99
          - newTransactions:
            - amount: -99.99
              counterpartDebitorId: CRI098
              counterpartCustomerReference: CUR123
              purpose: Restaurantbesuch
              counterpartCreditorId: DE02ABC01234567890
              counterpartIban: DE13700800000061110500
              valueDate: 2018-01-01
              type: Überweisungsauftrag
              sepaPurposeCode: OTHR
              counterpartBlz: "70080000"
              originalAmount: -99.99
              counterpart: Bar Centrale
              typeCodeSwift: RAPRDE51
              currency: EUR
              bookingDate: 2018-01-01
              typeId: 106
              counterpartAccountNumber: "61110500"
              originalCurrency: EUR
              counterpartMandateReference: MR123
              counterpartBic: DRESDEFF700
            - amount: -99.99
              counterpartDebitorId: CRI098
              counterpartCustomerReference: CUR123
              purpose: Restaurantbesuch
              counterpartCreditorId: DE02ABC01234567890
              counterpartIban: DE13700800000061110500
              valueDate: 2018-01-01
              type: Überweisungsauftrag
              sepaPurposeCode: OTHR
              counterpartBlz: "70080000"
              originalAmount: -99.99
              counterpart: Bar Centrale
              typeCodeSwift: RAPRDE51
              currency: EUR
              bookingDate: 2018-01-01
              typeId: 106
              counterpartAccountNumber: "61110500"
              originalCurrency: EUR
              counterpartMandateReference: MR123
              counterpartBic: DRESDEFF700
            accountId: 1
            accountBalance: 99.99
        triggerNotifications: true
      properties:
        mockBankConnectionUpdates:
          description: |-
            <strong>Type:</strong> MockBankConnectionUpdate<br/>
            List of mock bank connection updates
          items:
            $ref: '#/components/schemas/MockBankConnectionUpdate'
          type: array
        triggerNotifications:
          default: false
          description: Whether this call should trigger the dispatching of notifications.
            Default is 'false'.
          example: true
          type: boolean
      required:
      - mockBankConnectionUpdates
      type: object
    MoneyTransferOrderParams:
      description: Parameters for a money transfer order
      example:
        sepaPurposeCode: OTHR
        amount: 99.99
        counterpartName: Max Mustermann
        purpose: Test Payment
        counterpartIban: DE13700800000061110500
        endToEndId: "001100550526"
        counterpartBic: DRESDEFF700
      properties:
        counterpartName:
          description: 'Name of the counterpart. Note: Neither finAPI nor the involved
            bank servers are guaranteed to validate the counterpart name. Even if
            the name does not depict the actual registered account holder of the target
            account, the order might still be successful.'
          example: Max Mustermann
          type: string
        counterpartIban:
          description: IBAN of the counterpart's account.
          example: DE13700800000061110500
          type: string
        counterpartBic:
          description: BIC of the counterpart's account. Only required when there
            is no 'IBAN_ONLY'-capability in the respective account/interface combination
            that is to be used when submitting the payment.
          example: DRESDEFF700
          type: string
        amount:
          description: The amount of the payment. Must be a positive decimal number
            with at most two decimal places. For money transfers over the XS2A interface,
            finAPI will interpret the amount to be in the currency of the related
            account. For money transfers over other interfaces (FINTS_SERVER, WEB_SCRAPER),
            as well as for standalone money transfers (finAPI Payment product) over
            all interfaces (FINTS_SERVER, WEB_SCRAPER, XS2A), finAPI will consider
            the amount to be in EUR.
          example: 99.99
          type: number
        purpose:
          description: The purpose of the transfer transaction
          example: Test Payment
          type: string
        sepaPurposeCode:
          description: SEPA purpose code, according to ISO 20022, external codes set.<br/>Please
            note that the SEPA purpose code may be ignored by some banks.
          example: OTHR
          type: string
        endToEndId:
          description: End-To-End ID for the transfer transaction
          example: "001100550526"
          type: string
      required:
      - amount
      - counterpartIban
      - counterpartName
      type: object
    MoneyTransferOrderingResponse:
      description: Bank server's response to a money transfer order request
      example:
        warnMessage: Es liegen Warnungen vor.
        tanListNumber: "001"
        photoTanData: PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iaXNvLTg4NTktMSI/Pgo8IURPQ1RZUEUgc3ZnIFBVQkxJQyAiLS8vVzNDLy9EVEQgU1ZHIDEuMS8vRU4iICJodHRwOi8vd3d3LnczLm9yZy9HcmFwaGljcy9TVkcvMS4xL0RURC9zdmcxMS5kdGQiPgo8c3ZnIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHZlcnNpb249IjEuMSIgdmlld0JveD0iMCAwIDIxMi43NTUgMjEyLjc1NSIgZW5hYmxlLWJhY2tncm91bmQ9Im5ldyAwIDAgMjEyLjc1NSAyMTIuNzU1IiB3aWR0aD0iMTZweCIgaGVpZ2h0PSIxNnB4Ij4KICA8Zz4KICAgIDxwYXRoIGQ9Ik0xMDYuMzc3LDBDNDcuNzIxLDAsMCw0Ny43MjEsMCwxMDYuMzc3czQ3LjcyMSwxMDYuMzc3LDEwNi4zNzcsMTA2LjM3N3MxMDYuMzc3LTQ3LjcyMSwxMDYuMzc3LTEwNi4zNzcgICBTMTY1LjAzNCwwLDEwNi4zNzcsMHogTTEwNi4zNzcsMTk4Ljc1NUM1NS40NCwxOTguNzU1LDE0LDE1Ny4zMTQsMTQsMTA2LjM3N1M1NS40NCwxNCwxMDYuMzc3LDE0czkyLjM3Nyw0MS40NCw5Mi4zNzcsOTIuMzc3ICAgUzE1Ny4zMTQsMTk4Ljc1NSwxMDYuMzc3LDE5OC43NTV6IiBmaWxsPSIjMDAwMDAwIi8+CiAgICA8cGF0aCBkPSJtMTEzLjM3NywxMDAuMDk2di0zOS43NDRjMy45NjEsMS40NzEgNy40MTcsNC4xNyA5LjgyLDcuODIgMi4xMjcsMy4yMjkgNi40NjgsNC4xMjMgOS42OTYsMS45OTcgMy4yMjktMi4xMjYgNC4xMjMtNi40NjcgMS45OTYtOS42OTYtNS4wMjktNy42MzYtMTIuNzc4LTEyLjgyLTIxLjUxMi0xNC42NDd2LTExLjEyYzAtMy44NjYtMy4xMzQtNy03LTdzLTcsMy4xMzQtNyw3djExLjA5OWMtMTUuNDkzLDMuMjMtMjcuMTY4LDE2Ljk4OS0yNy4xNjgsMzMuNDI2IDAsMTYuNDM3IDExLjY3NiwzMC4xOTggMjcuMTY4LDMzLjQyOHYzOS43NDRjLTMuOTYxLTEuNDcxLTcuNDE3LTQuMTctOS44Mi03LjgyLTIuMTI3LTMuMjI5LTYuNDY4LTQuMTI0LTkuNjk2LTEuOTk3LTMuMjI5LDIuMTI2LTQuMTIzLDYuNDY3LTEuOTk2LDkuNjk2IDUuMDI5LDcuNjM2IDEyLjc3OCwxMi44MiAyMS41MTIsMTQuNjQ3djExLjExOWMwLDMuODY2IDMuMTM0LDcgNyw3czctMy4xMzQgNy03di0xMS4wOThjMTUuNDkzLTMuMjMgMjcuMTY4LTE2Ljk4OSAyNy4xNjgtMzMuNDI2LTIuODQyMTdlLTE0LTE2LjQzNy0xMS42NzUtMzAuMTk4LTI3LjE2OC0zMy40Mjh6bS0yNy4xNjgtMjAuODY1YzAtOC42NTMgNS40OTQtMTYuMDI3IDEzLjE2OC0xOC44NzR2MzcuNzQ4Yy03LjY3NC0yLjg0Ny0xMy4xNjgtMTAuMjIxLTEzLjE2OC0xOC44NzR6bTI3LjE2OCw3My4xNjZ2LTM3Ljc0OGM3LjY3NCwyLjg0NyAxMy4xNjgsMTAuMjIxIDEzLjE2OCwxOC44NzRzLTUuNDkzLDE2LjAyNy0xMy4xNjgsMTguODc0eiIgZmlsbD0iIzAwMDAwMCIvPgogIDwvZz4KPC9zdmc+Cg==
        paymentId: 1
        photoTanMimeType: image/svg+xml
        answerFieldLabel: TAN-Nummer
        opticalData: 11048813833205002812775114302C30315D
        successMessage: Auftrag ausgeführt.
        challengeMessage: Bitte geben Sie die TAN ein, die Sie per SMS erhalten.
      properties:
        successMessage:
          description: Technical message from the bank server, confirming the success
            of the request. Typically, you would not want to present this message
            to the user. Note that this field may not be set. However if it is not
            set, it does not necessarily mean that there was an error in processing
            the request.
          example: Auftrag ausgeführt.
          nullable: true
          type: string
        warnMessage:
          description: In some cases, a bank server may accept the requested order,
            but return a warn message. This message may be of technical nature, but
            could also be of interest to the user.
          example: Es liegen Warnungen vor.
          nullable: true
          type: string
        paymentId:
          description: Payment identifier. Can be used to retrieve the status of the
            payment (see 'Get payments' service).
          example: 1
          format: int64
          type: integer
        challengeMessage:
          description: Message from the bank server containing information or instructions
            on how to retrieve the TAN that is needed to execute the requested order.
            This message should be presented to the user. Note that some bank servers
            may limit the message to just the most crucial information, e.g. the message
            may contain just a single number that depicts the target TAN number on
            a user's TAN list. You may want to parse the challenge message for such
            cases and extend it with more detailed information before showing it to
            the user.
          example: Bitte geben Sie die TAN ein, die Sie per SMS erhalten.
          nullable: true
          type: string
        answerFieldLabel:
          description: Suggestion from the bank server on how you can label your input
            field where the user must enter his TAN. A typical value that many bank
            servers give is 'TAN-Nummer'.
          example: TAN-Nummer
          nullable: true
          type: string
        tanListNumber:
          description: In case that the bank server has instructed the user to look
            up a TAN from a TAN list, this field may contain the identification number
            of the TAN list. However in most cases, this field is only set (i.e. not
            null) when the user has multiple active TAN lists.
          example: "001"
          nullable: true
          type: string
        opticalData:
          description: In case that the bank server has instructed the user to scan
            a flicker code, then this field will contain the raw data for the flicker
            animation as a BASE-64 string. Otherwise, this field will be not set (i.e.
            null). For more information on how to process the flicker code data, please
            refer to <a href='https://documentation.finapi.io/access/Flicker-Code-Template.2807824454.html'
            target='_blank'>this</a> article.
          example: 11048813833205002812775114302C30315D
          nullable: true
          type: string
        photoTanMimeType:
          description: 'In case that the ''photoTanData'' field is set (i.e. not null),
            this field contains the MIME type to use for interpreting the photo data
            (e.g.: ''image/png'')'
          example: image/svg+xml
          nullable: true
          type: string
        photoTanData:
          description: In case that the bank server has instructed the user to scan
            a photo (or more generally speaking, any kind of QR-code-like data), then
            this field will contain the raw data of the photo as a BASE-64 string.
            Otherwise, this field will be not set (i.e. null).
          example: PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iaXNvLTg4NTktMSI/Pgo8IURPQ1RZUEUgc3ZnIFBVQkxJQyAiLS8vVzNDLy9EVEQgU1ZHIDEuMS8vRU4iICJodHRwOi8vd3d3LnczLm9yZy9HcmFwaGljcy9TVkcvMS4xL0RURC9zdmcxMS5kdGQiPgo8c3ZnIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHZlcnNpb249IjEuMSIgdmlld0JveD0iMCAwIDIxMi43NTUgMjEyLjc1NSIgZW5hYmxlLWJhY2tncm91bmQ9Im5ldyAwIDAgMjEyLjc1NSAyMTIuNzU1IiB3aWR0aD0iMTZweCIgaGVpZ2h0PSIxNnB4Ij4KICA8Zz4KICAgIDxwYXRoIGQ9Ik0xMDYuMzc3LDBDNDcuNzIxLDAsMCw0Ny43MjEsMCwxMDYuMzc3czQ3LjcyMSwxMDYuMzc3LDEwNi4zNzcsMTA2LjM3N3MxMDYuMzc3LTQ3LjcyMSwxMDYuMzc3LTEwNi4zNzcgICBTMTY1LjAzNCwwLDEwNi4zNzcsMHogTTEwNi4zNzcsMTk4Ljc1NUM1NS40NCwxOTguNzU1LDE0LDE1Ny4zMTQsMTQsMTA2LjM3N1M1NS40NCwxNCwxMDYuMzc3LDE0czkyLjM3Nyw0MS40NCw5Mi4zNzcsOTIuMzc3ICAgUzE1Ny4zMTQsMTk4Ljc1NSwxMDYuMzc3LDE5OC43NTV6IiBmaWxsPSIjMDAwMDAwIi8+CiAgICA8cGF0aCBkPSJtMTEzLjM3NywxMDAuMDk2di0zOS43NDRjMy45NjEsMS40NzEgNy40MTcsNC4xNyA5LjgyLDcuODIgMi4xMjcsMy4yMjkgNi40NjgsNC4xMjMgOS42OTYsMS45OTcgMy4yMjktMi4xMjYgNC4xMjMtNi40NjcgMS45OTYtOS42OTYtNS4wMjktNy42MzYtMTIuNzc4LTEyLjgyLTIxLjUxMi0xNC42NDd2LTExLjEyYzAtMy44NjYtMy4xMzQtNy03LTdzLTcsMy4xMzQtNyw3djExLjA5OWMtMTUuNDkzLDMuMjMtMjcuMTY4LDE2Ljk4OS0yNy4xNjgsMzMuNDI2IDAsMTYuNDM3IDExLjY3NiwzMC4xOTggMjcuMTY4LDMzLjQyOHYzOS43NDRjLTMuOTYxLTEuNDcxLTcuNDE3LTQuMTctOS44Mi03LjgyLTIuMTI3LTMuMjI5LTYuNDY4LTQuMTI0LTkuNjk2LTEuOTk3LTMuMjI5LDIuMTI2LTQuMTIzLDYuNDY3LTEuOTk2LDkuNjk2IDUuMDI5LDcuNjM2IDEyLjc3OCwxMi44MiAyMS41MTIsMTQuNjQ3djExLjExOWMwLDMuODY2IDMuMTM0LDcgNyw3czctMy4xMzQgNy03di0xMS4wOThjMTUuNDkzLTMuMjMgMjcuMTY4LTE2Ljk4OSAyNy4xNjgtMzMuNDI2LTIuODQyMTdlLTE0LTE2LjQzNy0xMS42NzUtMzAuMTk4LTI3LjE2OC0zMy40Mjh6bS0yNy4xNjgtMjAuODY1YzAtOC42NTMgNS40OTQtMTYuMDI3IDEzLjE2OC0xOC44NzR2MzcuNzQ4Yy03LjY3NC0yLjg0Ny0xMy4xNjgtMTAuMjIxLTEzLjE2OC0xOC44NzR6bTI3LjE2OCw3My4xNjZ2LTM3Ljc0OGM3LjY3NCwyLjg0NyAxMy4xNjgsMTAuMjIxIDEzLjE2OCwxOC44NzRzLTUuNDkzLDE2LjAyNy0xMy4xNjgsMTguODc0eiIgZmlsbD0iIzAwMDAwMCIvPgogIDwvZz4KPC9zdmc+Cg==
          nullable: true
          type: string
      required:
      - answerFieldLabel
      - challengeMessage
      - opticalData
      - paymentId
      - photoTanData
      - photoTanMimeType
      - successMessage
      - tanListNumber
      - warnMessage
      type: object
    MonthlyUserStats:
      description: Information about a user's data or activities for a certain month
      example:
        maxBankConnectionCount: 5
        month: 2018-01
        minBankConnectionCount: 1
      nullable: true
      properties:
        month:
          description: The month that the contained information applies to, in the
            format 'YYYY-MM'.
          example: 2018-01
          type: string
        minBankConnectionCount:
          description: Minimum count of bank connections that this user has had at
            any point during the month.
          example: 1
          format: int32
          type: integer
        maxBankConnectionCount:
          description: Maximum count of bank connections that this user has had at
            any point during the month.
          example: 5
          format: int32
          type: integer
      required:
      - maxBankConnectionCount
      - minBankConnectionCount
      - month
      type: object
    MsaStatus:
      enum:
      - CHALLENGE_RESPONSE_REQUIRED
      - TWO_STEP_PROCEDURE_REQUIRED
      - REDIRECT_REQUIRED
      - DECOUPLED_AUTH_REQUIRED
      - DECOUPLED_AUTH_IN_PROGRESS
      type: string
    MultiStepAuthenticationCallback:
      description: Container for multi-step authentication data, as passed by the
        client to finAPI
      properties:
        hash:
          description: Hash that was returned in the previous multi-step authentication
            error.
          example: c7af602c031117458affd825305fb56d
          type: string
        challengeResponse:
          description: Challenge response. Must be set when the previous multi-step
            authentication error had status 'CHALLENGE_RESPONSE_REQUIRED'.
          example: "0123"
          type: string
        twoStepProcedureId:
          description: The bank-given ID of the two-step-procedure that should be
            used for authentication. Must be set when the previous multi-step authentication
            error had status 'TWO_STEP_PROCEDURE_REQUIRED'.
          example: "955"
          type: string
        redirectCallback:
          description: Must be passed when the previous multi-step authentication
            error had status 'REDIRECT_REQUIRED'. The value must consist of the complete
            query parameter list that was contained in the received redirect from
            the bank.
          example: bankParam1=X&bankParam2=Y
          type: string
        decoupledCallback:
          description: 'Must be passed when the previous multi-step authentication
            error had status ''DECOUPLED_AUTH_REQUIRED'' or ''DECOUPLED_AUTH_IN_PROGRESS''.
            The field represents the state of the decoupled authentication meaning
            that when it''s set to ''true'', the end-user has completed the authentication
            process on bank''s side.<br/><br/>Please note: Don''t repeat the service
            call too frequently. Some banks limit the amount of requests per minute.
            Our suggestion is to repeat the service call for the decoupled approach
            every 5 seconds.'
          example: true
          type: boolean
      required:
      - hash
      type: object
    MultiStepAuthenticationChallenge:
      description: Container for multi-step authentication data, as returned by finAPI
        to the client
      properties:
        hash:
          description: Hash for this multi-step authentication flow. Must be passed
            back to finAPI when continuing the flow.
          example: c7af602c031117458affd825305fb56d
          type: string
        status:
          allOf:
          - $ref: '#/components/schemas/MsaStatus'
          description: |-
            <strong>Type:</strong> MsaStatus<br/>
            Indicates the current status of the multi-step authentication flow:<br/><br/>TWO_STEP_PROCEDURE_REQUIRED means that the bank has requested an SCA method selection for the user. In this case, the service should be recalled with a chosen TSP-ID set to the 'twoStepProcedureId' field.<br/><br/>CHALLENGE_RESPONSE_REQUIRED means that the bank has requested a challenge code for the previously given TSP (SCA). This status can be completed by setting the 'challengeResponse' field.<br/><br/>REDIRECT_REQUIRED means that the user must be redirected to the bank's website, where the authentication can be finished.<br/><br/>DECOUPLED_AUTH_REQUIRED means that the bank has asked for the decoupled authentication. In this case, the 'decoupledCallback' field must be set to true to complete the authentication.<br/><br/>DECOUPLED_AUTH_IN_PROGRESS means that the bank is waiting for the completion of the decoupled authentication by the user. Until this is done, the service should be recalled at most every 5 seconds with the 'decoupledCallback' field set to 'true'. Once the decoupled authentication is completed by the user, the service returns a successful response.
          example: CHALLENGE_RESPONSE_REQUIRED
        challengeMessage:
          description: In case of status = CHALLENGE_RESPONSE_REQUIRED, this field
            contains a message from the bank containing instructions for the user
            on how to proceed with the authorization.
          example: Bitte die TAN verwenden, die Sie per SMS erhalten haben.
          nullable: true
          type: string
        answerFieldLabel:
          description: Suggestion from the bank on how you can label your input field
            where the user should enter his challenge response.
          example: TAN-Nummer
          nullable: true
          type: string
        redirectUrl:
          description: In case of status = REDIRECT_REQUIRED, this field contains
            the URL to which you must direct the user. It already includes the redirect
            URL back to your client that you have passed when initiating the service
            call.
          example: https://user-login.bank.de/
          nullable: true
          type: string
        redirectContext:
          description: Set in case of status = REDIRECT_REQUIRED. When the bank redirects
            the user back to your client, the redirect URL will contain this string,
            which you must process to identify the user context for the callback on
            your side.
          example: "12345"
          nullable: true
          type: string
        redirectContextField:
          description: Set in case of status = REDIRECT_REQUIRED. This field is set
            to the name of the query parameter that contains the 'redirectContext'
            in the redirect URL from the bank back to your client.
          example: state
          nullable: true
          type: string
        twoStepProcedures:
          description: |-
            <strong>Type:</strong> TwoStepProcedure<br/>
            In case of status = TWO_STEP_PROCEDURE_REQUIRED, this field contains the available two-step procedures. Note that this set does not necessarily match the set that is stored in the respective bank connection interface. You should always use the set from this field for the multi-step authentication flow.
          items:
            $ref: '#/components/schemas/TwoStepProcedure'
          nullable: true
          type: array
          uniqueItems: true
        photoTanMimeType:
          description: 'In case that the ''photoTanData'' field is set (i.e. not null),
            this field contains the MIME type to use for interpreting the photo data
            (e.g.: ''image/png'')'
          example: image/svg+xml
          nullable: true
          type: string
        photoTanData:
          description: 'In case that the bank server has instructed the user to scan
            a photo (or more generally speaking, any kind of QR-code-like data), then
            this field will contain the raw data of the photo as a BASE-64 string. '
          example: PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iaXNvLTg4NTktMSI/Pgo8IURPQ1RZUEUgc3ZnIFBVQkxJQyAiLS8vVzNDLy9EVEQgU1ZHIDEuMS8vRU4iICJodHRwOi8vd3d3LnczLm9yZy9HcmFwaGljcy9TVkcvMS4xL0RURC9zdmcxMS5kdGQiPgo8c3ZnIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHZlcnNpb249IjEuMSIgdmlld0JveD0iMCAwIDIxMi43NTUgMjEyLjc1NSIgZW5hYmxlLWJhY2tncm91bmQ9Im5ldyAwIDAgMjEyLjc1NSAyMTIuNzU1IiB3aWR0aD0iMTZweCIgaGVpZ2h0PSIxNnB4Ij4KICA8Zz4KICAgIDxwYXRoIGQ9Ik0xMDYuMzc3LDBDNDcuNzIxLDAsMCw0Ny43MjEsMCwxMDYuMzc3czQ3LjcyMSwxMDYuMzc3LDEwNi4zNzcsMTA2LjM3N3MxMDYuMzc3LTQ3LjcyMSwxMDYuMzc3LTEwNi4zNzcgICBTMTY1LjAzNCwwLDEwNi4zNzcsMHogTTEwNi4zNzcsMTk4Ljc1NUM1NS40NCwxOTguNzU1LDE0LDE1Ny4zMTQsMTQsMTA2LjM3N1M1NS40NCwxNCwxMDYuMzc3LDE0czkyLjM3Nyw0MS40NCw5Mi4zNzcsOTIuMzc3ICAgUzE1Ny4zMTQsMTk4Ljc1NSwxMDYuMzc3LDE5OC43NTV6IiBmaWxsPSIjMDAwMDAwIi8+CiAgICA8cGF0aCBkPSJtMTEzLjM3NywxMDAuMDk2di0zOS43NDRjMy45NjEsMS40NzEgNy40MTcsNC4xNyA5LjgyLDcuODIgMi4xMjcsMy4yMjkgNi40NjgsNC4xMjMgOS42OTYsMS45OTcgMy4yMjktMi4xMjYgNC4xMjMtNi40NjcgMS45OTYtOS42OTYtNS4wMjktNy42MzYtMTIuNzc4LTEyLjgyLTIxLjUxMi0xNC42NDd2LTExLjEyYzAtMy44NjYtMy4xMzQtNy03LTdzLTcsMy4xMzQtNyw3djExLjA5OWMtMTUuNDkzLDMuMjMtMjcuMTY4LDE2Ljk4OS0yNy4xNjgsMzMuNDI2IDAsMTYuNDM3IDExLjY3NiwzMC4xOTggMjcuMTY4LDMzLjQyOHYzOS43NDRjLTMuOTYxLTEuNDcxLTcuNDE3LTQuMTctOS44Mi03LjgyLTIuMTI3LTMuMjI5LTYuNDY4LTQuMTI0LTkuNjk2LTEuOTk3LTMuMjI5LDIuMTI2LTQuMTIzLDYuNDY3LTEuOTk2LDkuNjk2IDUuMDI5LDcuNjM2IDEyLjc3OCwxMi44MiAyMS41MTIsMTQuNjQ3djExLjExOWMwLDMuODY2IDMuMTM0LDcgNyw3czctMy4xMzQgNy03di0xMS4wOThjMTUuNDkzLTMuMjMgMjcuMTY4LTE2Ljk4OSAyNy4xNjgtMzMuNDI2LTIuODQyMTdlLTE0LTE2LjQzNy0xMS42NzUtMzAuMTk4LTI3LjE2OC0zMy40Mjh6bS0yNy4xNjgtMjAuODY1YzAtOC42NTMgNS40OTQtMTYuMDI3IDEzLjE2OC0xOC44NzR2MzcuNzQ4Yy03LjY3NC0yLjg0Ny0xMy4xNjgtMTAuMjIxLTEzLjE2OC0xOC44NzR6bTI3LjE2OCw3My4xNjZ2LTM3Ljc0OGM3LjY3NCwyLjg0NyAxMy4xNjgsMTAuMjIxIDEzLjE2OCwxOC44NzRzLTUuNDkzLDE2LjAyNy0xMy4xNjgsMTguODc0eiIgZmlsbD0iIzAwMDAwMCIvPgogIDwvZz4KPC9zdmc+Cg==
          nullable: true
          type: string
        opticalData:
          description: In case that the bank server has instructed the user to scan
            a flicker code, then this field will contain the raw data for the flicker
            animation as a BASE-64 string.
          example: 11048813833205002812775114302C30315D
          nullable: true
          type: string
      required:
      - answerFieldLabel
      - challengeMessage
      - hash
      - opticalData
      - photoTanData
      - photoTanMimeType
      - redirectContext
      - redirectContextField
      - redirectUrl
      - status
      - twoStepProcedures
      type: object
    NewTransaction:
      description: Mock transaction data
      example:
        amount: -99.99
        counterpartDebitorId: CRI098
        counterpartCustomerReference: CUR123
        purpose: Restaurantbesuch
        counterpartCreditorId: DE02ABC01234567890
        counterpartIban: DE13700800000061110500
        valueDate: 2018-01-01
        type: Überweisungsauftrag
        sepaPurposeCode: OTHR
        counterpartBlz: "70080000"
        originalAmount: -99.99
        counterpart: Bar Centrale
        typeCodeSwift: RAPRDE51
        currency: EUR
        bookingDate: 2018-01-01
        typeId: 106
        counterpartAccountNumber: "61110500"
        originalCurrency: EUR
        counterpartMandateReference: MR123
        counterpartBic: DRESDEFF700
      properties:
        amount:
          description: Amount. Required.
          example: -99.99
          type: number
        currency:
          allOf:
          - $ref: '#/components/schemas/Currency'
          description: |-
            <strong>Type:</strong> Currency<br/>
            Transaction currency.
          example: EUR
        originalAmount:
          description: Original amount
          example: -99.99
          type: number
        originalCurrency:
          allOf:
          - $ref: '#/components/schemas/Currency'
          description: |-
            <strong>Type:</strong> Currency<br/>
            Currency of the original amount.
          example: EUR
        purpose:
          description: 'Purpose. Any symbols are allowed. Maximum length is 2000.
            Optional. Default value: null.'
          example: Restaurantbesuch
          type: string
        counterpart:
          description: 'Counterpart. Any symbols are allowed. Maximum length is 80.
            Optional. Default value: null.'
          example: Bar Centrale
          type: string
        counterpartIban:
          description: 'Counterpart IBAN. Optional. Default value: null.'
          example: DE13700800000061110500
          type: string
        counterpartBlz:
          description: 'Counterpart BLZ. Optional. Default value: null.'
          example: "70080000"
          type: string
        counterpartBic:
          description: 'Counterpart BIC. Optional. Default value: null.'
          example: DRESDEFF700
          type: string
        counterpartAccountNumber:
          description: 'Counterpart account number. Maximum length is 34. Optional.
            Default value: null.'
          example: "61110500"
          type: string
        bookingDate:
          description: Booking date in the format 'YYYY-MM-DD'.<br/><br/>If the date
            lies back more than 10 days from the booking date of the latest transaction
            that currently exists in the account, then this transaction will be ignored
            and not imported. If the date depicts a date in the future, then finAPI
            will deal with it the same way as it does with real transactions during
            a real update (see fields 'bankBookingDate' and 'finapiBookingDate' in
            the Transaction Resource for explanation).<br/><br/>This field is optional,
            default value is the current date.
          example: 2018-01-01
          type: string
        valueDate:
          description: 'Value date in the format ''YYYY-MM-DD''. Optional. Default
            value: Same as the booking date.'
          example: 2018-01-01
          type: string
        typeId:
          description: 'The transaction type id. It''s usually a number between 1
            and 999. You can look up valid transaction in the following document on
            page 198: <a href=''https://www.hbci-zka.de/dokumente/spezifikation_deutsch/fintsv4/FinTS_4.1_Messages_Finanzdatenformate_2014-01-20-FV.pdf''
            target=''_blank''>FinTS Financial Transaction Services</a>.<br/> For numbers
            not listed here, the service call might fail.'
          example: 106
          format: int32
          type: integer
        counterpartMandateReference:
          description: The mandate reference of the counterpart. The maximum possible
            length of this field is 270 characters.
          example: MR123
          type: string
        counterpartCreditorId:
          description: The creditor ID of the counterpart. Exists only for SEPA direct
            debit transactions ("Lastschrift"). The maximum possible length of this
            field is 270 characters.
          example: DE02ABC01234567890
          type: string
        counterpartCustomerReference:
          description: The customer reference of the counterpart. The maximum possible
            length of this field is 270 characters.
          example: CUR123
          type: string
        counterpartDebitorId:
          description: The originator's identification code. Exists only for SEPA
            money transfer transactions ("Überweisung"). The maximum possible length
            of this field is 100 characters.
          example: CRI098
          type: string
        type:
          description: 'Transaction type, according to the bank. If set, this will
            contain a German term that you can display to the user. Some examples
            of common values are: "Lastschrift", "Auslands&uuml;berweisung", "Geb&uuml;hren",
            "Zinsen". The maximum possible length of this field is 270 characters.'
          example: Überweisungsauftrag
          type: string
        typeCodeSwift:
          description: SWIFT transaction type code.
          example: RAPRDE51
          type: string
        sepaPurposeCode:
          description: SEPA purpose code.
          example: OTHR
          type: string
      required:
      - amount
      type: object
    NotificationRule:
      description: Data of notification rule
      example:
        callbackHandle: handle
        triggerEvent: NEW_ACCOUNT_BALANCE
        id: 1
        params:
          accountIds: 1,2,3
        includeDetails: true
      properties:
        id:
          description: Notification rule identifier
          example: 1
          format: int64
          type: integer
        triggerEvent:
          description: Trigger event type
          enum:
          - NEW_ACCOUNT_BALANCE
          - NEW_TRANSACTIONS
          - BANK_LOGIN_ERROR
          - FOREIGN_MONEY_TRANSFER
          - LOW_ACCOUNT_BALANCE
          - HIGH_TRANSACTION_AMOUNT
          - CATEGORY_CASH_FLOW
          - NEW_TERMS_AND_CONDITIONS
          example: NEW_ACCOUNT_BALANCE
          type: string
        params:
          additionalProperties:
            description: Additional parameters that are specific to the trigger event
              type. Please refer to the documentation for details.
            example: '{"accountIds":"1,2,3"}'
            type: string
          description: Additional parameters that are specific to the trigger event
            type. Please refer to the documentation for details.
          example:
            accountIds: 1,2,3
          type: object
        callbackHandle:
          description: The string that finAPI includes into the notifications that
            it sends based on this rule.
          example: handle
          nullable: true
          type: string
        includeDetails:
          description: Whether the notification messages that will be sent based on
            this rule contain encrypted detailed data or not.
          example: true
          type: boolean
      required:
      - callbackHandle
      - id
      - includeDetails
      - params
      - triggerEvent
      type: object
    NotificationRuleList:
      description: Container for notification rules
      example:
        notificationRules:
        - callbackHandle: handle
          triggerEvent: NEW_ACCOUNT_BALANCE
          id: 1
          params:
            accountIds: 1,2,3
          includeDetails: true
        - callbackHandle: handle
          triggerEvent: NEW_ACCOUNT_BALANCE
          id: 1
          params:
            accountIds: 1,2,3
          includeDetails: true
      properties:
        notificationRules:
          description: |-
            <strong>Type:</strong> NotificationRule<br/>
            List of notification rules
          items:
            $ref: '#/components/schemas/NotificationRule'
          type: array
      required:
      - notificationRules
      type: object
    NotificationRuleParams:
      description: Parameters of notification rule
      example:
        callbackHandle: handle
        triggerEvent: NEW_ACCOUNT_BALANCE
        params:
          accountIds: 1,2,3
        includeDetails: true
      properties:
        triggerEvent:
          description: Trigger event type
          enum:
          - NEW_ACCOUNT_BALANCE
          - NEW_TRANSACTIONS
          - BANK_LOGIN_ERROR
          - FOREIGN_MONEY_TRANSFER
          - LOW_ACCOUNT_BALANCE
          - HIGH_TRANSACTION_AMOUNT
          - CATEGORY_CASH_FLOW
          - NEW_TERMS_AND_CONDITIONS
          example: NEW_ACCOUNT_BALANCE
          type: string
        params:
          additionalProperties:
            description: Additional parameters that are specific to the chosen trigger
              event type. Please refer to the documentation for details.
            example: '{"accountIds":"1,2,3"}'
            type: string
          description: Additional parameters that are specific to the chosen trigger
            event type. Please refer to the documentation for details.
          example:
            accountIds: 1,2,3
          type: object
        callbackHandle:
          description: An arbitrary string that finAPI will include into the notifications
            that it sends based on this rule and that you can use to identify the
            notification in your application. For instance, you could include the
            identifier of the user that you create this rule for. Maximum allowed
            length of the string is 512 characters.<br/><br/>Note that for this parameter,
            you can pass the symbols '/', '=', '%' and '"' in addition to the symbols
            that are generally allowed in finAPI (see <a href='https://documentation.finapi.io/access/Allowed-Characters.2764767279.html'
            target='_blank'>Allowed Characters</a>). This was done to enable you to
            set Base64 encoded strings and JSON structures for the callback handle.
          example: handle
          pattern: '[A-Za-z0-9¡-ʯ &\(\)\{\}\[\]\.:,;\?!\+\-_\$@#~`\^€/=%"]*'
          type: string
        includeDetails:
          default: false
          description: Whether the notification messages that will be sent based on
            this rule should contain encrypted detailed data or not. Default value
            is 'false'.
          example: true
          type: boolean
      required:
      - triggerEvent
      type: object
    OrderInitiationStatus:
      enum:
      - OPEN
      - PENDING
      - SUCCESSFUL
      - NOT_SUCCESSFUL
      - DISCARDED
      type: string
    PageableBankList:
      description: Container for banks with paging information
      example:
        banks:
        - lastCommunicationAttempt: 2018-01-01 00:00:00.000
          interfaces:
          - loginHint: Bitte geben Sie nur die ersten fünf Stellen Ihrer PIN ein.
            lastCommunicationAttempt: 2018-01-01 00:00:00.000
            isAisSupported: true
            aisAccountTypes:
            - Checking
            - CreditCard
            lastSuccessfulCommunication: 2018-01-01 00:00:00.000
            isMoneyTransferSupported: true
            health: 100
            interface: FINTS_SERVER
            tppAuthenticationGroup: '{}'
            loginCredentials:
            - isSecret: false
              isVolatile: false
              label: Nutzerkennung
            - isSecret: false
              isVolatile: false
              label: Nutzerkennung
            properties:
            - REDIRECT_APPROACH
            paymentCapabilities: '{}'
          - loginHint: Bitte geben Sie nur die ersten fünf Stellen Ihrer PIN ein.
            lastCommunicationAttempt: 2018-01-01 00:00:00.000
            isAisSupported: true
            aisAccountTypes:
            - Checking
            - CreditCard
            lastSuccessfulCommunication: 2018-01-01 00:00:00.000
            isMoneyTransferSupported: true
            health: 100
            interface: FINTS_SERVER
            tppAuthenticationGroup: '{}'
            loginCredentials:
            - isSecret: false
              isVolatile: false
              label: Nutzerkennung
            - isSecret: false
              isVolatile: false
              label: Nutzerkennung
            properties:
            - REDIRECT_APPROACH
            paymentCapabilities: '{}'
          city: München
          bankGroup: '{}'
          health: 100
          isSupported: true
          isTestBank: true
          blzs: []
          loginHint: Bitte geben Sie Ihre Online-Identifikation und Ihre PIN ein.
          blz: "00000000"
          pinsAreVolatile: true
          lastSuccessfulCommunication: 2018-01-01 00:00:00.000
          loginFieldUserId: Onlinebanking-ID
          popularity: 95
          loginFieldPin: PIN
          name: FinAPI Test Bank
          location: DE
          isBeta: true
          id: 277672
          supportedDataSources:
          - FINTS_SERVER
          - WEB_SCRAPER
          bic: TESTBANKING
          loginFieldCustomerId: Kunden-ID
          isCustomerIdPassword: false
        - lastCommunicationAttempt: 2018-01-01 00:00:00.000
          interfaces:
          - loginHint: Bitte geben Sie nur die ersten fünf Stellen Ihrer PIN ein.
            lastCommunicationAttempt: 2018-01-01 00:00:00.000
            isAisSupported: true
            aisAccountTypes:
            - Checking
            - CreditCard
            lastSuccessfulCommunication: 2018-01-01 00:00:00.000
            isMoneyTransferSupported: true
            health: 100
            interface: FINTS_SERVER
            tppAuthenticationGroup: '{}'
            loginCredentials:
            - isSecret: false
              isVolatile: false
              label: Nutzerkennung
            - isSecret: false
              isVolatile: false
              label: Nutzerkennung
            properties:
            - REDIRECT_APPROACH
            paymentCapabilities: '{}'
          - loginHint: Bitte geben Sie nur die ersten fünf Stellen Ihrer PIN ein.
            lastCommunicationAttempt: 2018-01-01 00:00:00.000
            isAisSupported: true
            aisAccountTypes:
            - Checking
            - CreditCard
            lastSuccessfulCommunication: 2018-01-01 00:00:00.000
            isMoneyTransferSupported: true
            health: 100
            interface: FINTS_SERVER
            tppAuthenticationGroup: '{}'
            loginCredentials:
            - isSecret: false
              isVolatile: false
              label: Nutzerkennung
            - isSecret: false
              isVolatile: false
              label: Nutzerkennung
            properties:
            - REDIRECT_APPROACH
            paymentCapabilities: '{}'
          city: München
          bankGroup: '{}'
          health: 100
          isSupported: true
          isTestBank: true
          blzs: []
          loginHint: Bitte geben Sie Ihre Online-Identifikation und Ihre PIN ein.
          blz: "00000000"
          pinsAreVolatile: true
          lastSuccessfulCommunication: 2018-01-01 00:00:00.000
          loginFieldUserId: Onlinebanking-ID
          popularity: 95
          loginFieldPin: PIN
          name: FinAPI Test Bank
          location: DE
          isBeta: true
          id: 277672
          supportedDataSources:
          - FINTS_SERVER
          - WEB_SCRAPER
          bic: TESTBANKING
          loginFieldCustomerId: Kunden-ID
          isCustomerIdPassword: false
        paging: '{}'
      properties:
        banks:
          description: |-
            <strong>Type:</strong> Bank<br/>
            Banks
          items:
            $ref: '#/components/schemas/Bank'
          type: array
        paging:
          allOf:
          - $ref: '#/components/schemas/Paging'
          description: |-
            <strong>Type:</strong> Paging<br/>
            Information for pagination
          type: object
      required:
      - banks
      - paging
      type: object
    PageableCategoryList:
      description: Container for categories with paging information
      example:
        paging: '{}'
        categories:
        - parentName: Freizeit, Hobbys & Soziales
          children:
          - 1
          - 2
          - 3
          name: Sport & Fitness
          isCustom: false
          id: 378
          parentId: 373
        - parentName: Freizeit, Hobbys & Soziales
          children:
          - 1
          - 2
          - 3
          name: Sport & Fitness
          isCustom: false
          id: 378
          parentId: 373
      properties:
        categories:
          description: |-
            <strong>Type:</strong> Category<br/>
            Categories
          items:
            $ref: '#/components/schemas/Category'
          type: array
        paging:
          allOf:
          - $ref: '#/components/schemas/Paging'
          description: |-
            <strong>Type:</strong> Paging<br/>
            Information for pagination
          type: object
      required:
      - categories
      - paging
      type: object
    PageableIbanRuleList:
      description: Container for IBAN rule information with paging information
      example:
        ibanRules:
        - iban: DE89370400440532013000
          id: 1
          category: '{}'
          creationDate: 2018-01-01 00:00:00.000
          direction: Income
        - iban: DE89370400440532013000
          id: 1
          category: '{}'
          creationDate: 2018-01-01 00:00:00.000
          direction: Income
        paging: '{}'
      properties:
        ibanRules:
          description: |-
            <strong>Type:</strong> IbanRule<br/>
            List of iban rules information
          items:
            $ref: '#/components/schemas/IbanRule'
          type: array
        paging:
          allOf:
          - $ref: '#/components/schemas/Paging'
          description: |-
            <strong>Type:</strong> Paging<br/>
            Information for pagination
          type: object
      required:
      - ibanRules
      - paging
      type: object
    PageableKeywordRuleList:
      description: Container for keyword rule information with paging information
      example:
        keywordRules:
        - keywords:
          - coffee
          - pizza
          - burger
          allKeywordsMustMatch: false
          id: 1
          category: '{}'
          creationDate: 2018-01-01 00:00:00.000
          direction: Spending
        - keywords:
          - coffee
          - pizza
          - burger
          allKeywordsMustMatch: false
          id: 1
          category: '{}'
          creationDate: 2018-01-01 00:00:00.000
          direction: Spending
        paging: '{}'
      properties:
        keywordRules:
          description: |-
            <strong>Type:</strong> KeywordRule<br/>
            List of keyword rules
          items:
            $ref: '#/components/schemas/KeywordRule'
          type: array
        paging:
          allOf:
          - $ref: '#/components/schemas/Paging'
          description: |-
            <strong>Type:</strong> Paging<br/>
            Information for pagination
          type: object
      required:
      - keywordRules
      - paging
      type: object
    PageableLabelList:
      description: Label resources with paging information
      example:
        paging: '{}'
        labels:
        - name: test
          id: 1
        - name: test
          id: 1
      properties:
        labels:
          description: |-
            <strong>Type:</strong> Label<br/>
            Labels
          items:
            $ref: '#/components/schemas/Label'
          type: array
        paging:
          allOf:
          - $ref: '#/components/schemas/Paging'
          description: |-
            <strong>Type:</strong> Paging<br/>
            Information for pagination
          type: object
      required:
      - labels
      - paging
      type: object
    PageablePaymentResources:
      description: Payment resources with paging information
      example:
        payments:
        - accountId: 1
          amount: 99.99
          bankMessage: bankMessage
          instructedExecutionDate: 2019-01-01
          iban: DE89370400440532013000
          orderCount: 1
          requestDate: 2019-01-01 00:00:00.000
          executionDate: 2019-01-01 00:00:00.000
          id: 1
          type: MONEY_TRANSFER
          status: OPEN
        - accountId: 1
          amount: 99.99
          bankMessage: bankMessage
          instructedExecutionDate: 2019-01-01
          iban: DE89370400440532013000
          orderCount: 1
          requestDate: 2019-01-01 00:00:00.000
          executionDate: 2019-01-01 00:00:00.000
          id: 1
          type: MONEY_TRANSFER
          status: OPEN
        paging: '{}'
      properties:
        payments:
          description: |-
            <strong>Type:</strong> Payment<br/>
            List of received account payments
          items:
            $ref: '#/components/schemas/Payment'
          type: array
        paging:
          allOf:
          - $ref: '#/components/schemas/Paging'
          description: |-
            <strong>Type:</strong> Paging<br/>
            Information for pagination
          type: object
      required:
      - paging
      - payments
      type: object
    PageableSecurityList:
      description: Container for page of securities
      example:
        paging: '{}'
        securities:
        - marketValueCurrency: EUR
          marketValue: 99.999999
          quoteType: ACTU
          quoteCurrency: EUR
          accountId: 1
          entryQuoteCurrency: EUR
          quantityNominal: 99.999999
          quote: 99.999999
          quantityNominalType: UNIT
          name: Wertapapierbezeichnung
          id: 1
          wkn: "840400"
          entryQuote: 99.999999
          isin: DE0008404005
          quoteDate: 2018-01-01 00:00:00.000
          profitOrLoss: 99.999999
        - marketValueCurrency: EUR
          marketValue: 99.999999
          quoteType: ACTU
          quoteCurrency: EUR
          accountId: 1
          entryQuoteCurrency: EUR
          quantityNominal: 99.999999
          quote: 99.999999
          quantityNominalType: UNIT
          name: Wertapapierbezeichnung
          id: 1
          wkn: "840400"
          entryQuote: 99.999999
          isin: DE0008404005
          quoteDate: 2018-01-01 00:00:00.000
          profitOrLoss: 99.999999
      properties:
        securities:
          description: |-
            <strong>Type:</strong> Security<br/>
            List of securities
          items:
            $ref: '#/components/schemas/Security'
          type: array
        paging:
          allOf:
          - $ref: '#/components/schemas/Paging'
          description: |-
            <strong>Type:</strong> Paging<br/>
            Information for pagination
          type: object
      required:
      - paging
      - securities
      type: object
    PageableStandingOrderResources:
      description: Standing order resources with paging information
      example:
        paging: '{}'
        standingOrders:
        - amount: 99.99
          bankMessage: bankMessage
          endDate: 2023-01-01 00.00.00.000
          dayOfExecution: 31
          frequency: MONTHLY
          accountId: 1
          iban: iban
          requestDate: 2019-01-01 00:00:00.000
          currency: EUR
          id: 1
          startDate: 2023-01-01 00.00.00.000
          requestCompletionDate: 2019-01-01 00:00:00.000
          status: OPEN
        - amount: 99.99
          bankMessage: bankMessage
          endDate: 2023-01-01 00.00.00.000
          dayOfExecution: 31
          frequency: MONTHLY
          accountId: 1
          iban: iban
          requestDate: 2019-01-01 00:00:00.000
          currency: EUR
          id: 1
          startDate: 2023-01-01 00.00.00.000
          requestCompletionDate: 2019-01-01 00:00:00.000
          status: OPEN
      properties:
        standingOrders:
          description: |-
            <strong>Type:</strong> StandingOrder<br/>
            List of standing orders
          items:
            $ref: '#/components/schemas/StandingOrder'
          type: array
        paging:
          allOf:
          - $ref: '#/components/schemas/Paging'
          description: |-
            <strong>Type:</strong> Paging<br/>
            Information for pagination
          type: object
      required:
      - paging
      - standingOrders
      type: object
    PageableTppAuthenticationGroupResources:
      description: TPP Authentication groups with paging information
      example:
        tppAuthenticationGroups:
        - name: AirBank XS2A CZ
          id: 1
        - name: AirBank XS2A CZ
          id: 1
        paging: '{}'
      properties:
        tppAuthenticationGroups:
          description: |-
            <strong>Type:</strong> TppAuthenticationGroup<br/>
            List of received TPP authentication groups
          items:
            $ref: '#/components/schemas/TppAuthenticationGroup'
          type: array
        paging:
          allOf:
          - $ref: '#/components/schemas/Paging'
          description: |-
            <strong>Type:</strong> Paging<br/>
            Information for pagination
          type: object
      required:
      - paging
      - tppAuthenticationGroups
      type: object
    PageableTppCertificateList:
      description: Container for bank certificate information with paging information
      example:
        paging: '{}'
        tppCertificates:
        - validUntil: 2019-07-20
          id: 1
          label: Global QWAC till 2022
          validFrom: 2019-07-20
          certificateType: QWAC
        - validUntil: 2019-07-20
          id: 1
          label: Global QWAC till 2022
          validFrom: 2019-07-20
          certificateType: QWAC
      properties:
        paging:
          allOf:
          - $ref: '#/components/schemas/Paging'
          description: |-
            <strong>Type:</strong> Paging<br/>
            Information for pagination
          type: object
        tppCertificates:
          description: |-
            <strong>Type:</strong> TppCertificate<br/>
            List of certificates
          items:
            $ref: '#/components/schemas/TppCertificate'
          type: array
      required:
      - paging
      - tppCertificates
      type: object
    PageableTppCredentialResources:
      description: Container for TPP client credentials information with paging information
      example:
        tppCredentials:
        - validUntil: 2019-07-20
          id: 1
          label: Credentials for imperial bank
          validFrom: 2019-07-20
          tppAuthenticationGroupId: 1
        - validUntil: 2019-07-20
          id: 1
          label: Credentials for imperial bank
          validFrom: 2019-07-20
          tppAuthenticationGroupId: 1
        paging: '{}'
      properties:
        paging:
          allOf:
          - $ref: '#/components/schemas/Paging'
          description: |-
            <strong>Type:</strong> Paging<br/>
            Information for pagination
          type: object
        tppCredentials:
          description: |-
            <strong>Type:</strong> TppCredentials<br/>
            List of TPP client credentials
          items:
            $ref: '#/components/schemas/TppCredentials'
          type: array
      required:
      - paging
      - tppCredentials
      type: object
    PageableTransactionList:
      description: Container for a page of transactions, with data about the total
        count of transactions and their balance with paging information
      example:
        income: 0.8008281904610115
        spending: 6.027456183070403
        balance: 1.4658129805029452
        paging: '{}'
        transactions:
        - purpose: Restaurantbesuch
          counterpartName: Bar Centrale
          primanota: Primanota
          bankTransactionCode: PMNT-RCDT-SALA
          isPotentialDuplicate: false
          counterpartIban: DE13700800000061110500
          isAdjustingEntry: false
          type: Überweisungsauftrag
          sepaPurposeCode: OTHR
          counterpartBlz: "70080000"
          children:
          - 1
          - 2
          - 3
          importDate: 2018-01-01 00:00:00.000
          bankBookingDate: 2018-01-01 00.00.00.000
          currency: EUR
          id: 1
          counterpartMandateReference: MR123
          originalCurrency: EUR
          counterpartBic: DRESDEFF700
          amount: -99.99
          counterpartDebitorId: CRI098
          counterpartCustomerReference: CUR123
          differentCreditor: DIFC98450
          counterpartCreditorId: CRI123
          endToEndReference: "001100550526"
          compensationAmount: -1.11
          valueDate: 2018-01-01 00:00:00.000
          isNew: true
          paypalData: '{}'
          differentDebitor: DIFD70204
          parentId: 2
          counterpartBankName: Commerzbank vormals Dresdner Bank
          labels:
          - name: test
            id: 1
          - name: test
            id: 1
          accountId: 1
          finapiBookingDate: 2018-01-01 00:00:00.000
          typeCodeZka: "999"
          originalAmount: -9.99
          typeCodeSwift: RAPRDE51
          counterpartAccountNumber: "0061110500"
          category: '{}'
        - purpose: Restaurantbesuch
          counterpartName: Bar Centrale
          primanota: Primanota
          bankTransactionCode: PMNT-RCDT-SALA
          isPotentialDuplicate: false
          counterpartIban: DE13700800000061110500
          isAdjustingEntry: false
          type: Überweisungsauftrag
          sepaPurposeCode: OTHR
          counterpartBlz: "70080000"
          children:
          - 1
          - 2
          - 3
          importDate: 2018-01-01 00:00:00.000
          bankBookingDate: 2018-01-01 00.00.00.000
          currency: EUR
          id: 1
          counterpartMandateReference: MR123
          originalCurrency: EUR
          counterpartBic: DRESDEFF700
          amount: -99.99
          counterpartDebitorId: CRI098
          counterpartCustomerReference: CUR123
          differentCreditor: DIFC98450
          counterpartCreditorId: CRI123
          endToEndReference: "001100550526"
          compensationAmount: -1.11
          valueDate: 2018-01-01 00:00:00.000
          isNew: true
          paypalData: '{}'
          differentDebitor: DIFD70204
          parentId: 2
          counterpartBankName: Commerzbank vormals Dresdner Bank
          labels:
          - name: test
            id: 1
          - name: test
            id: 1
          accountId: 1
          finapiBookingDate: 2018-01-01 00:00:00.000
          typeCodeZka: "999"
          originalAmount: -9.99
          typeCodeSwift: RAPRDE51
          counterpartAccountNumber: "0061110500"
          category: '{}'
      properties:
        transactions:
          description: |-
            <strong>Type:</strong> Transaction<br/>
            Array of transactions (for the requested page)
          items:
            $ref: '#/components/schemas/Transaction'
          type: array
        paging:
          allOf:
          - $ref: '#/components/schemas/Paging'
          description: |-
            <strong>Type:</strong> Paging<br/>
            Information for pagination
          type: object
        income:
          description: The total income of all transactions (across all pages)
          type: number
        spending:
          description: The total spending of all transactions (across all pages)
          type: number
        balance:
          description: The total sum of all transactions (across all pages)
          type: number
      required:
      - balance
      - income
      - paging
      - spending
      - transactions
      type: object
    PageableUserInfoList:
      description: Container for users information with paging information
      example:
        paging: '{}'
        users:
        - deletionDate: 2018-01-31
          isLocked: false
          registrationDate: 2018-01-01
          lastActiveDate: 2018-01-31
          monthlyStats:
          - maxBankConnectionCount: 5
            month: 2018-01
            minBankConnectionCount: 1
          - maxBankConnectionCount: 5
            month: 2018-01
            minBankConnectionCount: 1
          userId: "1"
          latestBankConnectionImportDate: 2018-01-01
          latestBankConnectionDeletionDate: 2018-01-31
          bankConnectionCount: 5
        - deletionDate: 2018-01-31
          isLocked: false
          registrationDate: 2018-01-01
          lastActiveDate: 2018-01-31
          monthlyStats:
          - maxBankConnectionCount: 5
            month: 2018-01
            minBankConnectionCount: 1
          - maxBankConnectionCount: 5
            month: 2018-01
            minBankConnectionCount: 1
          userId: "1"
          latestBankConnectionImportDate: 2018-01-01
          latestBankConnectionDeletionDate: 2018-01-31
          bankConnectionCount: 5
      properties:
        users:
          description: |-
            <strong>Type:</strong> UserInfo<br/>
            List of users information
          items:
            $ref: '#/components/schemas/UserInfo'
          type: array
        paging:
          allOf:
          - $ref: '#/components/schemas/Paging'
          description: |-
            <strong>Type:</strong> Paging<br/>
            Information for pagination
          type: object
      required:
      - paging
      - users
      type: object
    Paging:
      description: Container for pagination information
      properties:
        page:
          description: Current page number
          example: 1
          format: int32
          minimum: 1
          type: integer
        perPage:
          description: Current page size (number of entries in this page)
          example: 20
          format: int32
          minimum: 1
          type: integer
        pageCount:
          description: Total number of pages
          example: 10
          format: int32
          minimum: 0
          type: integer
        totalCount:
          description: Total number of entries across all pages
          example: 200
          format: int64
          minimum: 0
          type: integer
      required:
      - page
      - pageCount
      - perPage
      - totalCount
      type: object
    PasswordChangingResource:
      description: Password changing details
      example:
        passwordChangeToken: EnCRyPTEDPassWordCHAnGEToKen==
        userEmail: email@localhost.de
        userId: username
      properties:
        userId:
          description: User identifier
          example: username
          type: string
        userEmail:
          description: User's email, encrypted. Decrypt with your data decryption
            key. If the user has no email set, then this field will be null.
          example: email@localhost.de
          nullable: true
          type: string
        passwordChangeToken:
          description: Encrypted password change token. Decrypt this token with your
            data decryption key, and pass the decrypted token to the /users/executePasswordChange
            service to set a new password for the user.
          example: EnCRyPTEDPassWordCHAnGEToKen==
          type: string
      required:
      - passwordChangeToken
      - userEmail
      - userId
      type: object
    Payment:
      description: Container for a payment's data
      example:
        accountId: 1
        amount: 99.99
        bankMessage: bankMessage
        instructedExecutionDate: 2019-01-01
        iban: DE89370400440532013000
        orderCount: 1
        requestDate: 2019-01-01 00:00:00.000
        executionDate: 2019-01-01 00:00:00.000
        id: 1
        type: MONEY_TRANSFER
        status: OPEN
      properties:
        id:
          description: Payment identifier
          example: 1
          format: int64
          type: integer
        accountId:
          description: Identifier of the account to which this payment relates. This
            field is only set if it was specified upon creation of the payment.
          example: 1
          format: int64
          nullable: true
          type: integer
        iban:
          description: IBAN of the account to which this payment relates. This field
            is only set if it was specified upon creation of the payment.
          example: DE89370400440532013000
          nullable: true
          type: string
        type:
          allOf:
          - $ref: '#/components/schemas/PaymentType'
          description: |-
            <strong>Type:</strong> PaymentType<br/>
            Payment type
          example: MONEY_TRANSFER
        amount:
          description: Total money amount of the payment order(s), as absolute value
          example: 99.99
          type: number
        orderCount:
          description: Total count of orders included in this payment
          example: 1
          format: int32
          type: integer
        status:
          allOf:
          - $ref: '#/components/schemas/OrderInitiationStatus'
          description: |-
            <strong>Type:</strong> OrderInitiationStatus<br/>
            Current payment status:<br/> &bull; OPEN: means that this payment has been created in finAPI, but not yet submitted to the bank.<br/> &bull; PENDING: means that this payment has been requested at the bank,  but has not been confirmed yet.<br/> &bull; SUCCESSFUL: means that this payment has been successfully initiated.<br/> &bull; NOT_SUCCESSFUL: means that this payment could not be initiated successfully.<br/> &bull; DISCARDED: means that this payment was discarded, either because another payment was requested for the same account before this payment was initiated and the bank does not support this, or because the user has aborted the initiation (when using finAPI's Web Form).
          example: OPEN
        bankMessage:
          description: 'The bank''s response to the most recent request for this payment.
            Possible requests are: Initial submission of the payment, execution request
            or subsequent status checks. Note that this field may not always (or never)
            be set. Also, as long as the payment has not reached its final status,
            this field can always change.'
          nullable: true
          type: string
        requestDate:
          description: Time of when finAPI submitted this payment to the bank, in
            the format 'YYYY-MM-DD HH:MM:SS.SSS' (german time)
          example: 2019-01-01 00:00:00.000
          nullable: true
          type: string
        executionDate:
          description: Time of when the execution of this payment has completed, in
            the format 'YYYY-MM-DD HH:MM:SS.SSS' (german time).<br/><br/>Note:<br/>&bull;
            When the execution of a payment has completed, it does not necessarily
            mean that the payment was successful. Please refer to the payment 'status'
            for its final status.<br/>&bull; The execution date may deviate from the
            date when the bank will actually book the payment (for example if the
            'instructedExecutionDate' is in the future).
          example: 2019-01-01 00:00:00.000
          nullable: true
          type: string
        instructedExecutionDate:
          description: The date that was specified as 'executionDate' upon creation
            of the payment, in the format 'YYYY-MM-DD'. This field may not be set
            if no 'executionDate' was specified upon payment creation.
          example: 2019-01-01
          nullable: true
          type: string
      required:
      - accountId
      - amount
      - bankMessage
      - executionDate
      - iban
      - id
      - instructedExecutionDate
      - orderCount
      - requestDate
      - status
      - type
      type: object
    PaymentExecutionResponse:
      description: Bank server's response to Money Transfer / Direct Debit execution
      example:
        warnMessage: Es liegen Warnungen vor.
        paymentId: 1
        successMessage: Auftrag ausgeführt.
      properties:
        successMessage:
          description: Technical message from the bank server, confirming the success
            of the request. Typically, you would not want to present this message
            to the user. Note that this field may not be set. However if it is not
            set, it does not necessarily mean that there was an error in processing
            the request.
          example: Auftrag ausgeführt.
          nullable: true
          type: string
        warnMessage:
          description: In some cases, a bank server may accept the requested order,
            but return a warn message. This message may be of technical nature, but
            could also be of interest to the user.
          example: Es liegen Warnungen vor.
          nullable: true
          type: string
        paymentId:
          description: Payment identifier. Can be used to retrieve the status of the
            payment (see 'Get payments' service).
          example: 1
          format: int64
          type: integer
      required:
      - paymentId
      - successMessage
      - warnMessage
      type: object
    PaymentType:
      enum:
      - MONEY_TRANSFER
      - DIRECT_DEBIT
      type: string
    PaypalTransactionData:
      description: Additional, PayPal-specific transaction data. This field is only
        set for transactions that belong to an account of the PayPal bank.
      properties:
        invoiceNumber:
          description: Invoice Number.
          example: INV2-KXVU-7Z64-DT6W-MG2X
          nullable: true
          type: string
        fee:
          description: Fee value.
          example: -0.99
          nullable: true
          type: number
        net:
          description: Net value.
          example: 9.99
          nullable: true
          type: number
        auctionSite:
          description: THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/><br/> Auction
            Site.
          example: eBay
          nullable: true
          type: string
      required:
      - auctionSite
      - fee
      - invoiceNumber
      - net
      type: object
    PreferredConsentType:
      enum:
      - ONETIME
      - RECURRING
      type: string
    Product:
      enum:
      - ACCESS
      - DATA_INTELLIGENCE
      - WEB_FORM
      - GIRO_IDENT
      type: string
    RemoveInterfaceParams:
      description: Container for interface removal parameters
      example:
        bankConnectionId: 1
        interface: FINTS_SERVER
      properties:
        bankConnectionId:
          description: Bank connection identifier
          example: 1
          format: int64
          type: integer
        interface:
          allOf:
          - $ref: '#/components/schemas/BankingInterface'
          description: |-
            <strong>Type:</strong> BankingInterface<br/>
            The interface which you want to remove.
          example: FINTS_SERVER
      required:
      - bankConnectionId
      type: object
    RequestPasswordChangeParams:
      description: Request password change parameters
      example:
        userId: username
      properties:
        userId:
          description: User identifier
          example: username
          pattern: '[a-zA-Z0-9\-_\.\+@]*'
          type: string
      required:
      - userId
      type: object
    RequestSepaDirectDebitParams:
      description: Parameters for a single or collective SEPA direct debit order request
      example:
        accountId: 1
        singleBooking: false
        directDebits:
        - sepaPurposeCode: OTHR
          amount: 99.99
          purpose: Test Payment
          debitorIban: DE13700800000061110500
          mandateId: "1"
          debitorBic: DRESDEFF700
          mandateDate: 2018-01-01
          endToEndId: "001100550526"
          creditorId: DE02ABC01234567890
          debitorName: Debitor
        - sepaPurposeCode: OTHR
          amount: 99.99
          purpose: Test Payment
          debitorIban: DE13700800000061110500
          mandateId: "1"
          debitorBic: DRESDEFF700
          mandateDate: 2018-01-01
          endToEndId: "001100550526"
          creditorId: DE02ABC01234567890
          debitorName: Debitor
        multiStepAuthentication: '{}'
        executionDate: 2018-01-01
        hideTransactionDetailsInWebForm: false
        bankingPin: "123456"
        storePin: true
        directDebitType: B2B
        storeSecrets: true
        twoStepProcedureId: "955"
        sequenceType: OOFF
      properties:
        accountId:
          description: Identifier of the bank account to which you want to transfer
            the money.
          example: 1
          format: int64
          type: integer
        bankingPin:
          description: 'Online banking PIN. Any symbols are allowed. Max length: 170.
            If a PIN is stored in the bank connection, then this field may remain
            unset. If finAPI''s Web Form is not required and the field is set though
            then it will always be used (even if there is some other PIN stored in
            the bank connection). If you want the user to enter a PIN in finAPI''s
            Web Form even when a PIN is stored, then just set the field to any value,
            so that the service recognizes that you wish to use the Web Form flow.'
          example: "123456"
          type: string
        storeSecrets:
          default: false
          description: Whether to store the PIN. If the PIN is stored, it is not required
            to pass the PIN again when executing SEPA orders. Default value is 'false'.
            <br/><br/>NOTES:<br/> - before you set this field to true, please regard
            the 'pinsAreVolatile' flag of the bank connection that the account belongs
            to. Please note that volatile credentials will not be stored, even if
            provided, to enforce user involvement in the next communication with the
            bank;<br/> - this field is ignored in case when the user will need to
            use finAPI's Web Form. The user will be able to decide whether to store
            the PIN or not in the Web Form, depending on the 'storeSecretsAvailableInWebForm'
            setting (see Client Configuration).
          example: true
          type: boolean
        twoStepProcedureId:
          description: The bank-given ID of the two-step-procedure that should be
            used for the order. For a list of available two-step-procedures, see the
            corresponding bank connection (GET /bankConnections). If this field is
            not set, then the bank connection's default two-step-procedure will be
            used. Note that in this case, when the bank connection has no default
            two-step-procedure set, then the response of the service depends on whether
            you need to use finAPI's Web Form or not. If you need to use the Web Form,
            the user will be prompted to select the two-step-procedure within the
            Web Form. If you don't need to use the Web Form, then the service will
            return an error (passing a value for this field is required in this case).
          example: "955"
          type: string
        directDebitType:
          allOf:
          - $ref: '#/components/schemas/DirectDebitType'
          description: |-
            <strong>Type:</strong> DirectDebitType<br/>
            Type of the direct debit; either <code>BASIC</code> or <code>B2B</code> (Business-To-Business). Please note that an account which supports the basic type must not necessarily support B2B (or vice versa). Check the source account's 'supportedOrders' field to find out which types of direct debit it supports.<br/><br/>
          example: B2B
        sequenceType:
          allOf:
          - $ref: '#/components/schemas/DirectDebitSequenceType'
          description: |-
            <strong>Type:</strong> DirectDebitSequenceType<br/>
            Sequence type of the direct debit. Possible values:<br/><br/>&bull; <code>OOFF</code> - means that this is a one-time direct debit order<br/>&bull; <code>FRST</code> - means that this is the first in a row of multiple direct debit orders<br/>&bull; <code>RCUR</code> - means that this is one (but not the first or final) within a row of multiple direct debit orders<br/>&bull; <code>FNAL</code> - means that this is the final in a row of multiple direct debit orders<br/><br/>
          example: OOFF
        executionDate:
          description: Execution date for the direct debit(s), in the format 'YYYY-MM-DD'.
          example: 2018-01-01
          type: string
        singleBooking:
          default: false
          description: This field is only regarded when you pass multiple orders.
            It determines whether the orders should be processed by the bank as one
            collective booking (in case of 'false'), or as single bookings (in case
            of 'true'). Default value is 'false'.
          example: false
          type: boolean
        directDebits:
          description: |-
            <strong>Type:</strong> SingleDirectDebitData<br/>
            List of the direct debits that you want to execute (may contain at most 15000 items). Please check the account's 'supportedOrders' field to find out whether you can pass multiple direct debits or just one.
          items:
            $ref: '#/components/schemas/SingleDirectDebitData'
          type: array
        hideTransactionDetailsInWebForm:
          default: false
          description: Whether the finAPI Web Form should hide transaction details
            when prompting the caller for the second factor. Default value is false.
          example: false
          type: boolean
        multiStepAuthentication:
          allOf:
          - $ref: '#/components/schemas/MultiStepAuthenticationCallback'
          description: |-
            <strong>Type:</strong> MultiStepAuthenticationCallback<br/>
            Container for multi-step authentication data. Required when a previous service call initiated a multi-step authentication.
          type: object
        storePin:
          default: false
          description: THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
            to the 'storeSecrets' field instead.<br/><br/>Whether to store the PIN.
            If the PIN is stored, it is not required to pass the PIN again when executing
            SEPA orders. Default value is 'false'. <br/><br/>NOTES:<br/> - before
            you set this field to true, please regard the 'pinsAreVolatile' flag of
            the bank connection that the account belongs to. Please note that volatile
            credentials will not be stored, even if provided, to enforce user involvement
            in the next communication with the bank;<br/> - this field is ignored
            in case when the user will need to use finAPI's Web Form. The user will
            be able to decide whether to store the PIN or not in the Web Form, depending
            on the 'storeSecretsAvailableInWebForm' setting (see Client Configuration).
          example: true
          type: boolean
      required:
      - accountId
      - directDebitType
      - directDebits
      - executionDate
      - sequenceType
      type: object
    RequestSepaMoneyTransferParams:
      description: Parameters for a single or collective SEPA money transfer order
        request
      example:
        amount: 99.99
        singleBooking: false
        challengeResponse: "0123"
        recipientIban: DE13700800000061110500
        multiStepAuthentication: '{}'
        purpose: Test Payment
        executionDate: 2018-01-01
        hideTransactionDetailsInWebForm: false
        endToEndId: "001100550526"
        storePin: true
        sepaPurposeCode: OTHR
        accountId: 1
        clearingAccountId: BA-TUYEF7D24CGK6
        additionalMoneyTransfers:
        - sepaPurposeCode: OTHR
          amount: 99.99
          recipientIban: DE13700800000061110500
          clearingAccountId: BA-TUYEF7D24CGK6
          purpose: Test Payment
          recipientName: Max Mustermann
          endToEndId: "001100550526"
          recipientBic: DRESDEFF700
        - sepaPurposeCode: OTHR
          amount: 99.99
          recipientIban: DE13700800000061110500
          clearingAccountId: BA-TUYEF7D24CGK6
          purpose: Test Payment
          recipientName: Max Mustermann
          endToEndId: "001100550526"
          recipientBic: DRESDEFF700
        recipientName: Max Mustermann
        bankingPin: "123456"
        recipientBic: DRESDEFF700
        storeSecrets: true
        twoStepProcedureId: "955"
      properties:
        recipientName:
          description: 'Name of the recipient. Note: Neither finAPI nor the involved
            bank servers are guaranteed to validate the recipient name. Even if the
            recipient name does not depict the actual registered account holder of
            the specified recipient account, the money transfer request might still
            be successful. This field is optional only when you pass a clearing account
            as the recipient. Otherwise, this field is required.'
          example: Max Mustermann
          type: string
        recipientIban:
          description: IBAN of the recipient's account. This field is optional only
            when you pass a clearing account as the recipient. Otherwise, this field
            is required.
          example: DE13700800000061110500
          type: string
        recipientBic:
          description: 'BIC of the recipient''s account. Note: This field is optional
            when you pass a clearing account as the recipient or if the bank connection
            of the account that you want to transfer money from supports the IBAN-Only
            money transfer. You can find this out via GET /bankConnections/<id>. If
            no BIC is given, finAPI will try to recognize it using the given recipientIban
            value (if it''s given). And then if the result value is not empty, it
            will be used for the money transfer request independent of whether it
            is required or not (unless you pass a clearing account, in which case
            the value will always be ignored).'
          example: DRESDEFF700
          type: string
        clearingAccountId:
          description: Identifier of a clearing account. If this field is set, then
            the fields 'recipientName', 'recipientIban' and 'recipientBic' will be
            ignored and the recipient account will be the specified clearing account.
          example: BA-TUYEF7D24CGK6
          type: string
        endToEndId:
          description: End-To-End ID for the transfer transaction
          example: "001100550526"
          type: string
        amount:
          description: The amount to transfer. Must be a positive decimal number with
            at most two decimal places (e.g. 99.99)
          example: 99.99
          type: number
        purpose:
          description: The purpose of the transfer transaction
          example: Test Payment
          type: string
        sepaPurposeCode:
          description: SEPA purpose code, according to ISO 20022, external codes set.
          example: OTHR
          type: string
        accountId:
          description: Identifier of the bank account that you want to transfer money
            from
          example: 1
          format: int64
          type: integer
        bankingPin:
          description: 'Online banking PIN. Any symbols are allowed. Max length: 170.
            If a PIN is stored in the bank connection, then this field may remain
            unset. If finAPI''s Web Form is not required and the field is set though
            then it will always be used (even if there is some other PIN stored in
            the bank connection). If you want the user to enter a PIN in finAPI''s
            Web Form even when a PIN is stored, then just set the field to any value,
            so that the service recognizes that you wish to use the Web Form flow.'
          example: "123456"
          type: string
        storeSecrets:
          default: false
          description: Whether to store the PIN. If the PIN is stored, it is not required
            to pass the PIN again when executing SEPA orders. Default value is 'false'.
            <br/><br/>NOTES:<br/> - before you set this field to true, please regard
            the 'pinsAreVolatile' flag of the bank connection that the account belongs
            to. Please note that volatile credentials will not be stored, even if
            provided, to enforce user involvement in the next communication with the
            bank;<br/> - this field is ignored in case when the user will need to
            use finAPI's Web Form. The user will be able to decide whether to store
            the PIN or not in the Web Form, depending on the 'storeSecretsAvailableInWebForm'
            setting (see Client Configuration).
          example: true
          type: boolean
        twoStepProcedureId:
          description: The bank-given ID of the two-step-procedure that should be
            used for the order. For a list of available two-step-procedures, see the
            corresponding bank connection (GET /bankConnections). If this field is
            not set, then the bank connection's default two-step-procedure will be
            used. Note that in this case, when the bank connection has no default
            two-step-procedure set, then the response of the service depends on whether
            you need to use finAPI's Web Form or not. If you need to use the Web Form,
            the user will be prompted to select the two-step-procedure within the
            Web Form. If you don't need to use the Web Form, then the service will
            return an error (passing a value for this field is required in this case).
          example: "955"
          type: string
        executionDate:
          description: Execution date for the money transfer(s), in the format 'YYYY-MM-DD'.
            If not specified, then the current date will be used.
          example: 2018-01-01
          type: string
        singleBooking:
          default: false
          description: This field is only regarded when you pass multiple orders.
            It determines whether the orders should be processed by the bank as one
            collective booking (in case of 'false'), or as single bookings (in case
            of 'true'). Default value is 'false'.
          example: false
          type: boolean
        additionalMoneyTransfers:
          description: |-
            <strong>Type:</strong> SingleMoneyTransferRecipientData<br/>
            In case that you want to submit not just a single money transfer, but do a collective money transfer, use this field to pass a list of additional money transfer orders. The service will then pass a collective money transfer request to the bank, including both the money transfer specified on the top-level, as well as all money transfers specified in this list. The maximum count of money transfers that you can pass (in total) is 15000. Note that you should check the account's 'supportedOrders' field to find out whether or not it is supporting collective money transfers.
          items:
            $ref: '#/components/schemas/SingleMoneyTransferRecipientData'
          type: array
        challengeResponse:
          description: THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
            to the 'multiStepAuthentication' field instead.<br/><br/>Challenge response.
            This field should be set only when the previous attempt to request a SEPA
            money transfer failed with HTTP code 510, i.e. the bank sent a challenge
            for the user for an additional authentication. In this case, this field
            must contain the response to the bank's challenge. Please note that in
            case of using finAPI's Web Form you have to leave this field unset and
            the application will automatically recognize that the user has to input
            challenge response and then a Web Form will be shown to the user.
          example: "0123"
          type: string
        hideTransactionDetailsInWebForm:
          default: false
          description: Whether the finAPI Web Form should hide transaction details
            when prompting the caller for the second factor. Default value is false.
          example: false
          type: boolean
        multiStepAuthentication:
          allOf:
          - $ref: '#/components/schemas/MultiStepAuthenticationCallback'
          description: |-
            <strong>Type:</strong> MultiStepAuthenticationCallback<br/>
            Container for multi-step authentication data. Required when a previous service call initiated a multi-step authentication.
          type: object
        storePin:
          default: false
          description: THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
            to the 'storeSecrets' field instead.<br/><br/>Whether to store the PIN.
            If the PIN is stored, it is not required to pass the PIN again when executing
            SEPA orders. Default value is 'false'. <br/><br/>NOTES:<br/> - before
            you set this field to true, please regard the 'pinsAreVolatile' flag of
            the bank connection that the account belongs to. Please note that volatile
            credentials will not be stored, even if provided, to enforce user involvement
            in the next communication with the bank;<br/> - this field is ignored
            in case when the user will need to use finAPI's Web Form. The user will
            be able to decide whether to store the PIN or not in the Web Form, depending
            on the 'storeSecretsAvailableInWebForm' setting (see Client Configuration).
          example: true
          type: boolean
      required:
      - accountId
      - amount
      type: object
    Security:
      description: Container for a security position's data
      example:
        marketValueCurrency: EUR
        marketValue: 99.999999
        quoteType: ACTU
        quoteCurrency: EUR
        accountId: 1
        entryQuoteCurrency: EUR
        quantityNominal: 99.999999
        quote: 99.999999
        quantityNominalType: UNIT
        name: Wertapapierbezeichnung
        id: 1
        wkn: "840400"
        entryQuote: 99.999999
        isin: DE0008404005
        quoteDate: 2018-01-01 00:00:00.000
        profitOrLoss: 99.999999
      properties:
        id:
          description: 'Identifier. Note: Whenever a security account is being updated,
            its security positions will be internally re-created, meaning that the
            identifier of a security position might change over time.'
          example: 1
          format: int64
          type: integer
        accountId:
          description: Security account identifier
          example: 1
          format: int64
          type: integer
        name:
          description: Name
          example: Wertapapierbezeichnung
          nullable: true
          type: string
        isin:
          description: ISIN
          example: DE0008404005
          nullable: true
          type: string
        wkn:
          description: WKN
          example: "840400"
          nullable: true
          type: string
        quote:
          description: Quote
          example: 99.999999
          nullable: true
          type: number
        quoteCurrency:
          description: Currency of quote
          example: EUR
          nullable: true
          type: string
        quoteType:
          allOf:
          - $ref: '#/components/schemas/SecurityPositionQuoteType'
          description: |-
            <strong>Type:</strong> SecurityPositionQuoteType<br/>
            Type of quote. 'PERC' if quote is a percentage value, 'ACTU' if quote is the actual amount
          example: ACTU
          nullable: true
        quoteDate:
          description: Quote date in the format 'YYYY-MM-DD HH:MM:SS.SSS' (german
            time).
          example: 2018-01-01 00:00:00.000
          nullable: true
          type: string
        quantityNominal:
          description: Value of quantity or nominal
          example: 99.999999
          nullable: true
          type: number
        quantityNominalType:
          allOf:
          - $ref: '#/components/schemas/SecurityPositionQuantityNominalType'
          description: |-
            <strong>Type:</strong> SecurityPositionQuantityNominalType<br/>
            Type of quantity or nominal value. 'UNIT' if value is a quantity, 'FAMT' if value is the nominal amount
          example: UNIT
          nullable: true
        marketValue:
          description: Market value
          example: 99.999999
          nullable: true
          type: number
        marketValueCurrency:
          description: Currency of market value
          example: EUR
          nullable: true
          type: string
        entryQuote:
          description: Entry quote
          example: 99.999999
          nullable: true
          type: number
        entryQuoteCurrency:
          description: Currency of entry quote
          example: EUR
          nullable: true
          type: string
        profitOrLoss:
          description: Current profit or loss
          example: 99.999999
          nullable: true
          type: number
      required:
      - accountId
      - entryQuote
      - entryQuoteCurrency
      - id
      - isin
      - marketValue
      - marketValueCurrency
      - name
      - profitOrLoss
      - quantityNominal
      - quantityNominalType
      - quote
      - quoteCurrency
      - quoteDate
      - quoteType
      - wkn
      type: object
    SecurityList:
      description: Container for securities resources
      example:
        securities:
        - marketValueCurrency: EUR
          marketValue: 99.999999
          quoteType: ACTU
          quoteCurrency: EUR
          accountId: 1
          entryQuoteCurrency: EUR
          quantityNominal: 99.999999
          quote: 99.999999
          quantityNominalType: UNIT
          name: Wertapapierbezeichnung
          id: 1
          wkn: "840400"
          entryQuote: 99.999999
          isin: DE0008404005
          quoteDate: 2018-01-01 00:00:00.000
          profitOrLoss: 99.999999
        - marketValueCurrency: EUR
          marketValue: 99.999999
          quoteType: ACTU
          quoteCurrency: EUR
          accountId: 1
          entryQuoteCurrency: EUR
          quantityNominal: 99.999999
          quote: 99.999999
          quantityNominalType: UNIT
          name: Wertapapierbezeichnung
          id: 1
          wkn: "840400"
          entryQuote: 99.999999
          isin: DE0008404005
          quoteDate: 2018-01-01 00:00:00.000
          profitOrLoss: 99.999999
      properties:
        securities:
          description: |-
            <strong>Type:</strong> Security<br/>
            List of securities
          items:
            $ref: '#/components/schemas/Security'
          type: array
      required:
      - securities
      type: object
    SecurityPositionQuantityNominalType:
      enum:
      - UNIT
      - FAMT
      type: string
    SecurityPositionQuoteType:
      enum:
      - ACTU
      - PERC
      type: string
    SingleDirectDebitData:
      description: Data for a single direct debit
      example:
        sepaPurposeCode: OTHR
        amount: 99.99
        purpose: Test Payment
        debitorIban: DE13700800000061110500
        mandateId: "1"
        debitorBic: DRESDEFF700
        mandateDate: 2018-01-01
        endToEndId: "001100550526"
        creditorId: DE02ABC01234567890
        debitorName: Debitor
      properties:
        debitorName:
          description: 'Name of the debitor. Note: Neither finAPI nor the involved
            bank servers are guaranteed to validate the debitor name. Even if the
            debitor name does not depict the actual registered account holder of the
            specified debitor account, the direct debit request might still be successful.'
          example: Debitor
          type: string
        debitorIban:
          description: IBAN of the debitor's account
          example: DE13700800000061110500
          type: string
        debitorBic:
          description: 'BIC of the debitor''s account. Note: This field is optional
            if - and only if - the bank connection of the account that you want to
            transfer money to supports the IBAN-Only direct debit. You can find this
            out via GET /bankConnections/<id>. If no BIC is given, finAPI will try
            to recognize it using the given debitorIban value (if it''s given). And
            then if the result value is not empty, it will be used for the direct
            debit request independent of whether it is required or not.'
          example: DRESDEFF700
          type: string
        amount:
          description: The amount to transfer. Must be a positive decimal number with
            at most two decimal places (e.g. 99.99)
          example: 99.99
          type: number
        purpose:
          description: The purpose of the transfer transaction
          example: Test Payment
          type: string
        sepaPurposeCode:
          description: SEPA purpose code, according to ISO 20022, external codes set.
          example: OTHR
          type: string
        mandateId:
          description: Mandate ID that this direct debit order is based on.
          example: "1"
          type: string
        mandateDate:
          description: Date of the mandate that this direct debit order is based on,
            in the format 'YYYY-MM-DD'
          example: 2018-01-01
          type: string
        creditorId:
          description: Creditor ID of the source account's holder
          example: DE02ABC01234567890
          type: string
        endToEndId:
          description: End-To-End ID for the transfer transaction
          example: "001100550526"
          type: string
      required:
      - amount
      - debitorIban
      - debitorName
      - mandateDate
      - mandateId
      type: object
    SingleMoneyTransferRecipientData:
      description: Recipient data for a single money transfer order
      example:
        sepaPurposeCode: OTHR
        amount: 99.99
        recipientIban: DE13700800000061110500
        clearingAccountId: BA-TUYEF7D24CGK6
        purpose: Test Payment
        recipientName: Max Mustermann
        endToEndId: "001100550526"
        recipientBic: DRESDEFF700
      properties:
        recipientName:
          description: 'Name of the recipient. Note: Neither finAPI nor the involved
            bank servers are guaranteed to validate the recipient name. Even if the
            recipient name does not depict the actual registered account holder of
            the specified recipient account, the money transfer request might still
            be successful. This field is optional only when you pass a clearing account
            as the recipient. Otherwise, this field is required.'
          example: Max Mustermann
          type: string
        recipientIban:
          description: IBAN of the recipient's account. This field is optional only
            when you pass a clearing account as the recipient. Otherwise, this field
            is required.
          example: DE13700800000061110500
          type: string
        recipientBic:
          description: 'BIC of the recipient''s account. Note: This field is optional
            when you pass a clearing account as the recipient or if the bank connection
            of the account that you want to transfer money from supports the IBAN-Only
            money transfer. You can find this out via GET /bankConnections/<id>. If
            no BIC is given, finAPI will try to recognize it using the given recipientIban
            value (if it''s given). And then if the result value is not empty, it
            will be used for the money transfer request independent of whether it
            is required or not (unless you pass a clearing account, in which case
            the value will always be ignored).'
          example: DRESDEFF700
          type: string
        clearingAccountId:
          description: Identifier of a clearing account. If this field is set, then
            the fields 'recipientName', 'recipientIban' and 'recipientBic' will be
            ignored and the recipient account will be the specified clearing account.
          example: BA-TUYEF7D24CGK6
          type: string
        endToEndId:
          description: End-To-End ID for the transfer transaction
          example: "001100550526"
          type: string
        amount:
          description: The amount to transfer. Must be a positive decimal number with
            at most two decimal places (e.g. 99.99)
          example: 99.99
          type: number
        purpose:
          description: The purpose of the transfer transaction
          example: Test Payment
          type: string
        sepaPurposeCode:
          description: SEPA purpose code, according to ISO 20022, external codes set.
          example: OTHR
          type: string
      required:
      - amount
      type: object
    SplitTransactionsParams:
      description: Set of logical sub-transactions that a transaction should get split
        into
      example:
        subTransactions:
        - amount: -99.99
          counterpartBlz: "70080000"
          labelIds:
          - 1
          - 2
          - 3
          purpose: Restaurantbesuch
          counterpart: TueV Bayern
          counterpartIban: DE13700800000061110500
          counterpartAccountNumber: "61110500"
          categoryId: 378
          counterpartBic: DRESDEFF700
        - amount: -99.99
          counterpartBlz: "70080000"
          labelIds:
          - 1
          - 2
          - 3
          purpose: Restaurantbesuch
          counterpart: TueV Bayern
          counterpartIban: DE13700800000061110500
          counterpartAccountNumber: "61110500"
          categoryId: 378
          counterpartBic: DRESDEFF700
      properties:
        subTransactions:
          description: |-
            <strong>Type:</strong> SubTransactionParams<br/>
            List of sub-transactions
          items:
            $ref: '#/components/schemas/SubTransactionParams'
          type: array
      required:
      - subTransactions
      type: object
    StandingOrder:
      description: Container for a standing order's data
      example:
        amount: 99.99
        bankMessage: bankMessage
        endDate: 2023-01-01 00.00.00.000
        dayOfExecution: 31
        frequency: MONTHLY
        accountId: 1
        iban: iban
        requestDate: 2019-01-01 00:00:00.000
        currency: EUR
        id: 1
        startDate: 2023-01-01 00.00.00.000
        requestCompletionDate: 2019-01-01 00:00:00.000
        status: OPEN
      properties:
        id:
          description: Standing order identifier
          example: 1
          format: int64
          type: integer
        accountId:
          description: Identifier of the account to which this standing order relates.
            This field is only set if it was specified upon creation of the standing
            order.
          example: 1
          format: int64
          nullable: true
          type: integer
        iban:
          description: IBAN of the account to which this standing order relates. This
            field is only set if it was specified upon creation of the standing order.
          nullable: true
          type: string
        amount:
          description: Amount of the standing order, as absolute value.
          example: 99.99
          type: number
        currency:
          allOf:
          - $ref: '#/components/schemas/Currency'
          description: |-
            <strong>Type:</strong> Currency<br/>
            The currency code of the 'amount', in the ISO 4217 Alpha 3 format.
          example: EUR
        startDate:
          description: Start date of the standing order, in the format 'YYYY-MM-DD
            HH:MM:SS.SSS' (german time).
          example: 2023-01-01 00.00.00.000
          type: string
        endDate:
          description: Termination date of the standing order, in the format 'YYYY-MM-DD
            HH:MM:SS.SSS' (german time). If this field is not set, then the standing
            order has no termination date.
          example: 2023-01-01 00.00.00.000
          nullable: true
          type: string
        frequency:
          allOf:
          - $ref: '#/components/schemas/StandingOrderFrequency'
          description: |-
            <strong>Type:</strong> StandingOrderFrequency<br/>
            The frequency of the standing order.
          example: MONTHLY
        dayOfExecution:
          description: Scheduled day of execution. '31' depicts ultimo.
          example: 31
          format: int32
          nullable: true
          type: integer
        requestDate:
          description: Time of when finAPI submitted this standing order to the bank,
            in the format 'YYYY-MM-DD HH:MM:SS.SSS' (german time)
          example: 2019-01-01 00:00:00.000
          nullable: true
          type: string
        requestCompletionDate:
          description: |-
            Time of when the submission of this standing order was finalized, in the format ‘YYYY-MM-DD HH:MM:SS.SSS' (german time).
            Note: When the submission of a standing order is finalized, it does not necessarily mean that the bank accepted the standing order. Please refer to the standing order’s 'status' for its final status.
          example: 2019-01-01 00:00:00.000
          nullable: true
          type: string
        status:
          allOf:
          - $ref: '#/components/schemas/OrderInitiationStatus'
          description: |-
            <strong>Type:</strong> OrderInitiationStatus<br/>
            Current standing order status:<br/> &bull; OPEN: means that this standing order has been created in finAPI, but not yet submitted to the bank.<br/> &bull; PENDING: means that this standing order has been submitted to the bank,  but has not been confirmed yet.<br/> &bull; SUCCESSFUL: means that this standing order has been successfully initiated.<br/> &bull; NOT_SUCCESSFUL: means that this standing order could not be initiated successfully.<br/> &bull; DISCARDED: means that this standing order was discarded, either because another standing order was requested for the same account before this standing order was initiated and the bank does not support this, or because the user has aborted the initiation (when using finAPI's Web Form).
          example: OPEN
        bankMessage:
          description: The bank's response to the most recent request for this standing
            order. Note that this field may not always (or never) be set. Also, as
            long as the standing order has not reached its final status, this field
            can always change.
          nullable: true
          type: string
      required:
      - accountId
      - amount
      - bankMessage
      - currency
      - dayOfExecution
      - endDate
      - frequency
      - iban
      - id
      - requestCompletionDate
      - requestDate
      - startDate
      - status
      type: object
    StandingOrderFrequency:
      enum:
      - MONTHLY
      - EVERY_TWO_MONTHS
      - QUARTERLY
      - SEMI_ANNUAL
      - ANNUAL
      type: string
    SubTransactionParams:
      description: Data of a sub-transaction
      example:
        amount: -99.99
        counterpartBlz: "70080000"
        labelIds:
        - 1
        - 2
        - 3
        purpose: Restaurantbesuch
        counterpart: TueV Bayern
        counterpartIban: DE13700800000061110500
        counterpartAccountNumber: "61110500"
        categoryId: 378
        counterpartBic: DRESDEFF700
      properties:
        amount:
          description: Amount
          example: -99.99
          type: number
        categoryId:
          description: Category identifier. If not specified, the original transaction's
            category will be applied. If you explicitly want the sub-transaction to
            have no category, then pass this field with value '0' (zero).
          example: 378
          format: int64
          type: integer
        purpose:
          description: Purpose. Maximum length is 2000. If not specified, the original
            transaction's value will be applied.
          example: Restaurantbesuch
          pattern: '[A-Za-z0-9¡-ʯ &\(\)\{\}\[\]\.:,;\?!\+\-_\$@#~`\^€]*'
          type: string
        counterpart:
          description: Counterpart. Maximum length is 80. If not specified, the original
            transaction's value will be applied.
          example: TueV Bayern
          pattern: '[A-Za-z0-9¡-ʯ &\(\)\{\}\[\]\.:,;\?!\+\-_\$@#~`\^€]*'
          type: string
        counterpartAccountNumber:
          description: Counterpart account number. If not specified, the original
            transaction's value will be applied.
          example: "61110500"
          pattern: '[A-Za-z0-9¡-ʯ &\(\)\{\}\[\]\.:,;\?!\+\-_\$@#~`\^€]*'
          type: string
        counterpartIban:
          description: Counterpart IBAN. If not specified, the original transaction's
            value will be applied.
          example: DE13700800000061110500
          type: string
        counterpartBic:
          description: Counterpart BIC. If not specified, the original transaction's
            value will be applied.
          example: DRESDEFF700
          type: string
        counterpartBlz:
          description: Counterpart BLZ. If not specified, the original transaction's
            value will be applied.
          example: "70080000"
          type: string
        labelIds:
          description: List of connected labels. Note that when this field is not
            specified, then the labels of the original transaction will NOT get applied
            to the sub-transaction. Instead, the sub-transaction will have no labels
            assigned to it.
          example:
          - 1
          - 2
          - 3
          items:
            format: int64
            type: integer
          type: array
      required:
      - amount
      type: object
    SubmitPaymentParams:
      description: Payment submission parameters
      example:
        redirectUrl: https://myapplication.com
        multiStepAuthentication: '{}'
        paymentId: 1
        hideTransactionDetailsInWebForm: false
        interface: FINTS_SERVER
        forceWebForm: false
        loginCredentials:
        - label: Onlinebanking-ID
          value: max.mustermann
        - label: Onlinebanking-ID
          value: max.mustermann
      properties:
        paymentId:
          description: Payment identifier
          example: 1
          format: int64
          type: integer
        interface:
          allOf:
          - $ref: '#/components/schemas/BankingInterface'
          description: |-
            <strong>Type:</strong> BankingInterface<br/>
            Bank interface. Possible values:<br><br>&bull; <code>FINTS_SERVER</code> - means that finAPI will execute the payment via the bank's FinTS interface.<br>&bull; <code>WEB_SCRAPER</code> - means that finAPI will parse data from the bank's online banking website.<br>&bull; <code>XS2A</code> - means that finAPI will execute the payment via the bank's XS2A interface.Please note that XS2A doesn't support direct debits yet. <br/>To determine what interface(s) you can choose to submit a payment, please refer to the field AccountInterface.capabilities of the account that is related to the payment, or if this is a standalone payment without a related account imported in finAPI, refer to the field BankInterface.isMoneyTransferSupported.<br/>For standalone money transfers (finAPI Payment product) in particular, we suggest to always use XS2A if supported, and only use FINTS_SERVER or WEB_SCRAPER as a fallback, because non-XS2A interfaces might require not just a single, but multiple authentications when submitting the payment.<br/>
          example: FINTS_SERVER
        loginCredentials:
          description: |-
            <strong>Type:</strong> LoginCredential<br/>
            Login credentials. May not be required when the credentials are stored in finAPI, or when the bank interface has no login credentials.
          items:
            $ref: '#/components/schemas/LoginCredential'
          type: array
        redirectUrl:
          description: Must only be passed when the used interface has the property
            REDIRECT_APPROACH. The user will be redirected to the given URL from the
            bank's website after completing the bank login and (possibly) the SCA.
          example: https://myapplication.com
          type: string
        multiStepAuthentication:
          allOf:
          - $ref: '#/components/schemas/MultiStepAuthenticationCallback'
          description: |-
            <strong>Type:</strong> MultiStepAuthenticationCallback<br/>
            Container for multi-step authentication data. Required when a previous service call initiated a multi-step authentication.
          type: object
        hideTransactionDetailsInWebForm:
          default: false
          description: THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
            to the 'hidePaymentSummary' field defined <a href='?product=web_form_2.0#post-/api/profiles'
            target='_blank'>here</a> instead<br/><br/>Whether the finAPI Web Form
            should hide transaction details when prompting the caller for the second
            factor. Default value is false.
          example: false
          type: boolean
        forceWebForm:
          default: false
          description: THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/><br/>If the
            user has stored credentials in finAPI for the account (resp. bank connection)
            that relates to the payment, then the finAPI Web Form will only be shown
            when the user must be involved for a second authentication, or when the
            previous connection to the bank via the selected interface had failed.
            However if you want to provide the Web Form to the user in any case, you
            can set this field to true. It will force the Web Form flow for the user
            and allow him to make changes to the data that he has stored in finAPI.
            Default value is 'false'.<br/>Note that this flag is irrelevant when submitting
            a standalone payment, as in this case there is no related data stored
            in finAPI.
          example: false
          type: boolean
      required:
      - interface
      - paymentId
      type: object
    SubmitStandingOrderParams:
      description: Standing order submission parameters
      example:
        redirectUrl: https://myapplication.com
        multiStepAuthentication: '{}'
        standingOrderId: 1
        interface: FINTS_SERVER
        loginCredentials:
        - label: Onlinebanking-ID
          value: max.mustermann
        - label: Onlinebanking-ID
          value: max.mustermann
      properties:
        standingOrderId:
          description: Standing order identifier
          example: 1
          format: int64
          type: integer
        interface:
          allOf:
          - $ref: '#/components/schemas/BankingInterface'
          description: |-
            <strong>Type:</strong> BankingInterface<br/>
            Bank interface. Possible values:<br><br>&bull; <code>FINTS_SERVER</code> - means that finAPI will execute the standing order via the bank's FinTS interface.<br>&bull; <code>WEB_SCRAPER</code> - means that finAPI will parse data from the bank's online banking website.<br>&bull; <code>XS2A</code> - means that finAPI will execute the standing order via the bank's XS2A interface.<br/>To determine what interface(s) you can choose to submit a standing order, please refer to the field paymentCapabilities.sepaStandingOrder in BankInterface.<br/>For standalone standing orders in particular, we suggest to always use XS2A if supported, and only use FINTS_SERVER or WEB_SCRAPER as a fallback, because non-XS2A interfaces might require not just a single, but multiple authentications when submitting the standing order.<br/>
          example: FINTS_SERVER
        loginCredentials:
          description: |-
            <strong>Type:</strong> LoginCredential<br/>
            Login credentials. May not be required when the credentials are stored in finAPI, or when the bank interface has no login credentials.
          items:
            $ref: '#/components/schemas/LoginCredential'
          type: array
        redirectUrl:
          description: Must only be passed when the used interface has the property
            REDIRECT_APPROACH. The user will be redirected to the given URL from the
            bank's website after completing the bank login and (possibly) the SCA.
          example: https://myapplication.com
          type: string
        multiStepAuthentication:
          allOf:
          - $ref: '#/components/schemas/MultiStepAuthenticationCallback'
          description: |-
            <strong>Type:</strong> MultiStepAuthenticationCallback<br/>
            Container for multi-step authentication data. Required when a previous service call initiated a multi-step authentication.
          type: object
      required:
      - interface
      - standingOrderId
      type: object
    SupportedDataSource:
      enum:
      - WEB_SCRAPER
      - FINTS_SERVER
      type: string
    SupportedOrder:
      enum:
      - SEPA_MONEY_TRANSFER
      - SEPA_COLLECTIVE_MONEY_TRANSFER
      - SEPA_BASIC_DIRECT_DEBIT
      - SEPA_BASIC_COLLECTIVE_DIRECT_DEBIT
      - SEPA_B2B_DIRECT_DEBIT
      - SEPA_B2B_COLLECTIVE_DIRECT_DEBIT
      type: string
    TppAuthenticationGroup:
      description: TPP authentication group represents certain bank group and contains
        a set of TPP credentials which can be used with bank interface connected to
        this group.
      example:
        name: AirBank XS2A CZ
        id: 1
      properties:
        id:
          description: TPP Authentication Group ID
          example: 1
          format: int64
          type: integer
        name:
          description: TPP Authentication Group name
          example: AirBank XS2A CZ
          type: string
      required:
      - id
      - name
      type: object
    TppCertificate:
      description: A container for the bank certificate's data
      example:
        validUntil: 2019-07-20
        id: 1
        label: Global QWAC till 2022
        validFrom: 2019-07-20
        certificateType: QWAC
      properties:
        id:
          description: A certificate identifier.
          example: 1
          format: int64
          type: integer
        certificateType:
          allOf:
          - $ref: '#/components/schemas/TppCertificateType'
          description: |-
            <strong>Type:</strong> TppCertificateType<br/>
            Type of certificate.
          example: QWAC
        label:
          description: Label of certificate.
          example: Global QWAC till 2022
          type: string
        validFrom:
          description: Valid from date in the format 'YYYY-MM-DD'.
          example: 2019-07-20
          type: string
        validUntil:
          description: Valid until date in the format 'YYYY-MM-DD'.
          example: 2019-07-20
          type: string
      required:
      - certificateType
      - id
      - label
      - validFrom
      - validUntil
      type: object
    TppCertificateParams:
      description: A container for the new certificate data
      example:
        privateKey: privateKey
        validFromDate: 2019-04-23
        passphrase: passphrase
        publicKey: publicKey
        label: label
        validUntilDate: 2022-04-23
        type: ""
        caPublicKey: caPublicKey
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/TppCertificateType'
          description: |-
            <strong>Type:</strong> TppCertificateType<br/>
            The type of the submitted certificate
        publicKey:
          description: A certificate (public key)
          type: string
        privateKey:
          description: 'A private key in PKCS #8 or PKCS #1 format. PKCS #1/#8 private
            keys are typically exchanged in the PEM base64-encoded format (https://support.quovadisglobal.com/kb/a37/what-is-pem-format.aspx)<br/><br/>NOTE:
            The certificate should have one of the following headers:<br/>- ''-----BEGIN
            RSA PRIVATE KEY-----''<br/>- ''-----BEGIN PRIVATE KEY-----''<br/>- ''-----BEGIN
            ENCRYPTED PRIVATE KEY-----''<br/>Any other header denotes that the private
            key is neither in PKCS #8 nor in PKCS #1 formats!<br/><br/>Also, bear
            in mind that if the private key is in PKCS #1 encrypted format, the encryption
            information must be provided with explicitly separated lines (the JSON
            must contain "\n" at the end of each line), such as in the example below:<br/>-----BEGIN
            RSA PRIVATE KEY-----<br/>Proc-Type: 4,ENCRYPTED<br/>DEK-Info: AES-256-CBC,BFA11F426E7D634BC621C77A72B804DB<br/>...<br/>-----END
            RSA PRIVATE KEY-----'
          type: string
        passphrase:
          description: Optional passphrase for the private key
          type: string
        caPublicKey:
          description: A certificate (public key) of the certificate authority (CA)
            that signed the certificate. Required in certain cases to build the PKI
            path between Access and the bank's API when banks do not possess intermediate
            TLS certificates while placing the trust chain.
          type: string
        label:
          description: A label for the certificate
          type: string
        validFromDate:
          description: Start day of the certificate's validity, in the format 'YYYY-MM-DD'.
            Default is the passed certificate validFrom date
          example: 2019-04-23
          type: string
        validUntilDate:
          description: Expiration day of the certificate's validity, in the format
            'YYYY-MM-DD'. Default is the passed certificate validUntil date
          example: 2022-04-23
          type: string
      required:
      - label
      - privateKey
      - publicKey
      - type
      type: object
    TppCertificateType:
      enum:
      - QWAC
      - QSEALC
      type: string
    TppCredentials:
      description: A container for the TPP client credentials data
      example:
        validUntil: 2019-07-20
        id: 1
        label: Credentials for imperial bank
        validFrom: 2019-07-20
        tppAuthenticationGroupId: 1
      properties:
        id:
          description: The credential identifier.
          example: 1
          format: int64
          type: integer
        label:
          description: Label of tpp client credentials set.
          example: Credentials for imperial bank
          type: string
        tppAuthenticationGroupId:
          description: TPP Authentication Group ID.
          example: 1
          format: int64
          type: integer
        validFrom:
          description: Valid from date in the format 'YYYY-MM-DD'.
          example: 2019-07-20
          type: string
        validUntil:
          description: Valid until date in the format 'YYYY-MM-DD'.
          example: 2019-07-20
          nullable: true
          type: string
      required:
      - id
      - label
      - tppAuthenticationGroupId
      - validFrom
      - validUntil
      type: object
    TppCredentialsParams:
      description: A container for new TPP client credentials data
      example:
        tppClientId: a23312
        validFromDate: 2019-04-23
        label: Demo bank TPP credentials
        tppClientSecret: followTheWhiteRabbit
        validUntilDate: 2022-04-23
        tppAuthenticationGroupId: 1
        tppApiKey: dontFollowTheWhiteRabbit
        tppName: finAPI
      properties:
        tppAuthenticationGroupId:
          description: The TPP Authentication Group Id for which the credentials can
            be used
          example: 1
          format: int64
          type: integer
        label:
          description: Label to credentials.
          example: Demo bank TPP credentials
          type: string
        tppClientId:
          description: ID of the TPP accessing the ASPSP API, as provided by the ASPSP
            as the result of registration
          example: a23312
          type: string
        tppClientSecret:
          description: Secret of the TPP accessing the ASPSP API, as provided by the
            ASPSP as the result of registration
          example: followTheWhiteRabbit
          type: string
        tppApiKey:
          description: API Key provided by ASPSP as the result of registration
          example: dontFollowTheWhiteRabbit
          type: string
        tppName:
          description: TPP name
          example: finAPI
          type: string
        validFromDate:
          description: Credentials "valid from" date in the format 'YYYY-MM-DD'. Default
            is today's date
          example: 2019-04-23
          type: string
        validUntilDate:
          description: Credentials "valid until" date in the format 'YYYY-MM-DD'.
            Default is null which means "indefinite" (no limit)
          example: 2022-04-23
          type: string
      required:
      - label
      - tppAuthenticationGroupId
      type: object
    TrainCategorizationData:
      description: Sample data to train categorization
      example:
        transactionData:
        - mcCode: "5542"
          amount: -99.99
          counterpartBlz: "70080000"
          accountTypeId: 1
          purpose: Restaurantbesuch
          counterpart: Bar Centrale
          counterpartIban: DE13700800000061110500
          counterpartAccountNumber: "61110500"
          counterpartBic: DRESDEFF700
        - mcCode: "5542"
          amount: -99.99
          counterpartBlz: "70080000"
          accountTypeId: 1
          purpose: Restaurantbesuch
          counterpart: Bar Centrale
          counterpartIban: DE13700800000061110500
          counterpartAccountNumber: "61110500"
          counterpartBic: DRESDEFF700
        categoryId: 378
      properties:
        transactionData:
          description: |-
            <strong>Type:</strong> TrainCategorizationTransactionData<br/>
            Set of transaction data (at most 100 transactions at once)
          items:
            $ref: '#/components/schemas/TrainCategorizationTransactionData'
          type: array
        categoryId:
          description: Category identifier
          example: 378
          format: int64
          type: integer
      required:
      - categoryId
      - transactionData
      type: object
    TrainCategorizationTransactionData:
      description: Transaction data for categorization training
      example:
        mcCode: "5542"
        amount: -99.99
        counterpartBlz: "70080000"
        accountTypeId: 1
        purpose: Restaurantbesuch
        counterpart: Bar Centrale
        counterpartIban: DE13700800000061110500
        counterpartAccountNumber: "61110500"
        counterpartBic: DRESDEFF700
      properties:
        accountTypeId:
          description: Identifier of account type.<br/><br/>1 = Checking,<br/>2 =
            Savings,<br/>3 = CreditCard,<br/>4 = Security,<br/>5 = Loan,<br/>6 = Pocket
            (DEPRECATED; will not be returned for any account unless this type has
            explicitly been set via PATCH),<br/>7 = Membership,<br/>8 = Bausparen<br/><br/>
          example: 1
          format: int64
          maximum: 7
          minimum: 1
          type: integer
        amount:
          description: Amount
          example: -99.99
          type: number
        purpose:
          description: 'Purpose. Any symbols are allowed. Maximum length is 2000.
            Default value: null.'
          example: Restaurantbesuch
          type: string
        counterpart:
          description: 'Counterpart. Any symbols are allowed. Maximum length is 80.
            Default value: null.'
          example: Bar Centrale
          type: string
        counterpartIban:
          description: 'Counterpart IBAN. Default value: null.'
          example: DE13700800000061110500
          type: string
        counterpartAccountNumber:
          description: 'Counterpart account number. Default value: null.'
          example: "61110500"
          type: string
        counterpartBlz:
          description: 'Counterpart BLZ. Default value: null.'
          example: "70080000"
          type: string
        counterpartBic:
          description: 'Counterpart BIC. Default value: null.'
          example: DRESDEFF700
          type: string
        mcCode:
          description: 'Merchant category code (for credit card transactions only).
            Default value: null. NOTE: This field is currently not regarded.'
          example: "5542"
          type: string
      required:
      - accountTypeId
      - amount
      type: object
    Transaction:
      description: Container for a transaction's data
      example:
        purpose: Restaurantbesuch
        counterpartName: Bar Centrale
        primanota: Primanota
        bankTransactionCode: PMNT-RCDT-SALA
        isPotentialDuplicate: false
        counterpartIban: DE13700800000061110500
        isAdjustingEntry: false
        type: Überweisungsauftrag
        sepaPurposeCode: OTHR
        counterpartBlz: "70080000"
        children:
        - 1
        - 2
        - 3
        importDate: 2018-01-01 00:00:00.000
        bankBookingDate: 2018-01-01 00.00.00.000
        currency: EUR
        id: 1
        counterpartMandateReference: MR123
        originalCurrency: EUR
        counterpartBic: DRESDEFF700
        amount: -99.99
        counterpartDebitorId: CRI098
        counterpartCustomerReference: CUR123
        differentCreditor: DIFC98450
        counterpartCreditorId: CRI123
        endToEndReference: "001100550526"
        compensationAmount: -1.11
        valueDate: 2018-01-01 00:00:00.000
        isNew: true
        paypalData: '{}'
        differentDebitor: DIFD70204
        parentId: 2
        counterpartBankName: Commerzbank vormals Dresdner Bank
        labels:
        - name: test
          id: 1
        - name: test
          id: 1
        accountId: 1
        finapiBookingDate: 2018-01-01 00:00:00.000
        typeCodeZka: "999"
        originalAmount: -9.99
        typeCodeSwift: RAPRDE51
        counterpartAccountNumber: "0061110500"
        category: '{}'
      properties:
        id:
          description: Transaction identifier
          example: 1
          format: int64
          type: integer
        parentId:
          description: Parent transaction identifier
          example: 2
          format: int64
          nullable: true
          type: integer
        accountId:
          description: Account identifier
          example: 1
          format: int64
          type: integer
        valueDate:
          description: Value date in the format 'YYYY-MM-DD HH:MM:SS.SSS' (german
            time).
          example: 2018-01-01 00:00:00.000
          type: string
        bankBookingDate:
          description: Bank booking date in the format 'YYYY-MM-DD HH:MM:SS.SSS' (german
            time).
          example: 2018-01-01 00.00.00.000
          type: string
        finapiBookingDate:
          description: 'finAPI Booking date in the format ''YYYY-MM-DD HH:MM:SS.SSS''
            (german time). NOTE: In some cases, banks may deliver transactions that
            are booked in future, but already included in the current account balance.
            To keep the account balance consistent with the set of transactions, such
            "future transactions" will be imported with their finapiBookingDate set
            to the current date (i.e.: date of import). The finapiBookingDate will
            automatically get adjusted towards the bankBookingDate each time the associated
            bank account is updated. Example: A transaction is imported on July, 3rd,
            with a bank reported booking date of July, 6th. The transaction will be
            imported with its finapiBookingDate set to July, 3rd. Then, on July 4th,
            the associated account is updated. During this update, the transaction''s
            finapiBookingDate will be automatically adjusted to July 4th. This adjustment
            of the finapiBookingDate takes place on each update until the bank account
            is updated on July 6th or later, in which case the transaction''s finapiBookingDate
            will be adjusted to its final value, July 6th.<br/> The finapiBookingDate
            is the date that is used by the finAPI PFM services. E.g. when you calculate
            the spendings of an account for the current month, and have a transaction
            with finapiBookingDate in the current month but bankBookingDate at the
            beginning of the next month, then this transaction is included in the
            calculations (as the bank has this transaction''s amount included in the
            current account balance as well).'
          example: 2018-01-01 00:00:00.000
          type: string
        amount:
          description: Transaction amount
          example: -99.99
          type: number
        currency:
          allOf:
          - $ref: '#/components/schemas/Currency'
          description: |-
            <strong>Type:</strong> Currency<br/>
            Transaction currency in ISO 4217 format.This field can be null if not explicitly provided the bank. In this case it can be assumed as account’s currency.
          example: EUR
          nullable: true
        purpose:
          description: 'Transaction purpose. Maximum length: 2000'
          example: Restaurantbesuch
          nullable: true
          type: string
        counterpartName:
          description: 'Counterpart name. Maximum length: 80'
          example: Bar Centrale
          nullable: true
          type: string
        counterpartAccountNumber:
          description: Counterpart account number
          example: "0061110500"
          nullable: true
          type: string
        counterpartIban:
          description: Counterpart IBAN
          example: DE13700800000061110500
          nullable: true
          type: string
        counterpartBlz:
          description: Counterpart BLZ
          example: "70080000"
          nullable: true
          type: string
        counterpartBic:
          description: Counterpart BIC
          example: DRESDEFF700
          nullable: true
          type: string
        counterpartBankName:
          description: Counterpart Bank name
          example: Commerzbank vormals Dresdner Bank
          nullable: true
          type: string
        counterpartMandateReference:
          description: The mandate reference of the counterpart
          example: MR123
          nullable: true
          type: string
        counterpartCustomerReference:
          description: The customer reference of the counterpart
          example: CUR123
          nullable: true
          type: string
        counterpartCreditorId:
          description: The creditor ID of the counterpart. Exists only for SEPA direct
            debit transactions ("Lastschrift").
          example: CRI123
          nullable: true
          type: string
        counterpartDebitorId:
          description: The originator's identification code. Exists only for SEPA
            money transfer transactions ("Überweisung").
          example: CRI098
          nullable: true
          type: string
        type:
          description: 'Transaction type, according to the bank. If set, this will
            contain a German term that you can display to the user. Some examples
            of common values are: "Lastschrift", "Auslands&uuml;berweisung", "Geb&uuml;hren",
            "Zinsen". The maximum possible length of this field is 255 characters.'
          example: Überweisungsauftrag
          nullable: true
          type: string
        typeCodeZka:
          description: ZKA business transaction code which relates to the transaction's
            type. Possible values range from 1 through 999. If no information about
            the ZKA type code is available, then this field will be null.
          example: "999"
          nullable: true
          type: string
        typeCodeSwift:
          description: SWIFT transaction type code. If no information about the SWIFT
            code is available, then this field will be null.
          example: RAPRDE51
          nullable: true
          type: string
        sepaPurposeCode:
          description: SEPA purpose code, according to ISO 20022
          example: OTHR
          nullable: true
          type: string
        bankTransactionCode:
          description: Bank transaction code, according to ISO 20022
          example: PMNT-RCDT-SALA
          nullable: true
          type: string
        primanota:
          description: Transaction primanota (bank side identification number)
          example: Primanota
          nullable: true
          type: string
        category:
          allOf:
          - $ref: '#/components/schemas/Category'
          description: |-
            <strong>Type:</strong> Category<br/>
            Transaction category, if any is assigned. Note: Recently imported transactions that have currently no category assigned might still get categorized by the background categorization process. To check the status of the background categorization, see GET /bankConnections. Manual category assignments to a transaction will remove the transaction from the background categorization process (i.e. the background categorization process will never overwrite a manual category assignment).
          nullable: true
          type: object
        labels:
          description: |-
            <strong>Type:</strong> Label<br/>
            Array of assigned labels
          items:
            $ref: '#/components/schemas/Label'
          type: array
        isPotentialDuplicate:
          description: While finAPI uses a well-elaborated algorithm for uniquely
            identifying transactions, there is still the possibility that during an
            account update, a transaction that was imported previously may be imported
            a second time as a new transaction. For example, this can happen if some
            transaction data changes on the bank server side. However, finAPI also
            includes an algorithm of identifying such "potential duplicate" transactions.
            If this field is set to true, it means that finAPI detected a similar
            transaction that might actually be the same. It is recommended to communicate
            this information to the end user, and give him an option to delete the
            transaction in case he confirms that it really is a duplicate.
          example: false
          type: boolean
        isAdjustingEntry:
          description: Indicating whether this transaction is an adjusting entry ('Zwischensaldo').<br/><br/>Adjusting
            entries do not originate from the bank, but are added by finAPI during
            an account update when the bank reported account balance does not add
            up to the set of transactions that finAPI receives for the account. In
            this case, the adjusting entry will fix the deviation between the balance
            and the received transactions so that both adds up again.<br/><br/>Possible
            causes for such deviations are:<br/>- Inconsistencies in how the bank
            calculates the balance, for instance when not yet booked transactions
            are already included in the balance, but not included in the set of transactions<br/>-
            Gaps in the transaction history that finAPI receives, for instance because
            the account has not been updated for a while and older transactions are
            no longer available
          example: false
          type: boolean
        isNew:
          description: Indicating whether this transaction is 'new' or not. Any newly
            imported transaction will have this flag initially set to true. How you
            use this field is up to your interpretation. For example, you might want
            to set it to false once a user has clicked on/seen the transaction. You
            can change this flag to 'false' with the PATCH method.
          example: true
          type: boolean
        importDate:
          description: Date of transaction import, in the format 'YYYY-MM-DD HH:MM:SS.SSS'
            (german time).
          example: 2018-01-01 00:00:00.000
          type: string
        children:
          description: Sub-transactions identifiers (if this transaction is split)
          example:
          - 1
          - 2
          - 3
          items:
            format: int64
            type: integer
          nullable: true
          type: array
        paypalData:
          allOf:
          - $ref: '#/components/schemas/PaypalTransactionData'
          description: |-
            <strong>Type:</strong> PaypalTransactionData<br/>
            Additional, PayPal-specific transaction data.
          nullable: true
          type: object
        endToEndReference:
          description: End-To-End reference
          example: "001100550526"
          nullable: true
          type: string
        compensationAmount:
          description: Compensation Amount. Sum of reimbursement of out-of-pocket
            expenses plus processing brokerage in case of a national return / refund
            debit as well as an optional interest equalisation. Exists predominantly
            for SEPA direct debit returns.
          example: -1.11
          nullable: true
          type: number
        originalAmount:
          description: Original Amount of the original direct debit. Exists predominantly
            for SEPA direct debit returns.
          example: -9.99
          nullable: true
          type: number
        originalCurrency:
          allOf:
          - $ref: '#/components/schemas/Currency'
          description: |-
            <strong>Type:</strong> Currency<br/>
            Currency of the original amount in ISO 4217 format. This field can be null if not explicitly provided the bank. In this case it can be assumed as account’s currency.
          example: EUR
          nullable: true
        differentDebitor:
          description: Payer's/debtor's reference party (in the case of a credit transfer)
            or payee's/creditor's reference party (in the case of a direct debit)
          example: DIFD70204
          nullable: true
          type: string
        differentCreditor:
          description: Payee's/creditor's reference party (in the case of a credit
            transfer) or payer's/debtor's reference party (in the case of a direct
            debit)
          example: DIFC98450
          nullable: true
          type: string
      required:
      - accountId
      - amount
      - bankBookingDate
      - bankTransactionCode
      - category
      - children
      - compensationAmount
      - counterpartAccountNumber
      - counterpartBankName
      - counterpartBic
      - counterpartBlz
      - counterpartCreditorId
      - counterpartCustomerReference
      - counterpartDebitorId
      - counterpartIban
      - counterpartMandateReference
      - counterpartName
      - currency
      - differentCreditor
      - differentDebitor
      - endToEndReference
      - finapiBookingDate
      - id
      - importDate
      - isAdjustingEntry
      - isNew
      - isPotentialDuplicate
      - labels
      - originalAmount
      - originalCurrency
      - parentId
      - paypalData
      - primanota
      - purpose
      - sepaPurposeCode
      - type
      - typeCodeSwift
      - typeCodeZka
      - valueDate
      type: object
    TransactionDirection:
      enum:
      - Income
      - Spending
      type: string
    TransactionList:
      description: Container for data of multiple transactions
      example:
        transactions:
        - purpose: Restaurantbesuch
          counterpartName: Bar Centrale
          primanota: Primanota
          bankTransactionCode: PMNT-RCDT-SALA
          isPotentialDuplicate: false
          counterpartIban: DE13700800000061110500
          isAdjustingEntry: false
          type: Überweisungsauftrag
          sepaPurposeCode: OTHR
          counterpartBlz: "70080000"
          children:
          - 1
          - 2
          - 3
          importDate: 2018-01-01 00:00:00.000
          bankBookingDate: 2018-01-01 00.00.00.000
          currency: EUR
          id: 1
          counterpartMandateReference: MR123
          originalCurrency: EUR
          counterpartBic: DRESDEFF700
          amount: -99.99
          counterpartDebitorId: CRI098
          counterpartCustomerReference: CUR123
          differentCreditor: DIFC98450
          counterpartCreditorId: CRI123
          endToEndReference: "001100550526"
          compensationAmount: -1.11
          valueDate: 2018-01-01 00:00:00.000
          isNew: true
          paypalData: '{}'
          differentDebitor: DIFD70204
          parentId: 2
          counterpartBankName: Commerzbank vormals Dresdner Bank
          labels:
          - name: test
            id: 1
          - name: test
            id: 1
          accountId: 1
          finapiBookingDate: 2018-01-01 00:00:00.000
          typeCodeZka: "999"
          originalAmount: -9.99
          typeCodeSwift: RAPRDE51
          counterpartAccountNumber: "0061110500"
          category: '{}'
        - purpose: Restaurantbesuch
          counterpartName: Bar Centrale
          primanota: Primanota
          bankTransactionCode: PMNT-RCDT-SALA
          isPotentialDuplicate: false
          counterpartIban: DE13700800000061110500
          isAdjustingEntry: false
          type: Überweisungsauftrag
          sepaPurposeCode: OTHR
          counterpartBlz: "70080000"
          children:
          - 1
          - 2
          - 3
          importDate: 2018-01-01 00:00:00.000
          bankBookingDate: 2018-01-01 00.00.00.000
          currency: EUR
          id: 1
          counterpartMandateReference: MR123
          originalCurrency: EUR
          counterpartBic: DRESDEFF700
          amount: -99.99
          counterpartDebitorId: CRI098
          counterpartCustomerReference: CUR123
          differentCreditor: DIFC98450
          counterpartCreditorId: CRI123
          endToEndReference: "001100550526"
          compensationAmount: -1.11
          valueDate: 2018-01-01 00:00:00.000
          isNew: true
          paypalData: '{}'
          differentDebitor: DIFD70204
          parentId: 2
          counterpartBankName: Commerzbank vormals Dresdner Bank
          labels:
          - name: test
            id: 1
          - name: test
            id: 1
          accountId: 1
          finapiBookingDate: 2018-01-01 00:00:00.000
          typeCodeZka: "999"
          originalAmount: -9.99
          typeCodeSwift: RAPRDE51
          counterpartAccountNumber: "0061110500"
          category: '{}'
      properties:
        transactions:
          description: |-
            <strong>Type:</strong> Transaction<br/>
            List of transactions
          items:
            $ref: '#/components/schemas/Transaction'
          type: array
      required:
      - transactions
      type: object
    TriggerCategorizationParams:
      description: Trigger categorization parameters
      example:
        bankConnectionIds:
        - 1
        - 2
        - 3
      properties:
        bankConnectionIds:
          description: List of identifiers of the bank connections that you want to
            trigger categorization for. Leaving the list unset or empty will trigger
            categorization for all of the user's bank connections. Please note that
            if there are no bank connections, then the service will return with HTTP
            code 422.
          example:
          - 1
          - 2
          - 3
          items:
            format: int64
            type: integer
          type: array
      type: object
    TwoStepProcedure:
      description: Two-step-procedure for user authorization on bank-side
      example:
        implicitExecute: false
        procedureChallengeType: TEXT
        procedureName: mobileTAN
        procedureId: "955"
      properties:
        procedureId:
          description: Bank-given ID of the procedure
          example: "955"
          type: string
        procedureName:
          description: Bank-given name of the procedure
          example: mobileTAN
          type: string
        procedureChallengeType:
          description: The challenge type of the procedure. Possible values are:<br/><br/>&bull;
            <code>TEXT</code> - the challenge will be a text that contains instructions
            for the user on how to proceed with the authorization.<br/>&bull; <code>PHOTO</code>
            - the challenge will contain a BASE-64 string depicting a photo (or any
            kind of QR-code-like data) that must be shown to the user.<br/>&bull;
            <code>FLICKER_CODE</code> - the challenge will contain a BASE-64 string
            depicting a flicker code animation that must be shown to the user.<br/><br/>Note
            that this challenge type information does not originate from the bank,
            but is determined by finAPI internally. There is no guarantee that the
            determined challenge type is correct. Note also that this field may not
            be set, meaning that finAPI could not determine the challenge type of
            the procedure.
          example: TEXT
          nullable: true
          type: string
        implicitExecute:
          description: If 'true', then there is no need for your client to pass back
            anything to finAPI to continue the authorization when using this procedure.
            The authorization will be dealt with directly between the user, finAPI,
            and the bank.
          example: false
          type: boolean
      required:
      - implicitExecute
      - procedureChallengeType
      - procedureId
      - procedureName
      type: object
    UpdateBankConnectionParams:
      description: Container for bank connection update parameters
      example:
        skipPositionsDownload: false
        challengeResponse: "0123"
        bankConnectionId: 1
        redirectUrl: https://myapplication.com
        multiStepAuthentication: '{}'
        loadOwnerData: false
        interface: XS2A
        storePin: true
        loginCredentials:
        - label: Onlinebanking-ID
          value: max.mustermann
        - label: Onlinebanking-ID
          value: max.mustermann
        accountReferences:
        - iban: DE89370400440532013000
        - iban: DE89370400440532013000
        importNewAccounts: false
        accountTypes:
        - Checking
        - Savings
        - CreditCard
        - Security
        - Loan
        - Pocket
        - Membership
        - Bausparen
        forceWebForm: false
        bankingPin: "123456"
        storeSecrets: true
      properties:
        bankConnectionId:
          description: Bank connection identifier
          example: 1
          format: int64
          type: integer
        bankingPin:
          description: 'THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
            to the ''loginCredentials'' and ''interface'' fields instead. If any of
            those two fields is used, then the value of this field will be ignored.<br><br>Online
            banking PIN. Any symbols are allowed. Max length: 170. If a PIN is stored
            in the bank connection, then this field may remain unset. If finAPI''s
            Web Form is not required and the field is set though then it will always
            be used (even if there is some other PIN stored in the bank connection).
            If you want the user to enter a PIN in finAPI''s Web Form even when a
            PIN is stored, then just set the field to any value, so that the service
            recognizes that you wish to use the Web Form flow.'
          example: "123456"
          type: string
        storePin:
          default: false
          description: THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
            to the 'storeSecrets' field instead.<br><br>Whether to store the PIN.
            If the PIN is stored, it is not required to pass the PIN again when updating
            this bank connection or when executing orders (like money transfers).
            Default is false. <br/><br/>NOTES:<br/> - before you set this field to
            true, please regard the 'pinsAreVolatile' flag of this connection's bank.
            Please note that volatile credentials will not be stored, even if provided,
            to enforce user involvement in the next communication with the bank;<br/>
            - this field is ignored in case when the user will need to use finAPI's
            Web Form. The user will be able to decide whether to store the PIN or
            not in the Web Form, depending on the 'storeSecretsAvailableInWebForm'
            setting (see Client Configuration).
          example: true
          type: boolean
        interface:
          allOf:
          - $ref: '#/components/schemas/BankingInterface'
          description: |-
            <strong>Type:</strong> BankingInterface<br/>
            The interface to use for connecting with the bank.
          example: XS2A
        loginCredentials:
          description: |-
            <strong>Type:</strong> LoginCredential<br/>
            Set of login credentials. Must be passed in combination with the 'interface' field, if the credentials have not been previously stored. The labels that you pass must match with the login credential labels that the respective interface defines. finAPI will combine the given credentials with any credentials that it has stored. You can leave this field unset in case finAPI has stored all required credentials.
          items:
            $ref: '#/components/schemas/LoginCredential'
          type: array
        storeSecrets:
          default: false
          description: Whether to store the secret login fields. If the secret fields
            are stored, then updates can be triggered without the involvement of the
            users, as long as the credentials remain valid and the bank consent has
            not expired. Note that bank consent will be stored regardless of the field
            value. Default value is false.
          example: true
          type: boolean
        importNewAccounts:
          default: false
          description: Whether new accounts that have not yet been imported will be
            imported or not. Default is false. <br/><br/>NOTES:<br/>&bull; For best
            performance of the bank connection update, you should not enable this
            flag unless you really expect new accounts to be available in the connection.
            It is recommended to let your users tell you through your application
            when they want the service to look for new accounts.<br/>&bull; If you
            have imported an interface using a limited set of account types, you would
            import all other accounts (e.g. security accounts or credit cards) by
            setting <code>importNewAccounts</code> to <code>true</code>. To avoid
            importing account types that you are not interested in, make sure to keep
            this field unset (or set to false) for the update.
          example: false
          type: boolean
        skipPositionsDownload:
          default: false
          description: Whether to skip the download of transactions and securities
            or not. If set to true, then finAPI will download just the accounts list
            with the accounts' information (like account name, number, holder, etc),
            as well as the accounts' balances (if possible), but skip the download
            of transactions and securities. Default is false.<br/><br/>NOTES:<br/>&bull;
            Setting this flag to true is only meant to be used if A) you generally
            never download positions, because you are only interested in the accounts
            list and/or balances, or B) you want to get just the list of accounts
            in a first step, and then delete unwanted accounts from the bank connection,
            before you trigger another update with transactions download. This approach
            allows you to download transactions only for the accounts that you want.<br/>&bull;
            If you skip the download of transactions and securities during an import
            or update, you can still download them on a later update (though you might
            not get all positions at a later point, because the date range in which
            the bank servers provide this data is usually limited).<br/>&bull; If
            an account already had any positions imported before an update, and you
            skip the positions download in the update, then the account's updated
            balance might not add up to the set of transactions / security positions.
            Be aware that certain services (like GET /accounts/dailyBalances) may
            give incorrect results for accounts in such a state.<br/>&bull; If this
            bank connection is updated via finAPI's automatic batch update, then transactions
            and security positions (of already imported accounts) <u>will</u> be downloaded
            in any case!<br/>&bull; For security accounts, skipping the downloading
            of the securities might result in the account's balance also not being
            downloaded.<br/>&bull; For Bausparen accounts, this field is ignored.
            finAPI will always download transactions for Bausparen accounts.<br/>
          example: false
          type: boolean
        loadOwnerData:
          default: false
          description: Whether to load/refresh information about the bank connection
            owner(s) - see field 'owners'. Default value is 'false'. Note that owner
            data is NOT loaded/refreshed during finAPI's automatic bank connection
            update.
          example: false
          type: boolean
        accountTypes:
          example:
          - Checking
          - Savings
          - CreditCard
          - Security
          - Loan
          - Pocket
          - Membership
          - Bausparen
          items:
            allOf:
            - $ref: '#/components/schemas/AccountType'
            description: |-
              <strong>Type:</strong> AccountType<br/>
              This field is only regarded when the field 'importNewAccounts' is set to true, and affects only new accounts that are not yet imported. If the field is specified, then a new account will be imported only when its determined type is one of the given types. If you leave this field unset, then all new accounts will be imported, regardless of their type.
          type: array
        accountReferences:
          description: |-
            <strong>Type:</strong> AccountReference<br/>
            List of accounts for which access is requested from the bank. It may only be passed if the bank interface has the DETAILED_CONSENT property set. if omitted, finAPI will use the list of existing accounts. Note that the parameter is still required if you want to import new accounts (i.e. call with importNewAccounts=true).
          items:
            $ref: '#/components/schemas/AccountReference'
          type: array
        challengeResponse:
          description: THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
            to the 'multiStepAuthentication' field instead.<br/><br/>Challenge response.
            This field should be set only when the previous attempt of update the
            bank connection failed with HTTP code 510, i.e. the bank sent a challenge
            for the user for an additional authentication. In this case, this field
            must contain the response to the bank's challenge. Note that in the context
            of finAPI's Web Form flow, finAPI will automatically deal with getting
            the challenge response from the user via the Web Form.
          example: "0123"
          type: string
        redirectUrl:
          description: Must only be passed when the used interface has the property
            REDIRECT_APPROACH. The user will be redirected to the given URL from the
            bank's website after completing the bank login and (possibly) the SCA.
          example: https://myapplication.com
          type: string
        forceWebForm:
          default: false
          description: THIS FIELD IS DEPRECATED AND WILL BE REMOVED.<br/>Please refer
            <a href='?product=web_form_2.0#post-/api/tasks/backgroundUpdate' target='_blank'>here</a>
            to the 'editSavedSettings' field instead.<br/><br/>If the user has stored
            credentials in finAPI for the selected bank connection, then the finAPI
            Web Form will only be shown when the user must be involved for a second
            authentication, or when the previous connection to the bank via the selected
            interface had failed. However if you want to provide the Web Form to the
            user in any case, you can set this field to true. It will force the Web
            Form flow for the user and allow him to make changes to the data that
            he has stored in finAPI. Default value is 'false'.
          example: false
          type: boolean
        multiStepAuthentication:
          allOf:
          - $ref: '#/components/schemas/MultiStepAuthenticationCallback'
          description: |-
            <strong>Type:</strong> MultiStepAuthenticationCallback<br/>
            Container for multi-step authentication data. Required when a previous service call initiated a multi-step authentication.
          type: object
      required:
      - bankConnectionId
      type: object
    UpdateMultipleTransactionsParams:
      description: Update specific transactions parameters
      example:
        labelIds:
        - 1
        - 2
        - 3
        trainCategorization: true
        accountIds:
        - 1
        - 2
        - 3
        isPotentialDuplicate: false
        ids:
        - 1
        - 2
        - 3
        isNew: false
        categoryId: 378
      properties:
        isNew:
          description: Whether this transactions should be flagged as 'new' or not.
            Any newly imported transaction will have this flag initially set to true.
            How you use this field is up to your interpretation. For example, you
            might want to set it to false once a user has clicked on/seen the transaction.
          example: false
          type: boolean
        isPotentialDuplicate:
          description: You can set this field only to 'false'. finAPI marks transactions
            as a potential duplicates  when its internal duplicate detection algorithm
            is signaling so. Transactions that are flagged as duplicates can be deleted
            by the user. To prevent the user from deleting original transactions,
            which might lead to incorrect balances, it is not possible to manually
            set this flag to 'true'.
          example: false
          type: boolean
        categoryId:
          description: Identifier of the new category to apply to the transaction.
            When updating the transaction's category, the category's fields 'id',
            'name', 'parentId', 'parentName', and 'isCustom' will all get updated.
            To clear the category for the transaction, the categoryId field must be
            passed with value 0.
          example: 378
          format: int64
          type: integer
        trainCategorization:
          default: true
          description: This field is only regarded when the field 'categoryId' is
            set. It controls whether finAPI's categorization system should learn from
            the given categorization(s). If set to 'true', then the user's categorization
            rules will be updated so that similar transactions will get categorized
            accordingly in future. If set to 'false', then the service will simply
            change the category of the given transaction(s), without updating the
            user's categorization rules. The field defaults to 'true' if not specified.
          example: true
          type: boolean
        labelIds:
          description: 'Identifiers of labels to apply to the transaction. To clear
            transactions'' labels, pass an empty array of identifiers: ''[]'''
          example:
          - 1
          - 2
          - 3
          items:
            format: int64
            type: integer
          type: array
        ids:
          description: A comma-separated list of transaction identifiers. If specified,
            then only transactions whose identifier match any of the given identifiers
            will be regarded. The maximum number of identifiers is 100.
          example:
          - 1
          - 2
          - 3
          items:
            format: int64
            type: integer
          type: array
        accountIds:
          description: A comma-separated list of account identifiers. If specified,
            then only transactions whose account's identifier is included in this
            list will be regarded.
          example:
          - 1
          - 2
          - 3
          items:
            format: int64
            type: integer
          type: array
      type: object
    UpdateResult:
      description: Container for a status of bank connection update
      properties:
        result:
          allOf:
          - $ref: '#/components/schemas/UpdateResultStatus'
          description: |-
            <strong>Type:</strong> UpdateResultStatus<br/>
            Note that 'OK' just means that finAPI could successfully connect and log in to the bank server. However, it does not necessarily mean that all accounts could be updated successfully. For the latter, please refer to the 'status' field of the Account resource.
          example: INTERNAL_SERVER_ERROR
        errorMessage:
          description: In case the update result is not <code>OK</code>, this field
            may contain an error message with details about why the update failed
            (it is not guaranteed that a message is available though). In case the
            update result is <code>OK</code>, the field will always be null.
          example: Internal server error
          nullable: true
          type: string
        errorType:
          allOf:
          - $ref: '#/components/schemas/ErrorType'
          description: |-
            <strong>Type:</strong> ErrorType<br/>
            In case the update result is not <code>OK</code>, this field contains the type of the error that occurred. BUSINESS means that the bank server responded with a non-technical error message for the user. TECHNICAL means that some internal error has occurred in finAPI or at the bank server.
          example: TECHNICAL
          nullable: true
        timestamp:
          description: Time of the update. The value is returned in the format 'YYYY-MM-DD
            HH:MM:SS.SSS' (german time).
          example: 2018-01-01 00:00:00.000
          type: string
      required:
      - errorMessage
      - errorType
      - result
      - timestamp
      type: object
    UpdateResultStatus:
      enum:
      - OK
      - BANK_SERVER_REJECTION
      - INTERNAL_SERVER_ERROR
      type: string
    UpdateTransactionsParams:
      description: Update transactions parameters
      example:
        labelIds:
        - 1
        - 2
        - 3
        trainCategorization: true
        isPotentialDuplicate: false
        isNew: false
        categoryId: 378
      properties:
        isNew:
          description: Whether this transactions should be flagged as 'new' or not.
            Any newly imported transaction will have this flag initially set to true.
            How you use this field is up to your interpretation. For example, you
            might want to set it to false once a user has clicked on/seen the transaction.
          example: false
          type: boolean
        isPotentialDuplicate:
          description: You can set this field only to 'false'. finAPI marks transactions
            as a potential duplicates  when its internal duplicate detection algorithm
            is signaling so. Transactions that are flagged as duplicates can be deleted
            by the user. To prevent the user from deleting original transactions,
            which might lead to incorrect balances, it is not possible to manually
            set this flag to 'true'.
          example: false
          type: boolean
        categoryId:
          description: Identifier of the new category to apply to the transaction.
            When updating the transaction's category, the category's fields 'id',
            'name', 'parentId', 'parentName', and 'isCustom' will all get updated.
            To clear the category for the transaction, the categoryId field must be
            passed with value 0.
          example: 378
          format: int64
          type: integer
        trainCategorization:
          default: true
          description: This field is only regarded when the field 'categoryId' is
            set. It controls whether finAPI's categorization system should learn from
            the given categorization(s). If set to 'true', then the user's categorization
            rules will be updated so that similar transactions will get categorized
            accordingly in future. If set to 'false', then the service will simply
            change the category of the given transaction(s), without updating the
            user's categorization rules. The field defaults to 'true' if not specified.
          example: true
          type: boolean
        labelIds:
          description: 'Identifiers of labels to apply to the transaction. To clear
            transactions'' labels, pass an empty array of identifiers: ''[]'''
          example:
          - 1
          - 2
          - 3
          items:
            format: int64
            type: integer
          type: array
      type: object
    User:
      description: Container for a user's data
      example:
        password: password
        phone: +49 99 999999-999
        id: username
        email: email@localhost.de
        isAutoUpdateEnabled: true
      properties:
        id:
          description: User identifier
          example: username
          type: string
        password:
          description: User's password. Please note that some services may return
            a distorted password (always 'XXXXX'). See the documentation of individual
            services to find out whether the password is returned as plain text or
            as 'XXXXX'.
          example: password
          type: string
        email:
          description: User's email address
          example: email@localhost.de
          nullable: true
          type: string
        phone:
          description: User's phone number
          example: +49 99 999999-999
          nullable: true
          type: string
        isAutoUpdateEnabled:
          description: 'Whether the user''s bank connections will get updated in the
            course of finAPI''s automatic batch update. Note that the automatic batch
            update will only update bank connections where all of the following applies:<br><br>
            - a valid consent exists OR the PIN is stored in finAPI for the bank connection,
            and the related bank does not have volatile PINs (see the ''isVolatile''
            flag of the ''loginCredentials'')<br/> - the user has accepted the latest
            Terms and Conditions (this only applies to users whose mandator doesn''t
            have an AIS license)<br> - the bank connection interface flag ''userActionRequired''
            has to be false<br> - the previous update using the stored credentials
            did not fail due to the credentials being incorrect (or there was no previous
            update with the stored credentials)<br> - the bank that the bank connection
            relates to is included in the automatic batch update (please contact your
            Sys-Admin for details about the batch update configuration)<br>- at least
            one of the bank''s supported data sources can be used by finAPI for your
            client (i.e.: if a bank supports only web scraping, but web scraping is
            disabled for your client, then bank connections of that bank will not
            get updated by the automatic batch update)<br><br>Also note that the automatic
            batch update must generally be enabled for your client for this field
            to have any effect.<br/><br/>WARNING: The automatic update will always
            download transactions and security positions for any account that it updates,
            even if the account was previously imported or updated with ''skipPositionsDownload''
            = true.'
          example: true
          type: boolean
      required:
      - email
      - id
      - isAutoUpdateEnabled
      - password
      - phone
      type: object
    UserCreateParams:
      description: User details
      example:
        password: password
        phone: +49 99 999999-999
        id: username
        email: email@localhost.de
        isAutoUpdateEnabled: true
      properties:
        id:
          description: 'User''s identifier. Max length is 36 symbols. Only the following
            symbols are allowed: 0-9, A-Z, a-z, -, _, ., +, @. If not specified, then
            a unique random value will be generated.'
          example: username
          pattern: '[a-zA-Z0-9\-_\.\+@]*'
          type: string
        password:
          description: User's password. Minimum length is 6, and maximum length is
            128. If not specified, then a unique random value will be generated.
          example: password
          type: string
        email:
          description: User's email address. Maximum length is 320.
          example: email@localhost.de
          pattern: '[A-Za-z0-9¡-ʯ &\(\)\{\}\[\]\.:,;\?!\+\-_\$@#~`\^€]*'
          type: string
        phone:
          description: User's phone number. Maximum length is 50.
          example: +49 99 999999-999
          pattern: '[A-Za-z0-9¡-ʯ &\(\)\{\}\[\]\.:,;\?!\+\-_\$@#~`\^€]*'
          type: string
        isAutoUpdateEnabled:
          default: false
          description: 'Whether the user''s bank connections will get updated in the
            course of finAPI''s automatic batch update. Note that the automatic batch
            update will only update bank connections where all of the following applies:<br><br>
            - a valid consent exists OR the PIN is stored in finAPI for the bank connection,
            and the related bank does not have volatile PINs (see the ''isVolatile''
            flag of the ''loginCredentials'')<br/> - the user has accepted the latest
            Terms and Conditions (this only applies to users whose mandator doesn''t
            have an AIS license)<br> - the bank connection interface flag ''userActionRequired''
            has to be false<br> - the previous update using the stored credentials
            did not fail due to the credentials being incorrect (or there was no previous
            update with the stored credentials)<br> - the bank that the bank connection
            relates to is included in the automatic batch update (please contact your
            Sys-Admin for details about the batch update configuration)<br>- at least
            one of the bank''s supported data sources can be used by finAPI for your
            client (i.e.: if a bank supports only web scraping, but web scraping is
            disabled for your client, then bank connections of that bank will not
            get updated by the automatic batch update)<br><br>Also note that the automatic
            batch update must generally be enabled for your client for this field
            to have any effect.<br/><br/>WARNING: The automatic update will always
            download transactions and security positions for any account that it updates,
            even if the account was previously imported or updated with ''skipPositionsDownload''
            = true.<br/><br/>Default value is false.'
          example: true
          type: boolean
      type: object
    UserIdentifiersList:
      description: Container for list of identifiers of deleted users, and not deleted
        users (in ascending order)
      example:
        nonDeletedUsers:
        - third_user
        - fourth_user
        deletedUsers:
        - first_user
        - second_user
      properties:
        deletedUsers:
          example:
          - first_user
          - second_user
          items:
            description: List of identifiers of deleted users (in ascending order)
            type: string
          type: array
          uniqueItems: true
        nonDeletedUsers:
          example:
          - third_user
          - fourth_user
          items:
            description: List of identifiers of not deleted users (in ascending order)
            type: string
          type: array
          uniqueItems: true
      required:
      - deletedUsers
      - nonDeletedUsers
      type: object
    UserIdentifiersParams:
      description: User identifiers params
      example:
        userIds:
        - first_user
        - second_user
        - third_user
        - fourth_user
      properties:
        userIds:
          example:
          - first_user
          - second_user
          - third_user
          - fourth_user
          items:
            description: List of user identifiers
            type: string
          type: array
      required:
      - userIds
      type: object
    UserInfo:
      description: Container for user information
      example:
        deletionDate: 2018-01-31
        isLocked: false
        registrationDate: 2018-01-01
        lastActiveDate: 2018-01-31
        monthlyStats:
        - maxBankConnectionCount: 5
          month: 2018-01
          minBankConnectionCount: 1
        - maxBankConnectionCount: 5
          month: 2018-01
          minBankConnectionCount: 1
        userId: "1"
        latestBankConnectionImportDate: 2018-01-01
        latestBankConnectionDeletionDate: 2018-01-31
        bankConnectionCount: 5
      properties:
        userId:
          description: User's identifier
          example: "1"
          type: string
        registrationDate:
          description: User's registration date, in the format 'YYYY-MM-DD'
          example: 2018-01-01
          type: string
        deletionDate:
          description: User's deletion date, in the format 'YYYY-MM-DD'. May be null
            if the user has not been deleted.
          example: 2018-01-31
          nullable: true
          type: string
        lastActiveDate:
          description: User's last active date, in the format 'YYYY-MM-DD'. May be
            null if the user has not yet logged in.
          example: 2018-01-31
          nullable: true
          type: string
        bankConnectionCount:
          description: Number of bank connections that currently exist for this user.
          example: 5
          format: int32
          type: integer
        latestBankConnectionImportDate:
          description: Latest date of when a bank connection was imported for this
            user, in the format 'YYYY-MM-DD'. This field is null when there has never
            been a bank connection import.
          example: 2018-01-01
          nullable: true
          type: string
        latestBankConnectionDeletionDate:
          description: Latest date of when a bank connection was deleted for this
            user, in the format 'YYYY-MM-DD'. This field is null when there has never
            been a bank connection deletion.
          example: 2018-01-31
          nullable: true
          type: string
        monthlyStats:
          description: |-
            <strong>Type:</strong> MonthlyUserStats<br/>
            Additional information about the user's data or activities, broken down in months. The list will by default contain an entry for each month starting with the month of when the user was registered, up to the current month. The date range may vary when you have limited it in the request. <br/><br/>Please note:<br/>&bull; this field is only set when 'includeMonthlyStats' = true, otherwise it will be null.<br/>&bull; the list is always ordered from the latest month first, to the oldest month last.<br/>&bull; the list will never contain an entry for a month that was prior to the month of when the user was registered, or after the month of when the user was deleted, even when you have explicitly set a respective date range. This means that the list may be empty if you are requesting a date range where the user didn't exist yet, or didn't exist any longer.
          items:
            $ref: '#/components/schemas/MonthlyUserStats'
          nullable: true
          type: array
        isLocked:
          description: Whether the user is currently locked (for further information,
            see the 'maxUserLoginAttempts' setting in your client's configuration).
            Note that deleted users will always have this field set to 'false'.
          example: false
          type: boolean
      required:
      - bankConnectionCount
      - deletionDate
      - isLocked
      - lastActiveDate
      - latestBankConnectionDeletionDate
      - latestBankConnectionImportDate
      - monthlyStats
      - registrationDate
      - userId
      type: object
    UserUpdateParams:
      description: User details
      example:
        phone: +49 99 999999-999
        email: email@localhost.de
        isAutoUpdateEnabled: true
      properties:
        email:
          description: User's new email address. Maximum length is 320. Pass an empty
            string ("") if you want to clear the current email address.
          example: email@localhost.de
          pattern: '[A-Za-z0-9¡-ʯ &\(\)\{\}\[\]\.:,;\?!\+\-_\$@#~`\^€]*'
          type: string
        phone:
          description: User's new phone number. Maximum length is 50. Pass an empty
            string ("") if you want to clear the current phone number.
          example: +49 99 999999-999
          pattern: '[A-Za-z0-9¡-ʯ &\(\)\{\}\[\]\.:,;\?!\+\-_\$@#~`\^€]*'
          type: string
        isAutoUpdateEnabled:
          description: 'Whether the user''s bank connections will get updated in the
            course of finAPI''s automatic batch update. Note that the automatic batch
            update will only update bank connections where all of the following applies:<br><br>
            - a valid consent exists OR the PIN is stored in finAPI for the bank connection,
            and the related bank does not have volatile PINs (see the ''isVolatile''
            flag of the ''loginCredentials'')<br/> - the user has accepted the latest
            Terms and Conditions (this only applies to users whose mandator doesn''t
            have an AIS license)<br> - the bank connection interface flag ''userActionRequired''
            has to be false<br> - the previous update using the stored credentials
            did not fail due to the credentials being incorrect (or there was no previous
            update with the stored credentials)<br> - the bank that the bank connection
            relates to is included in the automatic batch update (please contact your
            Sys-Admin for details about the batch update configuration)<br>- at least
            one of the bank''s supported data sources can be used by finAPI for your
            client (i.e.: if a bank supports only web scraping, but web scraping is
            disabled for your client, then bank connections of that bank will not
            get updated by the automatic batch update)<br><br>Also note that the automatic
            batch update must generally be enabled for your client for this field
            to have any effect.<br/><br/>WARNING: The automatic update will always
            download transactions and security positions for any account that it updates,
            even if the account was previously imported or updated with ''skipPositionsDownload''
            = true.<br/><br/>Default value is false.'
          example: true
          type: boolean
      type: object
    VerificationStatusResource:
      description: User's verification status
      example:
        isUserVerified: true
        userId: username
      properties:
        userId:
          description: User's identifier
          example: username
          type: string
        isUserVerified:
          description: User's verification status
          example: true
          type: boolean
      required:
      - isUserVerified
      - userId
      type: object
    WebForm:
      description: Container for a Web Form's data
      example:
        serviceResponseBody: '{\n  \"id\": 5,\n  \"bankId\": 277672,\n  \"name\":
          null,\n  \"bankingUserId\": null,\n  \"bankingCustomerId\": null,\n  \"bankingPin\":
          null,\n  \"type\": \"DEMO\",\n  \"updateStatus\": \"IN_PROGRESS\",\n  \"categorizationStatus\":
          \"READY\",\n  \"lastManualUpdate\": null,\n  \"lastAutoUpdate\": null,\n  \"ibanOnlyMoneyTransferSupported\":
          false,\n  \"ibanOnlyDirectDebitSupported\": false,\n  \"collectiveMoneyTransferSupported\":
          false,\n  \"defaultTwoStepProcedureId\": null,\n  \"twoStepProcedures\":
          [],\n  \"interfaces\": [\n {\n \"interface\": \"XS2A\",\n \"loginCredentials\":
          [\n{\n  \"label\": \"PSU-ID\",\n  \"value\": \"XXXXX\"\n},\n{\n  \"label\":
          \"Passwort\",\n  \"value\": null\n}\n ],\n \"defaultTwoStepProcedureId\":
          null,\n \"twoStepProcedures\": [\n{\n  \"procedureId\": \"DEMO-TSP-01\",\n  \"procedureName\":
          \"SMS\",\n  \"procedureChallengeType\": \"TEXT\",\n  \"implicitExecute\":
          false\n},\n{\n  \"procedureId\": \"DEMO-TSP-02\",\n  \"procedureName\":
          \"PUSH\",\n\"procedureChallengeType\": \"TEXT\",\n  \"implicitExecute\":
          false\n}\n ],\n \"aisConsent\": {\n\"status\": \"NOT_PRESENT\",\n\"expiresAt\":
          null\n  },\n  \"lastManualUpdate\": null,\n  \"lastAutoUpdate\": null\n}\n  ],\n  \"accountIds\":
          [\n 5\n  ],\n  \"owners\": null,\n  \"furtherLoginNotRecommended\": false,\n  \"bank\":
          {\n\"id\": 277672,\n\"name\": \"FinAPI Test Bank\",\n\"loginHint\": null,\n\"bic\":
          null,\n\"blzs\": [\n  \"00000000\"\n],\n\"blz\": \"00000000\",\n\"location\":
          null,\n\"city\": null,\n\"isSupported\": true,\n\"isTestBank\": true,\n\"popularity\":
          1,\n\"health\": 100,\n\"loginFieldUserId\": \"Onlinebanking-ID\",\n\"loginFieldCustomerId\":
          null,\n\"loginFieldPin\": \"PIN\",\n\"pinsAreVolatile\": false,\n\"isCustomerIdPassword\":
          false,\n\"supportedDataSources\": [\n  \"FINTS_SERVER\"\n],\n\"interfaces\":
          [\n  {\n\"interface\": \"FINTS_SERVER\",\n\"tppAuthenticationGroup\": null,\n\"loginCredentials\":[\n  {\n\"label\":
          \"Onlinebanking-ID\",\n\"isSecret\": false,\n\"isVolatile\": false\n  },\n{\n\"label\":
          \"PIN\",\n\"isSecret\": true,\n\"isVolatile\": false\n  }\n],\n\"properties\":
          [],\n\"loginHint\": null\n  },\n  {\n\"interface\": \"XS2A\",\n\"tppAuthenticationGroup\":
          null,\n\"loginCredentials\": [\n  {\n\"label\": \"PSU-ID\",\n\"isSecret\":
          false,\n\"isVolatile\": false\n  },\n  {\n\"label\": \"Passwort\",\n \"isSecret\":
          true,\n\"isVolatile\": false\n  }\n],\n\"properties\": [],\n\"loginHint\":
          null\n  }\n],\n\"lastCommunicationAttempt\": \"2019-08-30 06:10:55.000\",\n\"lastSuccessfulCommunication\":
          \"2019-08-30 06:10:55.000\"\n  }\n}'
        serviceResponseCode: 201
        id: 1
        token: 03FhQiom8CJUL7rkRgBMCOF9KXlGL9p7kPpW4puMKDD5QbeRm9E9Vzr1xBcokaxZt5PGRscn8HI8xuL8voLkirocxgFIF7wU8B240R5ccSjfPru9vXTBHBEycmBs8Rk2
        status: COMPLETED
      properties:
        id:
          description: Web Form identifier, as returned in the 451 response of the
            REST service call that initiated the Web Form flow.
          example: 1
          format: int64
          type: integer
        token:
          description: Token for the finAPI Web Form page, as contained in the 451
            response of the REST service call that initiated the Web Form flow (in
            the 'Location' header).
          example: 03FhQiom8CJUL7rkRgBMCOF9KXlGL9p7kPpW4puMKDD5QbeRm9E9Vzr1xBcokaxZt5PGRscn8HI8xuL8voLkirocxgFIF7wU8B240R5ccSjfPru9vXTBHBEycmBs8Rk2
          type: string
        status:
          allOf:
          - $ref: '#/components/schemas/WebFormStatus'
          description: |-
            <strong>Type:</strong> WebFormStatus<br/>
            Status of a Web Form. Possible values are:<br/>&bull; NOT_YET_OPENED - the Web Form URL was not yet called;<br/>&bull; IN_PROGRESS - the Web Form has been opened but not yet submitted by the user;<br/>&bull; COMPLETED - the user has opened and submitted the Web Form;<br/>&bull; ABORTED - the user has opened but then aborted the Web Form, or the Web Form was aborted by the finAPI system because it has expired (this is the case when a Web Form is opened and then not submitted within 10 minutes)
          example: COMPLETED
        serviceResponseCode:
          description: HTTP response code of the REST service call that initiated
            the Web Form flow. This field can be queried as soon as the status becomes
            COMPLETED or ABORTED. Note that it is still not guaranteed in this case
            that the field has a value, i.e. it might be null.
          example: 201
          format: int32
          nullable: true
          type: integer
        serviceResponseBody:
          description: HTTP response body of the REST service call that initiated
            the Web Form flow. This field can be queried as soon as the status becomes
            COMPLETED or ABORTED. Note that it is still not guaranteed in this case
            that the field has a value, i.e. it might be null.
          example: '{\n  \"id\": 5,\n  \"bankId\": 277672,\n  \"name\": null,\n  \"bankingUserId\":
            null,\n  \"bankingCustomerId\": null,\n  \"bankingPin\": null,\n  \"type\":
            \"DEMO\",\n  \"updateStatus\": \"IN_PROGRESS\",\n  \"categorizationStatus\":
            \"READY\",\n  \"lastManualUpdate\": null,\n  \"lastAutoUpdate\": null,\n  \"ibanOnlyMoneyTransferSupported\":
            false,\n  \"ibanOnlyDirectDebitSupported\": false,\n  \"collectiveMoneyTransferSupported\":
            false,\n  \"defaultTwoStepProcedureId\": null,\n  \"twoStepProcedures\":
            [],\n  \"interfaces\": [\n {\n \"interface\": \"XS2A\",\n \"loginCredentials\":
            [\n{\n  \"label\": \"PSU-ID\",\n  \"value\": \"XXXXX\"\n},\n{\n  \"label\":
            \"Passwort\",\n  \"value\": null\n}\n ],\n \"defaultTwoStepProcedureId\":
            null,\n \"twoStepProcedures\": [\n{\n  \"procedureId\": \"DEMO-TSP-01\",\n  \"procedureName\":
            \"SMS\",\n  \"procedureChallengeType\": \"TEXT\",\n  \"implicitExecute\":
            false\n},\n{\n  \"procedureId\": \"DEMO-TSP-02\",\n  \"procedureName\":
            \"PUSH\",\n\"procedureChallengeType\": \"TEXT\",\n  \"implicitExecute\":
            false\n}\n ],\n \"aisConsent\": {\n\"status\": \"NOT_PRESENT\",\n\"expiresAt\":
            null\n  },\n  \"lastManualUpdate\": null,\n  \"lastAutoUpdate\": null\n}\n  ],\n  \"accountIds\":
            [\n 5\n  ],\n  \"owners\": null,\n  \"furtherLoginNotRecommended\": false,\n  \"bank\":
            {\n\"id\": 277672,\n\"name\": \"FinAPI Test Bank\",\n\"loginHint\": null,\n\"bic\":
            null,\n\"blzs\": [\n  \"00000000\"\n],\n\"blz\": \"00000000\",\n\"location\":
            null,\n\"city\": null,\n\"isSupported\": true,\n\"isTestBank\": true,\n\"popularity\":
            1,\n\"health\": 100,\n\"loginFieldUserId\": \"Onlinebanking-ID\",\n\"loginFieldCustomerId\":
            null,\n\"loginFieldPin\": \"PIN\",\n\"pinsAreVolatile\": false,\n\"isCustomerIdPassword\":
            false,\n\"supportedDataSources\": [\n  \"FINTS_SERVER\"\n],\n\"interfaces\":
            [\n  {\n\"interface\": \"FINTS_SERVER\",\n\"tppAuthenticationGroup\":
            null,\n\"loginCredentials\":[\n  {\n\"label\": \"Onlinebanking-ID\",\n\"isSecret\":
            false,\n\"isVolatile\": false\n  },\n{\n\"label\": \"PIN\",\n\"isSecret\":
            true,\n\"isVolatile\": false\n  }\n],\n\"properties\": [],\n\"loginHint\":
            null\n  },\n  {\n\"interface\": \"XS2A\",\n\"tppAuthenticationGroup\":
            null,\n\"loginCredentials\": [\n  {\n\"label\": \"PSU-ID\",\n\"isSecret\":
            false,\n\"isVolatile\": false\n  },\n  {\n\"label\": \"Passwort\",\n \"isSecret\":
            true,\n\"isVolatile\": false\n  }\n],\n\"properties\": [],\n\"loginHint\":
            null\n  }\n],\n\"lastCommunicationAttempt\": \"2019-08-30 06:10:55.000\",\n\"lastSuccessfulCommunication\":
            \"2019-08-30 06:10:55.000\"\n  }\n}'
          nullable: true
          type: string
      required:
      - id
      - serviceResponseBody
      - serviceResponseCode
      - status
      - token
      type: object
    WebFormMode:
      enum:
      - INTERNAL
      - EXTERNAL
      - DISABLED
      type: string
    WebFormStatus:
      enum:
      - NOT_YET_OPENED
      - IN_PROGRESS
      - COMPLETED
      - ABORTED
      type: string
  securitySchemes:
    finapi_auth:
      flows:
        clientCredentials:
          scopes:
            all: no limitations
          tokenUrl: /oauth/token
        password:
          scopes:
            all: no limitations
          tokenUrl: /oauth/token
      type: oauth2
