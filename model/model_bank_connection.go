/*
 * finAPI RESTful Services
 *
 * finAPI RESTful Services
 *
 * API version: v1.71.0.b1
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package model

// Container for a bank connection's data
type BankConnection struct {
	// Bank connection identifier
	Id int64 `json:"id"`
	// Identifier of the bank that this connection belongs to. NOTE: This field is DEPRECATED and will get removed at some point. Please refer to the 'bank' field instead.
	BankId int64 `json:"bankId"`
	// Bank that this connection belongs to
	Bank *Bank `json:"bank"`
	// Custom name for the bank connection. You can set this field with the 'Edit a bank connection' service, as well as during the initial import of the bank connection. Maximum length is 64.
	Name string `json:"name,omitempty"`
	// Stored online banking user ID credential. This field may be null for the 'demo connection'. Note that if your client has no license for processing banking credentials then a banking user ID will always be 'XXXXX'.
	BankingUserId string `json:"bankingUserId,omitempty"`
	// Stored online banking customer ID credential. Note that if your client has no license for processing banking credentials or if this field contains a value that requires password protection (see field ‘isCustomerIdPassword’ in Bank Resource) then the banking customer ID will always be 'XXXXX'.
	BankingCustomerId string `json:"bankingCustomerId,omitempty"`
	// Stored online banking PIN. If a PIN is stored, this will always be 'XXXXX'.
	BankingPin string `json:"bankingPin,omitempty"`
	// Bank connection type
	Type_ string `json:"type"`
	// Current status of data download (account balances and transactions/securities). The POST /bankConnections/import and POST /bankConnections/<id>/update services will set this flag to IN_PROGRESS before they return. Once the import or update has finished, the status will be changed to READY.
	UpdateStatus string `json:"updateStatus"`
	// Current status of transactions categorization. The asynchronous download process that is triggered by a call of the POST /bankConnections/import and POST /bankConnections/<id>/update services (and also by finAPI's auto update, if enabled) will set this flag to PENDING once the download has finished and a categorization is scheduled for the imported transactions. A separate categorization thread will then start to categorize the transactions (during this process, the status is IN_PROGRESS). When categorization has finished, the status will be (re-)set to READY. Note that the current categorization status should only be queried after the download has finished, i.e. once the download status has switched from IN_PROGRESS to READY.
	CategorizationStatus string `json:"categorizationStatus"`
	// Result of the last manual update of this bank connection. If no manual update has ever been done so far, then this field will not be set.
	LastManualUpdate *UpdateResult `json:"lastManualUpdate,omitempty"`
	// Result of the last auto update of this bank connection (ran by finAPI's automatic batch update process). If no auto update has ever been done so far, then this field will not be set.
	LastAutoUpdate *UpdateResult `json:"lastAutoUpdate,omitempty"`
	// Available two-step-procedures for this bank connection, used for submitting a money transfer or direct debit request (see /accounts/requestSepaMoneyTransfer or /requestSepaDirectDebit). The available two-step-procedures are re-evaluated each time this bank connection is updated (/bankConnections/update). This means that this list may change as a result of an update.
	TwoStepProcedures []TwoStepProcedure `json:"twoStepProcedures,omitempty"`
	// Whether this bank connection accepts money transfer requests where the recipient's account is defined just by the IBAN (without an additional BIC). This field is re-evaluated each time this bank connection is updated. See also: /accounts/requestSepaMoneyTransfer
	IbanOnlyMoneyTransferSupported bool `json:"ibanOnlyMoneyTransferSupported"`
	// Whether this bank connection accepts direct debit requests where the debitor's account is defined just by the IBAN (without an additional BIC). This field is re-evaluated each time this bank connection is updated. See also: /accounts/requestSepaDirectDebit
	IbanOnlyDirectDebitSupported bool `json:"ibanOnlyDirectDebitSupported"`
	// <b>DEPRECATED! DO NOT USE THIS FIELD, AS IT IS UNRELIABLE. INSTEAD, REFER TO THE 'supportedOrders' FIELD IN THE ACCOUNT RESOURCE.</b><br/><br/>Whether this bank connection supports submitting collective money transfers. This field is re-evaluated each time this bank connection is updated. See also: /accounts/requestSepaMoneyTransfer
	CollectiveMoneyTransferSupported bool `json:"collectiveMoneyTransferSupported"`
	// The default two-step-procedure. Must match one of the available 'procedureId's from the 'twoStepProcedures' list. When this field is set, you can execute two-step-procedures (accounts/requestSepaMoneyTransfer or /requestSepaDirectDebit) without having to explicitly set a procedure. finAPI will use the default procedure in such cases. Note that the list of available procedures of a bank connection may change as a result of an update of the connection, and if this field references a procedure that is no longer available after an update, finAPI will automatically clear the default procedure (set it to null).
	DefaultTwoStepProcedureId string `json:"defaultTwoStepProcedureId,omitempty"`
	// Identifiers of the accounts that belong to this bank connection
	AccountIds []int64 `json:"accountIds"`
	// Information about the owner(s) of the bank connection
	Owners []BankConnectionOwner `json:"owners,omitempty"`
}
